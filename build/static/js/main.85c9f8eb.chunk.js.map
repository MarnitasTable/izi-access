{"version":3,"sources":["components/HomePage/marnita_logo.png","redux/reducers/errorsReducer.js","redux/reducers/loginModeReducer.js","redux/reducers/userReducer.js","redux/reducers/current360Reducer.js","redux/reducers/all360sReducer.js","redux/reducers/allUsersReducer.js","redux/reducers/userControlsReducer.js","redux/reducers/index.js","redux/sagas/loginSaga.js","redux/sagas/registrationSaga.js","redux/sagas/userSaga.js","redux/sagas/all360sSaga.js","redux/sagas/current360Saga.js","redux/sagas/allUsersSaga.js","redux/sagas/userControlsSaga.js","redux/sagas/index.js","components/LogOutButton/LogOutButton.js","components/Nav/Nav.js","components/Footer/Footer.js","components/Login/Login.js","components/CreateUser/CreateUser.js","components/ProtectedRoute/ProtectedRoute.js","components/Create360/Create360.js","components/Dashboard/Dashboard.js","components/Generate360/colors.js","components/Generate360/EditDialogs/GoalAssessmentsEditDialog.js","components/Generate360/ExpansionPanels/GoalAssessmentsExpansionPanel.js","components/Generate360/Generate360.js","components/HomePage/HomePage.js","components/Table360s/Table360s.js","components/Manage360s/Manage360s.js","components/ManageUsers/ManageUsers.js","components/UserProfile/UserProfile.js","components/View360/View360.js","components/App/App.js","index.js"],"names":["module","exports","__webpack_require__","p","combineReducers","loginMessage","state","arguments","length","undefined","type","registrationMessage","loginMode","userReducer","action","payload","current360","updateNeeded","goalsAssessment","Object","objectSpread","defineProperty","section","content","all360s","published","unpublished","allUsers","pendingRequests","deactivatedUsers","userControls","user","rootReducer","errors","loginUser","logoutUser","loginSaga","config","regenerator_default","a","wrap","_context","prev","next","put","headers","Content-Type","withCredentials","axios","post","t0","console","log","response","status","stop","_marked","this","_context2","_marked2","_context3","takeLatest","_marked3","registerUser","registrationSaga","registrationSaga_marked","registrationSaga_marked2","fetchUser","userSaga","get","sent","data","userSaga_marked","userSaga_marked2","fetchAll360s","fetchPublished","fetchUnpublished","fetch360SearchPublished","fetch360SearchUnpublished","all360sSaga","all360sSaga_marked","all360sSaga_marked2","all360sSaga_marked3","_context4","_marked4","_context5","_marked5","_context6","_marked6","changePrivateStatus","changePublishStatus","create360","delete360","edit360","fetch360","fetch360Section","current360Saga","call","concat","id","current360Saga_marked","current360Saga_marked2","current360Saga_marked3","delete","current360Saga_marked4","current360Saga_marked5","current360Saga_marked6","_context7","params","_marked7","_context8","_marked8","fetchAllUsers","fetchPendingRequests","fetchDeactivatedUsers","fetchUsersSearch","fetchUsersSort","allUsersSaga","allUsersSaga_marked","allUsersSaga_marked2","allUsersSaga_marked3","allUsersSaga_marked4","allUsersSaga_marked5","allUsersSaga_marked6","fetchUserInfo","add360Access","remove360Access","request360Access","editUserInfo","changeUserStatus","userControlsSaga","userControlsSaga_marked","userControlsSaga_marked2","userControlsSaga_marked3","userControlsSaga_marked4","userControlsSaga_marked5","userControlsSaga_marked6","userControlsSaga_marked7","rootSaga","all","sagas_marked","connect","props","react_default","createElement","className","onClick","dispatch","Link","to","Fragment","components_LogOutButton_LogOutButton","Footer","Login","username","password","login","event","preventDefault","_this","handleInputChangeFor","propertyName","setState","target","value","_this2","classes","role","onSubmit","form","htmlFor","name","onChange","Component","withStyles","backgroundColor","width","height","margin","padding","borderRadius","CreateUser","ComponentToShow","ComponentToProtect","component","otherProps","objectWithoutProperties","Route","assign","Create360","client","date","location","category","returnToDashboard","history","push","handleChange","handleSwitch","newValue","handleSubmit","container","JSON","stringify","Button_default","variant","Typography_default","header","TextField_default","label","textField","placeholder","FormControl_default","formControl","InputLabel_default","ref","InputLabelRef","Select_default","input","OutlinedInput_default","labelWidth","MenuItem_default","Switch_default","checked","color","reduxState","marginBottom","textAlign","Dashboard","handleCreate","handleView","handleUsers","div","style","fontSize","justifyContent","root","document","querySelector","colors","purple","window","getComputedStyle","getPropertyValue","purpleHover","red","redHover","pink","pinkHover","orange","orangeHover","lightGrey","GoalsAssessmentEditDialog","open","updating","handleChangeFor","handleClickOpen","current360Id","handleClickClose","handleSave","loadCurrentData","newState","keys","map","key","isNaN","row","index","size","Dialog_default","onClose","aria-labelledby","scroll","fullWidth","maxWidth","paper","DialogTitle_default","DialogContent_default","DialogContentText_default","inputGroup","autoFocus","description","multiline","spaceBetween","desired","delivered","difference","percent","comments","d","DialogActions_default","styles","display","flexWrap","CustomTableCell","theme","head","body","TableCell","GoalsAssessmentExpansionPanel","active","ExpansionPanel_default","defaultExpanded","ExpansionPanelSummary_default","expandIcon","ExpandMore_default","summary","title","heading","subheading","ExpansionPanelDetails_default","details","Paper_default","rootTable","Table_default","table","TableHead_default","TableRow_default","TableBody_default","scope","centerText","Divider_default","ExpansionPanelActions_default","FormControlLabel_default","control","switchBase","colorSwitchBase","colorChecked","bar","colorBar","GoalAssessmentsEditDialog","overflowX","&$colorChecked","& + $colorBar","alignItems","icon","verticalAlign","flexBasis","fontWeight","minWidth","Generate360","GoalAssessmentsExpansionPanel","Home","index_es","item","xs","Card_default","card","CardActionArea_default","CardContent_default","src","MarnitaLogo","alt","image","gutterBottom","CardActions_default","cardActions","palette","common","black","white","createData","calories","fat","carbs","protein","tacos","rows","marginTop","spacing","unit","&:nth-of-type(odd)","background","default","Table360s_CustomTableCell","ranges","Manage360s","unpublishedName","unpublishedLocation","unpublishedDate","unpublishedCategory","publishedName","publishedLocation","publishedDate","publishedCategory","searchPublished","searchUnpublished","returnToDash","goToGenerator","select","classNames","InputProps","startAdornment","InputAdornment_default","position","option","Table360s","withoutLabel","ManageUsers","UserProfile","View360","App","HashRouter","components_Nav_Nav","Switch","Redirect","exact","from","path","components_ProtectedRoute_ProtectedRoute","render","components_Footer_Footer","sagaMiddleware","createSagaMiddleware","middlewareList","store","createStore","applyMiddleware","apply","run","ReactDOM","react_redux_es","components_App_App","getElementById"],"mappings":"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","file":"static/js/main.85c9f8eb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/marnita_logo.cf47a303.png\";","import { combineReducers } from 'redux';\n\n// loginMessage holds the string that will display\n// on the login screen if there's an error\nconst loginMessage = (state = '', action) => {\n  switch (action.type) {\n    case 'CLEAR_LOGIN_ERROR':\n      return '';\n    case 'LOGIN_INPUT_ERROR':\n      return 'Enter your username and password!';\n    case 'LOGIN_FAILED':\n      return 'Oops! The username and password didn\\'t match. Try again!';\n    case 'LOGIN_FAILED_NO_CODE':\n      return 'Oops! Something went wrong! Is the server running?';\n    default:\n      return state;\n  }\n};\n\n// registrationMessage holds the string that will display\n// on the registration screen if there's an error\nconst registrationMessage = (state = '', action) => {\n  switch (action.type) {\n    case 'CLEAR_REGISTRATION_ERROR':\n      return '';\n    case 'REGISTRATION_INPUT_ERROR':\n      return 'Choose a username and password!';\n    case 'REGISTRATION_FAILED':\n      return 'Oops! That didn\\'t work. The username might already be taken. Try again!';\n    default:\n      return state;\n  }\n};\n\n// make one object that has keys loginMessage, registrationMessage\n// these will be on the redux state at:\n// state.errors.loginMessage and state.errors.registrationMessage\nexport default combineReducers({\n  loginMessage,\n  registrationMessage,\n});\n","const loginMode = (state = 'login', action) => {\n    switch (action.type) {\n      case 'SET_TO_LOGIN_MODE':\n        return 'login';\n      case 'SET_TO_REGISTER_MODE':\n        return 'register';\n      default:\n        return state;\n    }\n  };\n\n// loginMode will be on the redux state at:\n// state.loginMode\n  export default loginMode;\n  ","const userReducer = (state = {}, action) => {\n  switch (action.type) {\n    case 'SET_USER':\n      return action.payload;\n    case 'UNSET_USER':\n      return {};\n    default:\n      return state;\n  }\n};\n\n// user will be on the redux state at:\n// state.user\nexport default userReducer;\n","const current360 = (state = {updateNeeded: {goalsAssessment: false}, goalsAssessment: []}, action) => {\n    switch (action.type) {\n      case 'SET_360':\n        return action.payload;\n      case 'CURRENT_360_SECTION_NEEDS_UPDATE':\n        return {...state, updateNeeded: {\n          ...state.updateNeeded,\n          [action.payload.section]: true\n        }};\n      case 'CURRENT_360_SECTION_UPDATE_COMPLETE':\n        return {...state, updateNeeded: {\n          ...state.updateNeeded,\n          [action.payload.section]: false\n        }};\n      case 'SET_360_SECTION':\n        return {...state, [action.payload.section]: action.payload.content};\n      default:\n        return state;\n    }\n  };\n  \nexport default current360;\n  ","const all360s = (state =  {published: [], unpublished: [] }, action) => {\n    switch (action.type) {\n      case 'SET_PUBLISHED':\n        return { ...state, published: action.payload };\n      case 'SET_UNPUBLISHED':\n        return { ...state, unpublished: action.payload };\n      default:\n        return state;\n    }\n  };\n  \nexport default all360s;\n  ","const allUsers = (state =  { allUsers: [], pendingRequests: [], deactivatedUsers: [] }, action) => {\n  switch (action.type) {\n    case 'SET_ALL_USERS':\n      return { ...state, allUsers: action.payload };\n    case 'SET_PENDING_REQUESTS':\n      return { ...state, pendingRequests: action.payload };\n    case 'SET_DEACTIVATED_USERS':\n      return { ...state, deactivatedUsers: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport default allUsers;\n","const userControls = (state =  { user: {} }, action) => {\n  switch (action.type) {\n    case 'SET_USER_INFO':\n      return { ...state, user: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport default userControls;\n","import { combineReducers } from 'redux';\nimport errors from './errorsReducer';\nimport loginMode from './loginModeReducer';\nimport user from './userReducer';\nimport current360 from './current360Reducer';\nimport all360s from './all360sReducer';\nimport allUsers from './allUsersReducer';\nimport userControls from './userControlsReducer';\n\n\n\n// rootReducer is the primary reducer for our entire project\n// It bundles up all of the other reducers so our project can use them.\n// This is imported in index.js as rootSaga\n\n// Lets make a bigger object for our store, with the objects from our reducers.\n// This is what we get when we use 'state' inside of 'mapStateToProps'\nconst rootReducer = combineReducers({\n  errors, // contains registrationMessage and loginMessage\n  loginMode, // will have a value of 'login' or 'registration' to control which screen is shown\n  user, // will have an id and username if someone is logged in\n  current360, // stores the ID for the 360 currently being worked on or edited\n  all360s, // stores general info for all 360s to be displayed in tables\n  allUsers, // stores user info for all users to be displayed on the user tables\n  userControls, // stores user information to be able to control user information (REVIEW)\n});\n\nexport default rootReducer;\n","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n// worker Saga: will be fired on \"LOGIN\" actions\nfunction* loginUser(action) {\n  try {\n    // clear any existing error on the login page\n    yield put({ type: 'CLEAR_LOGIN_ERROR' });\n\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n      withCredentials: true,\n    };\n\n    // send the action.payload as the body\n    // the config includes credentials which\n    // allow the server session to recognize the user\n    yield axios.post('api/user/login', action.payload, config);\n    \n    // after the user has logged in\n    // get the user information from the server\n    yield put({type: 'FETCH_USER'});\n  } catch (error) {\n    console.log('Error with user login:', error);\n    if (error.response.status === 401) {\n      // The 401 is the error status sent from passport\n      // if user isn't in the database or\n      // if the username and password don't match in the database\n      yield put({ type: 'LOGIN_FAILED' });\n    } else {\n      // Got an error that wasn't a 401\n      // Could be anything, but most common cause is the server is not started\n      yield put({ type: 'LOGIN_FAILED_NO_CODE' });\n    }\n  }\n}\n\n// worker Saga: will be fired on \"LOGOUT\" actions\nfunction* logoutUser(action) {\n  try {\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n      withCredentials: true,\n    };\n\n    // the config includes credentials which\n    // allow the server session to recognize the user\n    // when the server recognizes the user session\n    // it will end the session\n    yield axios.post('api/user/logout', config);\n\n    // now that the session has ended on the server\n    // remove the client-side user object to let\n    // the client-side code know the user is logged out\n    yield put({ type: 'UNSET_USER' });\n\n  } catch (error) {\n    console.log('Error with user logout:', error);\n  }\n}\n\nfunction* loginSaga() {\n  yield takeLatest('LOGIN', loginUser);\n  yield takeLatest('LOGOUT', logoutUser);\n}\n\nexport default loginSaga;\n","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n// worker Saga: will be fired on \"REGISTER\" actions\nfunction* registerUser(action) {\n  try {\n    // clear any existing error on the registration page\n    yield put({ type: 'CLEAR_REGISTRATION_ERROR' });\n\n    // passes the username and password from the payload to the server\n    yield axios.post('api/user/register', action.payload);\n\n    // automatically log a user in after registration\n    yield put({ type: 'LOGIN', payload: action.payload });\n    \n    // set to 'login' mode so they see the login screen\n    // after registration or after they log out\n    yield put({type: 'SET_TO_LOGIN_MODE'});\n  } catch (error) {\n      console.log('Error with user registration:', error);\n      yield put({type: 'REGISTRATION_FAILED'});\n  }\n}\n\nfunction* registrationSaga() {\n  yield takeLatest('REGISTER', registerUser);\n}\n\nexport default registrationSaga;\n","import axios from 'axios';\nimport { put, takeLatest } from 'redux-saga/effects';\n\n// worker Saga: will be fired on \"FETCH_USER\" actions\nfunction* fetchUser() {\n  try {\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n      withCredentials: true,\n    };\n\n    // the config includes credentials which\n    // allow the server session to recognize the user\n    // If a user is logged in, this will return their information\n    // from the server session (req.user)\n    const response = yield axios.get('api/user', config);\n\n    // now that the session has given us a user object\n    // with an id and username set the client-side user object to let\n    // the client-side code know the user is logged in\n    yield put({ type: 'SET_USER', payload: response.data });\n  } catch (error) {\n    console.log('User get request failed', error);\n  }\n}\n\nfunction* userSaga() {\n  yield takeLatest('FETCH_USER', fetchUser);\n}\n\nexport default userSaga;\n","import axios from 'axios';\nimport { put, call, takeLatest } from 'redux-saga/effects';\n\nfunction* fetchAll360s() {\n  try {\n    \n  } \n  catch (error) {\n    console.log('error', error);\n  }\n};\n\nfunction* fetchPublished() {\n  try {\n    \n  } \n  catch (error) {\n    console.log('error', error);\n  }\n};\n\nfunction* fetchUnpublished() {\n  try {\n    \n  } \n  catch (error) {\n    console.log('error', error);\n  }\n};\n\nfunction* fetch360SearchPublished() {\n  try {\n    \n  } \n  catch (error) {\n    console.log('error', error);\n  }\n};\n\nfunction* fetch360SearchUnpublished() {\n  try {\n    \n  } \n  catch (error) {\n    console.log('error', error);\n  }\n};\n\nfunction* all360sSaga() {\n  yield takeLatest( 'FETCH_ALL_360s', fetchAll360s );\n  yield takeLatest( 'FETCH_PUBLISHED', fetchPublished );\n  yield takeLatest( 'FETCH_UNPUBLISHED', fetchUnpublished );\n  yield takeLatest( 'FETCH_360_SEARCH_PUBLISHED', fetch360SearchPublished );\n  yield takeLatest( 'FETCH_360_SEARCH_UNPUBLISHED', fetch360SearchUnpublished );\n};\n\nexport default all360sSaga;","import axios from 'axios';\nimport { put, call, takeLatest } from 'redux-saga/effects';\n\nfunction* changePrivateStatus(action) {\n  try {\n    yield call(axios.put, `//${action.payload.id}`, {data: action.payload.status} );\n  } \n  catch (error) {\n    console.log('error', error);\n  }\n};\n\nfunction* changePublishStatus(action) {\n  try {\n    yield call(axios.put, `//${action.payload.id}`, {data: action.payload.status} );\n  } \n  catch (error) {\n    console.log('error', error);\n  }\n};\n\nfunction* create360(action) {\n  try {\n    const response = yield call(axios.post, '/', {data: action.payload} );\n    yield put({ type: 'FETCH_360', payload: response });\n  } \n  catch (error) {\n    console.log('error', error);\n  }\n};\n\nfunction* delete360(action) {\n  try {\n    yield call(axios.delete, `//${action.payload}` )\n  } \n  catch (error) {\n    console.log('error', error);\n  }\n};\n\nfunction* edit360(action) {\n  console.log('inside edit360. action.payload:', action.payload);\n  console.log('url:','current360/edit/'+action.payload.section);\n  try {\n    yield call(axios.put, `/current360/edit/${action.payload.section}`, {data: action.payload.data} );\n  } \n  catch (error) {\n    console.log('error', error);\n  }\n};\n\nfunction* fetch360(action) {\n  try {\n    const response = yield call(axios.get, `//${action.payload}`);\n    yield put({ type: 'SET_360', payload: response });\n  } \n  catch (error) {\n    console.log('error', error);\n  }\n};\n\nfunction* fetch360Section(action) {\n  console.log('inside fetch360Section in saga');\n  try {\n    const response = yield call(axios.get, `/current360/section`, {params: action.payload});\n    yield put({ type: 'SET_360_SECTION', payload: {section: action.payload.section, content: response.data} });\n    yield put({ type: 'CURRENT_360_SECTION_NEEDS_UPDATE', payload: {section: action.payload.section} });\n  } \n  catch (error) {\n    console.log('error', error);\n  }\n}\n\nfunction* current360Saga() {\n  yield takeLatest( 'CHANGE_PRIVATE_STATUS', changePrivateStatus );\n  yield takeLatest( 'CHANGE_PUBLISH_STATUS', changePublishStatus );\n  yield takeLatest( 'CREATE_360', create360 );\n  yield takeLatest( 'DELETE_360', delete360 );\n  yield takeLatest( 'EDIT_360', edit360 );\n  yield takeLatest( 'FETCH_360', fetch360 );\n  yield takeLatest( 'FETCH_360_SECTION', fetch360Section);\n};\n\nexport default current360Saga;","import axios from 'axios';\nimport { put, call, takeLatest } from 'redux-saga/effects';\n\nfunction* fetchAllUsers() {\n  try {\n    \n  } \n  catch (error) {\n    console.log('error', error);\n  }\n};\n\nfunction* fetchPendingRequests() {\n  try {\n    \n  } \n  catch (error) {\n    console.log('error', error);\n  }\n};\n\nfunction* fetchDeactivatedUsers() {\n  try {\n    \n  } \n  catch (error) {\n    console.log('error', error);\n  }\n};\n\nfunction* fetchUsersSearch() {\n  try {\n    \n  } \n  catch (error) {\n    console.log('error', error);\n  }\n};\n\nfunction* fetchUsersSort() {\n  try {\n    \n  } \n  catch (error) {\n    console.log('error', error);\n  }\n};\n\nfunction* allUsersSaga() {\n  yield takeLatest( 'FETCH_ALL_USERS', fetchAllUsers );\n  yield takeLatest( 'FETCH_PENDING_REQUESTS', fetchPendingRequests );\n  yield takeLatest( 'FETCH_DEACTIVATED_USERS', fetchDeactivatedUsers );\n  yield takeLatest( 'FETCH_USERS_SEARCH', fetchUsersSearch );\n  yield takeLatest( 'FETCH_USERS_SORT', fetchUsersSort );\n};\n\nexport default allUsersSaga;","import axios from 'axios';\nimport { put, call, takeLatest } from 'redux-saga/effects';\n\nfunction* fetchUserInfo() {\n  try {\n    \n  } \n  catch (error) {\n    console.log('error', error);\n  }\n};\n\nfunction* add360Access() {\n  try {\n    \n  } \n  catch (error) {\n    console.log('error', error);\n  }\n};\n\nfunction* remove360Access() {\n  try {\n    \n  } \n  catch (error) {\n    console.log('error', error);\n  }\n};\n\nfunction* request360Access() {\n  try {\n    \n  } \n  catch (error) {\n    console.log('error', error);\n  }\n};\n\nfunction* editUserInfo() {\n  try {\n    \n  } \n  catch (error) {\n    console.log('error', error);\n  }\n};\n\nfunction* changeUserStatus() {\n  try {\n    \n  } \n  catch (error) {\n    console.log('error', error);\n  }\n};\n\nfunction* userControlsSaga() {\n  yield takeLatest( 'FETCH_USER_INFO', fetchUserInfo );\n  yield takeLatest( 'ADD_360_ACCESS', add360Access );\n  yield takeLatest( 'REMOVE_360_ACCESS', remove360Access );\n  yield takeLatest( 'REQUEST_360_ACCESS', request360Access );\n  yield takeLatest( 'EDIT_USER_INFO', editUserInfo );\n  yield takeLatest( 'CHANGE_USER_STATUS', changeUserStatus );\n}\n\nexport default userControlsSaga;","import { all } from 'redux-saga/effects';\nimport loginSaga from './loginSaga';\nimport registrationSaga from './registrationSaga';\nimport userSaga from './userSaga';\nimport all360sSaga from './all360sSaga';\nimport current360Saga from './current360Saga';\nimport allUsersSaga from './allUsersSaga';\nimport userControlsSaga from './userControlsSaga';\n\n\n// rootSaga is the primary saga.\n// It bundles up all of the other sagas so our project can use them.\n// This is imported in index.js as rootSaga\n\n// some sagas trigger other sagas, as an example\n// the registration triggers a login\n// and login triggers setting the user\nexport default function* rootSaga() {\n  yield all([\n    loginSaga(),\n    registrationSaga(),\n    userSaga(),\n    all360sSaga(),\n    current360Saga(),\n    allUsersSaga(),\n    userControlsSaga(),\n  ]);\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nconst LogOutButton = props => (\n  <button\n    // This button shows up in multiple locations and is styled differently\n    // because it's styled differently depending on where it is used, the className\n    // is passed to it from it's parents through React props\n    className={props.className}\n    onClick={() => props.dispatch({ type: 'LOGOUT' })}\n  >\n    Log Out\n  </button>\n);\n\n// This component doesn't need 'mapStateToProps'\n// because it doesn't care what the current state is.\n// No matter what the redux state is, this button will always be a log out button\n// this component still needs 'connect' though, because it is going to dispatch a redux action\nexport default connect()(LogOutButton);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport LogOutButton from '../LogOutButton/LogOutButton';\nimport './Nav.css';\n\nconst Nav = (props) => (\n  <div className=\"nav\">\n    <Link to=\"/home\">\n      <h2 className=\"nav-title\">MarnitaConnect</h2>\n    </Link>\n    <div className=\"nav-right\">\n      {props.user.id && (\n        <>\n          <Link className=\"nav-link\" to=\"/dashboard\">\n            Dashboard\n          </Link>\n        </>\n      )}\n      <Link className=\"nav-link\" to=\"/profile\">\n        {/* Show this link if they are logged in or not,\n        but call this link 'Home' if they are logged in,\n        and call this link 'Login / Register' if they are not */}\n        {props.user.id ? 'Profile' : 'Login / Register'}\n      </Link>\n      {/* Show the link to the info page and the logout button if the user is logged in */}\n      {props.user.id && (\n        <>\n          <LogOutButton className=\"nav-link\"/>\n        </>\n      )}\n    </div>\n  </div>\n);\n\n// Instead of taking everything from state, we just want the user\n// object to determine if they are logged in\n// if they are logged in, we show them a few more links \n// if you wanted you could write this code like this:\n// const mapStateToProps = ({ user }) => ({ user });\nconst mapStateToProps = state => ({\n  user: state.user,\n});\n\nexport default connect(mapStateToProps)(Nav);\n","import React from 'react';\nimport './Footer.css'\n\n// This is one of our simplest components\n// It doesn't have local state, so it can be a function component.\n// It doesn't dispatch any redux actions or display any part of redux state\n// or even care what the redux state is, so it doesn't need 'connect()'\n\nconst Footer = () => (\n  <footer>\n    &copy; Marnita's Table\n  </footer>\n);\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\n// Material-UI\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n\nclass Login extends Component {\n  state = {\n    username: '',\n    password: '',\n  };\n\n  login = (event) => {\n    event.preventDefault();\n\n    if (this.state.username && this.state.password) {\n      this.props.dispatch({\n        type: 'LOGIN',\n        payload: {\n          username: this.state.username,\n          password: this.state.password,\n        },\n      });\n    } else {\n      this.props.dispatch({ type: 'LOGIN_INPUT_ERROR' });\n    }\n  } // end login\n\n  handleInputChangeFor = propertyName => (event) => {\n    this.setState({\n      [propertyName]: event.target.value,\n    });\n  }\n\n  render() {\n    const { classes } = this.props;\n    \n    return (\n      <div>\n        {this.props.errors.loginMessage && (\n          <h2\n            className=\"alert\"\n            role=\"alert\"\n          >\n            {this.props.errors.loginMessage}\n          </h2>\n        )}\n        <form onSubmit={this.login} className={classes.form}>\n          <h1>Login</h1>\n          <div>\n            <label htmlFor=\"username\">\n              Username:\n              <input\n                type=\"text\"\n                name=\"username\"\n                value={this.state.username}\n                onChange={this.handleInputChangeFor('username')}\n              />\n            </label>\n          </div>\n          <div>\n            <label htmlFor=\"password\">\n              Password:\n              <input\n                type=\"password\"\n                name=\"password\"\n                value={this.state.password}\n                onChange={this.handleInputChangeFor('password')}\n              />\n            </label>\n          </div>\n          <div>\n            <input\n              className=\"log-in\"\n              type=\"submit\"\n              name=\"submit\"\n              value=\"Log In\"\n            />\n          </div>\n        </form>\n        <center>\n          <button\n            type=\"button\"\n            className=\"link-button\"\n            onClick={() => {this.props.dispatch({type: 'SET_TO_REGISTER_MODE'})}}\n          >\n            Register\n          </button>\n        </center>\n      </div>\n    );\n  }\n}\n\nconst styles = {\n  form: {\n    backgroundColor: \"var(--main-light-grey)\",\n    width: \"30%\",\n    height: \"250px\",\n    margin: \"20px auto\",\n    padding: \"25px\",\n    borderRadius: \"2px\",\n  }\n};\n\nconst mapReduxStateToProps = (state) => ({\n errors: state.errors\n});\n\nexport default connect(mapReduxStateToProps)(withStyles(styles)(Login));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\n// Material-UI\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n\nclass CreateUser extends Component {\n  state = {\n    username: '',\n    password: '',\n  };\n\n  registerUser = (event) => {\n    event.preventDefault();\n\n    if (this.state.username && this.state.password) {\n      this.props.dispatch({\n        type: 'REGISTER',\n        payload: {\n          username: this.state.username,\n          password: this.state.password,\n        },\n      });\n    } else {\n      this.props.dispatch({type: 'REGISTRATION_INPUT_ERROR'});\n    }\n  } // end registerUser\n\n  handleInputChangeFor = propertyName => (event) => {\n    this.setState({\n      [propertyName]: event.target.value,\n    });\n  }\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div>\n        {this.props.errors.registrationMessage && (\n          <h2\n            className=\"alert\"\n            role=\"alert\"\n          >\n            {this.props.errors.registrationMessage}\n          </h2>\n        )}\n        <form onSubmit={this.registerUser} className={classes.form}>\n          <h1>Register User</h1>\n          <div>\n            <label htmlFor=\"username\">\n              Username:\n              <input\n                type=\"text\"\n                name=\"username\"\n                value={this.state.username}\n                onChange={this.handleInputChangeFor('username')}\n              />\n            </label>\n          </div>\n          <div>\n            <label htmlFor=\"password\">\n              Password:\n              <input\n                type=\"password\"\n                name=\"password\"\n                value={this.state.password}\n                onChange={this.handleInputChangeFor('password')}\n              />\n            </label>\n          </div>\n          <div>\n            <input\n              className=\"register\"\n              type=\"submit\"\n              name=\"submit\"\n              value=\"Register\"\n            />\n          </div>\n        </form>\n        <center>\n          <button\n            type=\"button\"\n            className=\"link-button\"\n            onClick={() => {this.props.dispatch({type: 'SET_TO_LOGIN_MODE'})}}\n          >\n            Login\n          </button>\n        </center>\n      </div>\n    );\n  }\n}\n\nconst styles = {\n  form: {\n    backgroundColor: \"var(--main-light-grey)\",\n    width: \"30%\",\n    height: \"250px\",\n    margin: \"20px auto\",\n    padding: \"25px\",\n    borderRadius: \"2px\",\n  }\n};\n\nconst mapReduxStateToProps = (state) => ({\n errors: state.errors\n});\n\nexport default connect(mapReduxStateToProps)(withStyles(styles)(CreateUser));","import React from 'react';\nimport {Route} from 'react-router-dom'\nimport {connect} from 'react-redux';\nimport Login from '../Login/Login';\nimport CreateUser from '../CreateUser/CreateUser';\n\n// A Custom Wrapper Component -- This will keep our code DRY.\n// Responsible for watching redux state, and returning an appropriate component\n// API for this component is the same as a regular route\n\n// THIS IS NOT SECURITY! That must be done on the server\n// A malicious user could change the code and see any view\n// so your server-side route must implement real security\n// by checking req.isAuthenticated for authentication\n// and by checking req.user for authorization\n\nconst ProtectedRoute = (props) => {\n  // Using destructuring, this takes ComponentToProtect from component\n  // prop and grabs all other props to pass them along to Route\n  const {\n    // Alias prop 'component' as 'ComponentToProtect'\n    component: ComponentToProtect,\n    user,\n    loginMode,\n    ...otherProps\n  } = props;\n\n  let ComponentToShow;\n\n  if(user.id) {\n    // if the user is logged in (only logged in users have ids)\n    // show the component that is protected\n    ComponentToShow = ComponentToProtect;\n  } else if (loginMode === 'login') {\n    // if they are not logged in, check the loginMode on Redux State\n    // if the mode is 'login', show the LoginPage\n    ComponentToShow = Login;\n  } else {\n    // the the user is not logged in and the mode is not 'login'\n    // show the RegisterPage\n    ComponentToShow = CreateUser;\n  }\n\n  // We return a Route component that gets added to our list of routes\n  return (\n      <Route\n        // all props like 'exact' and 'path' that were passed in\n        // are now passed along to the 'Route' Component\n        {...otherProps}\n        component={ComponentToShow}\n      />\n  )\n}\n\n// Instead of taking everything from state, we just want the user and loginMode\n// to determine which page we should show the user\n// if you wanted you could write this code like this:\n// const mapStateToProps = ({ user, loginMode }) => ({ user, loginMode });\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user,\n    loginMode: state.loginMode,\n  }\n}\n\nexport default connect(mapStateToProps)(ProtectedRoute)\n\n\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\n// Material-UI\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Switch from '@material-ui/core/Switch';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\n\nconst styles = {\n  container: {\n    margin: 25\n  },\n  textField: {\n    width: 400,\n    marginBottom: 10\n  },\n  form: {\n    textAlign: 'center',\n    padding: 50\n  },\n  header: {\n    textAlign: 'center',\n    marginBottom: 25\n  }\n};\n\n\nclass Create360 extends Component {\n\n  state = {\n    name: '',\n    client: '',\n    date: '',\n    location: '',\n    category: '',\n    status: false,\n  };\n\n  // will navigate to admin dashboard\n  returnToDashboard = (event) => {\n    event.preventDefault();\n    this.props.history.push('/dashboard');\n  }\n\n  // handles change for inputs\n  handleChange = (event) => {\n    console.log('in handleChange');\n    this.setState({\n      ...this.state,\n      [event.target.name]: event.target.value,\n    })\n  }\n\n  // handles change for switch\n  handleSwitch = (event) => {\n    console.log('in handleSwitch', this.state.status);\n    let newValue = !this.state.status;\n    this.setState({\n      ...this.state,\n      status: newValue\n    });\n  }\n\n  // dispatch to current360Saga\n  handleSubmit = (event) => {\n    console.log('handleSubmit');\n    event.preventDefault();\n    this.props.dispatch({ type: 'CREATE_360)', payload: this.state });\n    // this.props.history.push('/generate360');\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div className={classes.container}>\n        {JSON.stringify(this.state)}\n        {/* {JSON.stringify(this.props.mapReduxStateToProps)} */}\n        <Button \n          variant=\"contained\"\n          onClick={this.returnToDashboard}\n        >\n          Return to Dashboard\n        </Button>\n        <form className={classes.form} onSubmit={this.handleSubmit}>\n          <Typography variant=\"h2\" className={classes.header}>Create 360</Typography>\n          <TextField\n            label=\"Name\"\n            className={classes.textField}\n            margin=\"dense\"\n            variant=\"outlined\"\n            onChange={this.handleChange}\n            value={this.state.name}\n            name =\"name\"\n            placeholder=\"Name\"\n          /><br />\n\n          <TextField\n            label=\"Client\"\n            className={classes.textField}\n            margin=\"dense\"\n            variant=\"outlined\"\n            onChange={this.handleChange}\n            value={this.state.client}\n            name =\"client\"\n            placeholder=\"Client\"\n          /><br />\n\n          <TextField\n            // label=\"Date\"\n            className={classes.textField}\n            type=\"date\"\n            margin=\"dense\"\n            variant=\"outlined\"\n            onChange={this.handleChange}\n            value={this.state.date}\n            name =\"date\"\n          /><br />\n\n          <TextField\n            label=\"Location\"\n            className={classes.textField}\n            margin=\"dense\"\n            variant=\"outlined\"\n            onChange={this.handleChange}\n            value={this.state.location}\n            name =\"location\"\n            placeholder=\"Location\"\n          /><br />\n\n          <FormControl variant=\"outlined\" className={classes.formControl}>\n            <InputLabel\n              ref={ref => {\n                this.InputLabelRef = ref;\n              }}\n              htmlFor=\"outlined-age-simple\"\n            >\n              Category\n            </InputLabel>\n            <Select\n              className={classes.textField}\n              value={this.state.category}\n              onChange={this.handleChange}\n              input={\n                <OutlinedInput\n                  labelWidth={0}\n                  name=\"category\"\n                  id=\"outlined-age-simple\"\n                />\n              }\n            >\n              <MenuItem value=\"\">\n                <em>None</em>\n              </MenuItem>\n              <MenuItem value={1}>Category 1</MenuItem>\n              <MenuItem value={2}>Category 2</MenuItem>\n              <MenuItem value={3}>Category 3</MenuItem>\n            </Select>\n          </FormControl><br />\n\n          <span>BBE</span>\n          <Switch\n            checked={this.state.status}\n            onChange={this.handleSwitch}\n            color=\"default\"\n          />\n          <span>SBS</span>\n\n          <br />\n\n          <Button type=\"submit\" variant=\"contained\">Create 360</Button>\n        </form>\n    </div>\n    );\n  }\n};\n\nconst mapReduxStateToProps = (reduxState) => ({\n reduxState\n});\n\nexport default connect(mapReduxStateToProps)(withStyles(styles)(Create360));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\n// Material-UI\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\nclass Dashboard extends Component {\n\n state = {\n\n };\n\n handleCreate = () => {\n  this.props.history.push('/generate360')\n }\n\n handleView = () => {\n  this.props.history.push('/manage360s')\n }\n\n handleUsers = () => {\n   this.props.history.push('/manageUsers')\n }\n\n render() {\n   const { classes } = this.props;\n\n   return (\n     <div className={classes.div}>\n      <Typography variant=\"h2\" className={classes.header}>Admin Dashboard</Typography>\n      <Button \n        variant=\"contained\" \n        style={{width: 400, height: 50, margin: 12, fontSize: 20}} \n        onClick={this.handleCreate}>Create New BBE</Button>\n      <Button \n        variant=\"contained\" \n        style={{width: 400, height: 50, margin: 12, fontSize: 20}} \n        onClick={this.handleView}>View and Manage BBE's</Button>\n      <Button \n        variant=\"contained\" \n        style={{width: 400, height: 50, margin: 12, fontSize: 20}} \n        onClick={this.handleUsers}>Manage Users</Button>\n     </div>\n   );\n }\n};\n\nconst styles = {\n  div: {\n    width: 600,\n    justifyContent: 'center',\n    margin: 'auto',\n    textAlign: 'center',\n    padding: 20\n }\n};\n\nconst mapReduxStateToProps = (reduxState) => ({\n reduxState\n});\n\nexport default connect(mapReduxStateToProps)(withStyles(styles)(Dashboard));","let root = document.querySelector(':root');\nconst colors = {\n  purple: window.getComputedStyle(root).getPropertyValue('--main-purple'),\n  purpleHover: window.getComputedStyle(root).getPropertyValue('--main-purple-hover'),\n  red: window.getComputedStyle(root).getPropertyValue('--main-red'),\n  redHover: window.getComputedStyle(root).getPropertyValue('--main-red-hover'),\n  pink: window.getComputedStyle(root).getPropertyValue('--main-pink'),\n  pinkHover: window.getComputedStyle(root).getPropertyValue('--main-pink-hover'),\n  orange: window.getComputedStyle(root).getPropertyValue('--main-orange'),\n  orangeHover: window.getComputedStyle(root).getPropertyValue('--main-orange-hover'),\n  lightGrey: window.getComputedStyle(root).getPropertyValue('--main-light-grey'),\n};\n\nexport default colors;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport colors from '../colors';\n\n// Material-UI\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { keys } from '@material-ui/core/styles/createBreakpoints';\n\nclass GoalsAssessmentEditDialog extends Component {\n\n state = {\n   open: false,\n   updating: false,\n };\n\n // Update the rows array when a textbox is typed in.\n handleChangeFor= (event, id) => {\n  event.preventDefault();\n\n  console.log('event:', event, 'id:', id);\n\n  this.setState({\n    [id]: {\n      ...this.state[id],\n      [event.target.name]: event.target.value \n    }\n  })\n\n  // this.setState({\n  //   rows: {\n  //     ...this.state.rows, \n  //     [id]: {\n  //       ...this.state.rows[id], \n  //       [event.target.name]: event.target.value \n  //     }\n  //   }\n  // })\n  \n  // this.setState({\n  //   ...this.state,\n  //   rows: this.state.rows.map((row,i) => {\n  //     if (i !== index) return row;\n  //     return {...row, [event.target.name]: event.target.value}\n  //   })\n  // });\n\n  // // Pull the current values\n  // let rows = this.state.rows;\n  // // Isolate the object that contains the updated text\n  // let objectToChange = rows[index];\n\n  // // Update the text within the object\n  // objectToChange = {\n  //   ...objectToChange,\n  //   [event.target.name]: event.target.value\n  // }\n  // // Redefine the object\n  // rows[index]=objectToChange;\n\n  // // Set state to the new values\n  // this.setState({\n  //   ...this.state,\n  //   rows: rows\n  // })\n\n } // end handleChangeFor\n\n // handles clicking of the \"edit\" button. Opens a dialog window.\n handleClickOpen = () => {\n  this.props.dispatch({ type: 'FETCH_360_SECTION', payload: {section: 'goalsAssessment', current360Id: 1} });\n  this.setState({\n    ...this.state,\n    open: true,\n    updating: true\n    // rows: this.props.reduxState.current360.goalsAssessment\n  })\n } // end handleClickOpen\n\n // handles clicking of the \"save\" or \"cancel\" button from the dailog window \n // and closes the dialog window.\n handleClickClose = () => {\n  this.setState({\n    ...this.state,\n    open: false\n  })\n } // end handleClickClose\n\n // dispatches an action to update the database with the new values and \n // calls handleClickClose.\n handleSave = () => {\n  console.log('in handleSave');\n  this.props.dispatch({ type: 'EDIT_360', payload: {section: 'goalsAssessment', data: this.state} })\n  this.handleClickClose();\n } // end handleSave\n\n // called when this.props.reduxState.current360.updateNeeded.[section] is true (set true\n // after the section is updated), this runs to copy the section into local state.\n loadCurrentData = () => {\n  // this.setState({\n  //    ...this.state,\n  //    rows: this.props.reduxState.current360.goalsAssessment,\n  //    updating: false\n  // })\n\n  let newState = {};\n\n  Object.keys(this.state).map( (key) => {\n    if (isNaN(key) && key !== 'newState') {\n      newState[key]=this.state[key]\n    };\n  });\n\n  this.props.reduxState.current360.goalsAssessment.map((row,index) => {\n    newState[row.id]=row\n  });\n\n  newState.updating = false;\n\n  this.setState( newState );\n\n  this.props.dispatch({ type: 'CURRENT_360_SECTION_UPDATE_COMPLETE', payload: {section: 'goalsAssessment'} });\n\n } // end loadCurrentData\n\n render() {\n   const { classes } = this.props;\n\n   // Check if the section information updated since this site was last loaded.\n   // A section is re-downloaded each time the edit dialog is opened.\n   if (this.props.reduxState.current360.updateNeeded.goalsAssessment === true) {\n     this.loadCurrentData();\n   }\n\n   return (\n     <React.Fragment>\n      <Button size=\"small\" color=\"primary\" onClick={this.handleClickOpen}>Edit</Button>\n      <Dialog\n        open={this.state.open}\n        onClose={this.handleClickClose}\n        aria-labelledby=\"goal-assessment-edit-dialog\"\n        scroll=\"paper\"\n        fullWidth\n        maxWidth=\"lg\"\n        classes={{paper: classes.paper}}\n      >\n      {(this.state.updating === true) ? \n      <React.Fragment>\n        <DialogTitle id=\"goal-assessment-edit-dialog\">Edit Goals Assessment</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            New information is currently loading...\n          </DialogContentText>\n        </DialogContent>\n      </React.Fragment>\n        :\n        <React.Fragment>\n          <DialogTitle id=\"goal-assessment-edit-dialog\">Edit Goals Assessment</DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              Remember to save changes before closing this edit dialog.\n            </DialogContentText>\n            {Object.keys(this.state).map( (key,index) => {\n              if (!isNaN(key)) {\n                return (\n                <div key={this.state[key].id} className={classes.inputGroup}>\n                  <Typography variant=\"subtitle1\">Row {index + 1}</Typography>\n                  <TextField\n                    // Create focus on the first text box of the page:\n                    {...(index === 0) ? {autoFocus: true} : null}\n                    margin=\"dense\"\n                    id=\"description\"\n                    name=\"description\"\n                    label=\"Description\"\n                    type=\"text\"\n                    variant=\"outlined\"\n                    value={this.state[key].description}\n                    onChange={(event) => this.handleChangeFor(event,this.state[key].id)}\n                    className={classes.input}\n                    fullWidth\n                    multiline\n                  />\n                  <div className={classes.spaceBetween}>\n                    <TextField\n                      margin=\"dense\"\n                      id=\"desired\"\n                      name=\"desired\"\n                      label=\"Desired\"\n                      type=\"number\"\n                      variant=\"outlined\"\n                      value={this.state[key].desired}\n                      onChange={(event) => this.handleChangeFor(event,key.id)}\n                      className={classes.input}\n                    />\n                    <TextField\n                      margin=\"dense\"\n                      id=\"delivered\"\n                      name=\"delivered\"\n                      label=\"Delivered\"\n                      type=\"number\"\n                      variant=\"outlined\"\n                      value={this.state[key].delivered}\n                      onChange={(event) => this.handleChangeFor(event,key.id)}\n                      className={classes.input}\n                    />\n                    <TextField\n                      margin=\"dense\"\n                      id=\"difference\"\n                      name=\"difference\"\n                      label=\"Difference\"\n                      type=\"number\"\n                      variant=\"outlined\"\n                      value={this.state[key].difference}\n                      onChange={(event) => this.handleChangeFor(event,key.id)}\n                      className={classes.input}\n                    />\n                    <TextField\n                      margin=\"dense\"\n                      id=\"percent\"\n                      name=\"percent\"\n                      label=\"Percent\"\n                      type=\"number\"\n                      variant=\"outlined\"\n                      value={this.state[key].percent}\n                      onChange={(event) => this.handleChangeFor(event,key.id)}\n                      className={classes.input}\n                    />\n                  </div>\n                  <TextField\n                    margin=\"dense\"\n                    id=\"comments\"\n                    name=\"comments\"\n                    label=\"Comments\"\n                    type=\"text\"\n                    variant=\"outlined\"\n                    value={this.state[key].comments}\n                    onChange={(event) => this.handleChangeFor(event,key.d)}\n                    className={classes.input}\n                    fullWidth\n                    multiline\n                  />\n                </div>\n              );\n                }\n            })}\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleClickClose} color=\"primary\">\n              Cancel\n            </Button>\n            <Button onClick={this.handleSave} color=\"primary\">\n              Save Changes\n            </Button>\n          </DialogActions>\n        </React.Fragment>\n      }\n      </Dialog>\n    </React.Fragment>\n   );\n }\n};\n\nconst styles = {\n  div: {\n    padding: 50\n  },\n  header: {\n    textAlign: 'center',\n    marginBottom: 25\n  },\n  input: {\n    backgroundColor: 'white',\n    borderRadius: 5,\n  },\n  inputGroup: {\n    marginBottom: 20,\n    padding: 10,\n    backgroundColor: colors.lightGrey,\n    borderRadius: 5\n  },\n  paper: {\n    height: 'calc(100% - 96px)'\n  },\n  spaceBetween: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    flexWrap: 'wrap'\n  }\n};\n\nconst mapReduxStateToProps = (reduxState) => ({\n reduxState\n});\n\nexport default connect(mapReduxStateToProps)(withStyles(styles)(GoalsAssessmentEditDialog));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport colors from '../colors';\n\n// import edit dialog component\nimport GoalsAssessmentEditDialog from '../EditDialogs/GoalAssessmentsEditDialog';\n\n// Material-UI\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Divider from '@material-ui/core/Divider';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\n\n// Cleanly style table cells within Material-UI\nconst CustomTableCell = withStyles(theme => ({\n  head: {\n    fontSize: '1rem',\n    backgroundColor: colors.orange,\n    color: 'white',\n    padding: 10,\n    textAlign: 'center'\n  },\n  body: {\n    padding: 5,\n  },\n}))(TableCell);\n\nclass GoalsAssessmentExpansionPanel extends Component {\n\n state = {\n  active: true,\n  status: 'Active',\n };\n\n // handle the toggle of active/inactive for the section\n handleChange = () => {\n   if (this.state.active) {\n     this.setState({\n       ...this.state,\n       active: false,\n       status: 'Inactive'\n     })\n   } else {\n    this.setState({\n      ...this.state,\n      active: true,\n      status: 'Active'\n    })\n   }\n } // end handleChange\n\n componentDidMount() {\n   this.props.dispatch({ type: 'FETCH_360_SECTION', payload: {section: 'goalsAssessment', current360Id: 1} });\n }\n\n render() {\n   const { classes } = this.props;\n\n   return (\n    <div className={classes.root}>\n      <ExpansionPanel defaultExpanded>\n\n        {/* Information on the expansion panel's summary bar (always shows) */}\n        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />} className={classes.summary}>\n          <div className={classes.title}>\n            <Typography variant=\"h2\" className={classes.heading}>Goals Assessment</Typography>\n          </div>\n\n          {/* Conditionally render \"Active\" on expansion panel summary if the section is active. */}\n          {(this.state.status === 'Active') ? \n          <div className={classes.status}>\n            <Typography variant=\"h2\" className={classes.subheading}>{this.state.status}</Typography>\n          </div> : null }\n        </ExpansionPanelSummary>\n\n        {/* Content that is within the expansion panel (shows when panel is expanded) */}\n        <ExpansionPanelDetails className={classes.details}>\n          <Paper className={classes.rootTable}>\n            <Table className={classes.table}>\n              <TableHead>\n                <TableRow>\n                  <CustomTableCell width=\"25%\">Description</CustomTableCell>\n                  <CustomTableCell>Desired</CustomTableCell>\n                  <CustomTableCell>Delivered</CustomTableCell>\n                  <CustomTableCell>Difference</CustomTableCell>\n                  <CustomTableCell>Percent</CustomTableCell>\n                  <CustomTableCell>Comments</CustomTableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {this.props.reduxState.current360.goalsAssessment.map(row => {\n                  return (\n                    <TableRow key={row.id}>\n                      <CustomTableCell component=\"th\" scope=\"row\" width=\"25%\">\n                        {row.description}\n                      </CustomTableCell>\n                      <CustomTableCell className={classes.centerText}>{row.desired}</CustomTableCell>\n                      <CustomTableCell className={classes.centerText}>{row.delivered}</CustomTableCell>\n                      <CustomTableCell className={classes.centerText}>{row.difference}</CustomTableCell>\n                      <CustomTableCell className={classes.centerText}>{row.percent}%</CustomTableCell>\n                      <CustomTableCell>{row.comments}</CustomTableCell>\n                    </TableRow>\n                  );\n                })}\n              </TableBody>\n            </Table>\n          </Paper>\n        </ExpansionPanelDetails>\n\n        <Divider />\n\n        {/* Actions that show when the panel is expanded */}\n        <ExpansionPanelActions>\n          <FormControlLabel\n            control={\n              <Switch\n                checked={this.state.active}\n                onChange={this.handleChange}\n                value=\"active\"\n                classes={{\n                  switchBase: classes.colorSwitchBase,\n                  checked: classes.colorChecked,\n                  bar: classes.colorBar\n                }}\n              />\n            }\n            label={this.state.status}\n          />\n          \n          <GoalsAssessmentEditDialog />\n        </ExpansionPanelActions>\n\n      </ExpansionPanel>\n    </div>\n   );\n }\n};\n\nconst styles = {\n  root: {\n    width: '100%',\n  },\n  rootTable: {\n    width: '100%',\n    overflowX: 'scroll'\n  },\n  centerText: {\n    textAlign: 'center'\n  },\n  colorBar: {\n    // needs to be here for custom-css switch to work.\n  },\n  colorChecked: {\n    // needs to be here for custom-css switch to work.\n  },\n  colorSwitchBase: {\n    color: colors.orange,\n    '&$colorChecked': {\n      color: colors.orange,\n      '& + $colorBar': {\n        backgroundColor: colors.orange\n      }\n    }\n  },\n  details: {\n    alignItems: 'center',\n  },\n  heading: {\n    fontSize: \"1.5rem\",\n  },\n  icon: {\n    verticalAlign: 'bottom',\n    height: 20,\n    width: 20,\n  },\n  status: {\n    flexBasis: '25.00%',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    display: 'flex'\n  },\n  subheading: {\n    fontSize: '1rem',\n    color: 'green',\n    fontWeight: 'bold'\n  },\n  summary: {\n    alignItems: 'center'\n  },\n  table: {\n    minWidth: 700\n  },\n  title: {\n    flexBasis: '75.00%',\n  },\n};\n\nconst mapReduxStateToProps = (reduxState) => ({\n reduxState\n});\n\nGoalsAssessmentExpansionPanel.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default connect(mapReduxStateToProps)(withStyles(styles)(GoalsAssessmentExpansionPanel));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\n// Material-UI\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n\n// Import Expansion Panels for each subsection\nimport GoalsAssessmentExpansionPanel from './ExpansionPanels/GoalAssessmentsExpansionPanel';\n\nclass Generate360 extends Component {\n\n state = {\n\n };\n\n render() {\n   const { classes } = this.props;\n\n   return (\n     <div className={classes.div}>\n       <Typography variant=\"h2\" className={classes.header}>Generate360</Typography>\n       <GoalsAssessmentExpansionPanel />\n     </div>\n   );\n }\n};\n\nconst styles = {\n  div: {\n    padding: 50\n  },\n  header: {\n    textAlign: 'center',\n    marginBottom: 25\n  }\n};\n\nconst mapReduxStateToProps = (reduxState) => ({\n reduxState\n});\n\nexport default connect(mapReduxStateToProps)(withStyles(styles)(Generate360));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport MarnitaLogo from './marnita_logo.png';\n\n// Material-UI\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport { Grid } from '@material-ui/core'\nimport Typography from '@material-ui/core/Typography';\n\nclass Home extends Component {\n\n state = {\n\n };\n\n render() {\n   const { classes } = this.props;\n\n   return (\n     <div>\n        <Typography variant=\"h3\" className={classes.header}>Check out some recent IZI 360 Reports</Typography>\n        <Grid container>\n          <Grid item xs={4}>\n            <Card className={classes.card}>\n            {/* TO DO: add a number of card classes, color formatting based on IZI category? */}\n\n              <CardActionArea>\n                <CardContent>\n\n                  <img src={MarnitaLogo} alt=\"Marnita's Table Placeholder\" className={classes.image}/>\n\n                  <Typography gutterBottom variant=\"h4\" component=\"h4\">\n                    Health Matters!\n                  </Typography>\n\n                  <Typography component=\"p\">\n                    A brief description of the IZI will be here ... if the text is longer\n                  </Typography>\n                  <br></br>\n                  <Typography component=\"p\">\n                    December 17, 2018\n                  </Typography>\n                  <Typography component=\"p\">\n                    Location of IZI\n                  </Typography>\n\n                </CardContent>\n              </CardActionArea>\n\n              <CardActions className={classes.cardActions}>\n                <Button size=\"small\" color=\"primary\">\n                  View 360 Report\n                </Button>\n              </CardActions>\n\n            </Card>\n          </Grid>\n\n        </Grid>\n\n     </div>\n   );\n }\n};\n\nconst styles = {\n  card: {\n    textAlign: 'center',\n    justifyContent: 'center'\n  },\n\n  image: {\n    width: 150,\n  },\n\n  cardActions: {\n    display: 'flex',\n    justifyContent: 'center'\n  }\n};\n\nconst mapReduxStateToProps = (reduxState) => ({\n reduxState\n});\n\nexport default connect(mapReduxStateToProps)(withStyles(styles)(Home));","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\n\nconst CustomTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing.unit * 3,\n    overflowX: 'auto',\n  },\n  table: {\n    minWidth: 700,\n  },\n  row: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.background.default,\n    },\n  },\n});\n\nlet id = 0;\nfunction createData( calories, fat, carbs, protein, tacos) {\n  id += 1;\n  return { id, calories, fat, carbs, protein, tacos };\n}\n\nconst rows = [\n  createData('Health Matters', 'SCHCSC', 'Scott County', '10-24-2017', 'Health'),\n  createData('Health Matters', 'SCHCSC', 'Scott County', '10-24-2017', 'Health'),\n  createData('Health Matters', 'SCHCSC', 'Scott County', '10-24-2017', 'Health'),\n  createData('Health Matters', 'SCHCSC', 'Scott County', '10-24-2017', 'Health'),\n  createData('Health Matters', 'SCHCSC', 'Scott County', '10-24-2017', 'Health'),\n];\n\nfunction CustomizedTable(props) {\n  const { classes } = props;\n\n  return (\n    <Paper className={classes.root}>\n      <Table className={classes.table}>\n        <TableHead>\n          <TableRow>\n            <CustomTableCell>Actions</CustomTableCell>\n            <CustomTableCell>Name</CustomTableCell>\n            <CustomTableCell>Client</CustomTableCell>\n            <CustomTableCell>Location</CustomTableCell>\n            <CustomTableCell>Date</CustomTableCell>\n            <CustomTableCell>Category</CustomTableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map(row => {\n            return (\n              <TableRow className={classes.row} key={row.id}>\n                <CustomTableCell component=\"th\" scope=\"row\">\n                  <Button>View</Button>\n                  <Button>Edit</Button>\n                </CustomTableCell>\n                <CustomTableCell>{row.calories}</CustomTableCell>\n                <CustomTableCell>{row.fat}</CustomTableCell>\n                <CustomTableCell>{row.carbs}</CustomTableCell>\n                <CustomTableCell>{row.protein}</CustomTableCell>\n                <CustomTableCell>{row.tacos}</CustomTableCell>\n              </TableRow>\n            );\n          })}\n        </TableBody>\n      </Table>\n    </Paper>\n  );\n}\n\nCustomizedTable.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(CustomizedTable);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Table360s from '../Table360s/Table360s';\n\n// Material-UI\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TextField from '@material-ui/core/TextField';\nimport classNames from 'classnames';\n\n// temporary data\nconst ranges = [\n  {\n    value: 'health',\n    label: 'health',\n  },\n  {\n    value: 'transportation',\n    label: 'transportation',\n  },\n  {\n    value: 'other',\n    label: 'other',\n  },\n];\n\n//this page has all sorts of weird problems, but the general idea is there...\n//ashley, if you're reading this, you should probs go get a hot apple blahst\nclass Manage360s extends Component {\n\n  state = {\n      unpublishedName: '',\n      unpublishedLocation: '',\n      unpublishedDate: '',\n      unpublishedCategory: '',\n      publishedName: '',\n      publishedLocation: '',\n      publishedDate: '',\n      publishedCategory: '',\n  };\n\n  handleChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value,\n    })\n  };\n\n  searchPublished = (event) => {\n    event.preventDefault();\n    console.log('payload', this.state.publishedCategory, this.state.publishedDate, this.state.publishedLocation, this.state.publishedName);\n  };\n\n  searchUnpublished = (event) => {\n    event.preventDefault();\n    console.log('payload', this.state.unpublishedCategory, this.state.unpublishedDate, this.state.unpublishedLocation, this.state.unpublishedName);\n  };\n\n  returnToDash = () => {\n    this.props.history.push('/dashboard');\n  };\n\n  goToGenerator = () => {\n    this.props.history.push('/generate360');\n  }\n\n render() {\n   const { classes } = this.props;\n\n   return (\n      <div >\n        <Button variant=\"contained\" onClick={this.returnToDash}>Return to Dashboard</Button>\n        <span>\n          <Typography variant=\"h4\" className={classes.header}>Unpublished 360s</Typography>\n          <Button variant=\"contained\" onClick={this.goToGenerator}>Create New 360</Button>\n        </span>\n        <span>\n          <p>Search By</p>\n          <form onSubmit={this.searchUnpublished}>\n            <TextField placeholder=\"Name or Client\" type=\"search\" onChange={this.handleChange}\n              name=\"unpublishedName\" value={this.state.unpublishedName}/>\n            <TextField placeholder=\"Location\" type=\"search\" onChange={this.handleChange}\n              name=\"unpublishedLocation\" value={this.state.unpublishedLocation}/>\n            <TextField placeholder=\"Date\" type=\"date\" onChange={this.handleChange}\n              name=\"unpublishedDate\" value={this.state.unpublishedDate}/>\n            <TextField\n              select\n              className={classNames(classes.margin, classes.textField)}\n              value={this.state.unpublishedCategory}\n              onChange={this.handleChange}\n              name=\"unpublishedCategory\"\n              InputProps={{\n                startAdornment: <InputAdornment position=\"start\">Category</InputAdornment>,\n              }}\n            >\n              {ranges.map(option => (\n                <MenuItem key={option.value} value={option.value}>\n                  {option.label}\n                </MenuItem>\n              ))}\n            </TextField>\n            <Button type=\"submit\">Search</Button>\n          </form>\n        </span>\n        <Table360s/>\n        <span>\n          <Typography variant=\"h4\" className={classes.header}>Published 360s</Typography>\n          <p>Search By</p>\n          <form onSubmit={this.searchPublished}>\n            <TextField placeholder=\"Name or Client\" type=\"search\" onChange={this.handleChange}\n              name=\"publishedName\" value={this.state.publishedName}/>\n            <TextField placeholder=\"Location\" type=\"search\" onChange={this.handleChange}\n              name=\"publishedLocation\" value={this.state.publishedLocation} />\n            <TextField placeholder=\"Date\" type=\"date\" onChange={this.handleChange}\n              name=\"publishedDate\" value={this.state.publishedDate}/>\n            <TextField\n              select\n              className={classNames(classes.margin, classes.textField)}\n              value={this.state.publishedCategory}\n              onChange={this.handleChange}\n              name=\"publishedCategory\"\n              InputProps={{\n                startAdornment: <InputAdornment position=\"start\">Category</InputAdornment>,\n              }}\n            >\n              {ranges.map(option => (\n                <MenuItem key={option.value} value={option.value}>\n                  {option.label}\n                </MenuItem>\n              ))}\n            </TextField>\n            <Button type=\"submit\">Search</Button>\n          </form>\n        </span>\n        <Table360s/>\n      </div>\n   );\n }\n};\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  margin: {\n    margin: theme.spacing.unit,\n  },\n  withoutLabel: {\n    marginTop: theme.spacing.unit * 3,\n  },\n  textField: {\n    flexBasis: 200,\n  },\n});\n\nconst mapReduxStateToProps = (reduxState) => ({\n reduxState\n});\n\nexport default connect(mapReduxStateToProps)(withStyles(styles)(Manage360s));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\n// Material-UI\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n\nclass ManageUsers extends Component {\n\n state = {\n\n };\n\n render() {\n   const { classes } = this.props;\n\n   return (\n     <div>\n       <Typography variant=\"h2\" className={classes.header}>Manage Users</Typography>\n     </div>\n   );\n }\n};\n\nconst styles = {\n header: {\n\n }\n};\n\nconst mapReduxStateToProps = (reduxState) => ({\n reduxState\n});\n\nexport default connect(mapReduxStateToProps)(withStyles(styles)(ManageUsers));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\n// Material-UI\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n\nclass UserProfile extends Component {\n\n state = {\n\n };\n\n render() {\n   const { classes } = this.props;\n\n   return (\n     <div>\n       <Typography variant=\"h2\" className={classes.header}>User Profile</Typography>\n     </div>\n   );\n }\n};\n\nconst styles = {\n header: {\n\n }\n};\n\nconst mapReduxStateToProps = (reduxState) => ({\n reduxState\n});\n\nexport default connect(mapReduxStateToProps)(withStyles(styles)(UserProfile));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\n// Material-UI\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n\nclass View360 extends Component {\n\n state = {\n\n };\n\n render() {\n   const { classes } = this.props;\n\n   return (\n     <div>\n       <Typography variant=\"h2\" className={classes.header}>View 360</Typography>\n     </div>\n   );\n }\n};\n\nconst styles = {\n header: {\n\n }\n};\n\nconst mapReduxStateToProps = (reduxState) => ({\n reduxState\n});\n\nexport default connect(mapReduxStateToProps)(withStyles(styles)(View360));","import React, {Component} from 'react';\nimport {\n  HashRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from 'react-router-dom';\n\nimport {connect} from 'react-redux';\n\nimport Nav from '../Nav/Nav';\nimport Footer from '../Footer/Footer';\n\nimport ProtectedRoute from '../ProtectedRoute/ProtectedRoute'\n\nimport Create360 from '../Create360/Create360';\nimport CreateUser from '../CreateUser/CreateUser';\nimport Dashboard from '../Dashboard/Dashboard';\nimport Generate360 from '../Generate360/Generate360';\nimport Home from '../HomePage/HomePage';\nimport Login from '../Login/Login';\nimport Manage360s from '../Manage360s/Manage360s';\nimport ManageUsers from '../ManageUsers/ManageUsers';\nimport UserProfile from '../UserProfile/UserProfile';\nimport View360 from '../View360/View360';\n\n\nimport './App.css';\n\nclass App extends Component {\n  componentDidMount () {\n    this.props.dispatch({type: 'FETCH_USER'})\n  }\n\n  render() {\n    return (\n      <Router>\n        <div>\n          <Nav />\n          <Switch>\n            {/* Visiting localhost:3000 will redirect to localhost:3000/home */}\n            <Redirect exact from=\"/\" to=\"/home\" />\n\n            {/* For the following pages, no login is necessary. */}\n            <Route\n              exact\n              path=\"/home\"\n              component={Home}\n            />\n            <Route\n              exact\n              path=\"/view360\"\n              component={View360}\n            />\n            <Route\n              exact\n              path=\"/login\"\n              component={Login}\n            />\n            <Route\n              exact\n              path=\"/register\"\n              component={CreateUser}\n            />\n\n            {/* The following pages are protected. The user's access level will be checked.\n              The user will be directed to the login page if they are not logged in, and to \n              the home page if they are logged in without the appropriate authorization level */}\n            <Route\n              exact\n              path=\"/profile\"\n              component={UserProfile}\n            />\n            <ProtectedRoute\n              exact\n              path=\"/dashboard\"\n              component={Dashboard}\n            />\n            {/* create360 is a protected route */}\n            <Route\n              exact\n              path=\"/create360\"\n              component={Create360}\n            />\n            <ProtectedRoute\n              exact\n              path=\"/manage360s\"\n              component={Manage360s}\n            />\n            <ProtectedRoute\n              exact\n              path=\"/manageUsers\"\n              component={ManageUsers}\n            />\n            <Route\n              exact\n              path=\"/generate360\"\n              component={Generate360}\n            />\n\n            {/* If none of the other routes matched, we will show a 404. */}\n            <Route render={() => <h1>404</h1>} />\n          </Switch>\n          <Footer />\n        </div>\n      </Router>\n  )}\n}\n\nexport default connect()(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport createSagaMiddleware from 'redux-saga';\nimport logger from 'redux-logger';\n\nimport rootReducer from './redux/reducers'; // imports ./redux/reducers/index.js\nimport rootSaga from './redux/sagas'; // imports ./redux/sagas/index.js\n\nimport App from './components/App/App';\n\nconst sagaMiddleware = createSagaMiddleware();\n\n// this line creates an array of all of redux middleware you want to use\n// we don't want a whole ton of console logs in our production code\n// logger will only be added to your project if your in development mode\nconst middlewareList = process.env.NODE_ENV === 'development' ?\n  [sagaMiddleware, logger] :\n  [sagaMiddleware];\n\nconst store = createStore(\n  // tells the saga middleware to use the rootReducer\n  // rootSaga contains all of our other reducers\n  rootReducer,\n  // adds all middleware to our project including saga and logger\n  applyMiddleware(...middlewareList),\n);\n\n// tells the saga middleware to use the rootSaga\n// rootSaga contains all of our other sagas\nsagaMiddleware.run(rootSaga);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('react-root'),\n);\n"],"sourceRoot":""}