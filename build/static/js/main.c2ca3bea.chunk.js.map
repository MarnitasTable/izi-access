{"version":3,"sources":["components/HomePage/marnita_logo.png","redux/reducers/errorsReducer.js","redux/reducers/loginModeReducer.js","redux/reducers/userReducer.js","redux/reducers/current360Reducer.js","redux/reducers/all360sReducer.js","redux/reducers/allUsersReducer.js","redux/reducers/userControlsReducer.js","redux/reducers/iziCategoriesReducer.js","redux/reducers/userAccessLevelReducer.js","redux/reducers/index.js","redux/sagas/loginSaga.js","redux/sagas/registrationSaga.js","redux/sagas/userSaga.js","redux/sagas/all360sSaga.js","redux/sagas/current360Saga.js","redux/sagas/allUsersSaga.js","redux/sagas/userControlsSaga.js","redux/sagas/iziCategoriesSaga.js","redux/sagas/userAccessLevelSaga.js","redux/sagas/index.js","components/LogOutButton/LogOutButton.js","components/App/colors.js","components/Nav/Nav.js","components/Footer/Footer.js","components/ForgotPassword/ForgotPassword.js","components/Login/Login.js","components/CreateUser/CreateUser.js","components/ProtectedRoute/ProtectedRoute.js","components/ProtectedRoute/EmployeeRoute.js","components/Create360/Create360.js","components/Dashboard/Dashboard.js","components/Generate360/EditDialogs/LoadingDialog.js","components/Generate360/EditDialogs/ThreesixtyInformationEditDialog.js","components/Generate360/EditDialogs/ThreesixtyInformationPublishDialog.js","components/Generate360/ExpansionPanels/ThreesixtyInformationExpansionPanel.js","components/Generate360/TableTemplate/TableTemplate.js","components/Generate360/EditDialogs/Supplements/GoalsAssessmentsEditComponent.js","components/Generate360/EditDialogs/GoalAssessmentsEditDialog.js","components/Generate360/ExpansionPanels/GoalAssessmentsExpansionPanel.js","components/Generate360/EditDialogs/Supplements/DashboardEditComponent.js","components/Generate360/EditDialogs/DashboardEditDialog.js","components/Generate360/ExpansionPanels/DashboardExpansionPanel.js","components/MarkdownOutput/MarkdownOutput.js","components/Generate360/ExpansionPanels/ThreesixtyEventOverviewExpansionPanel.js","components/Generate360/ExpansionPanels/ThreesixtyMindstormExpansionPanel.js","components/Generate360/ExpansionPanels/ThreesixtyOralReportExpansionPanel.js","components/Generate360/ExpansionPanels/ThreesixtyFreeformExpansionPanel.js","components/Generate360/ExpansionPanels/ThreesixtyCircleShareInExpansionPanel.js","components/Generate360/EditDialogs/Supplements/AnalysisRecEditComponent.js","components/Generate360/EditDialogs/AnalysisRecEditDialog.js","components/Generate360/ExpansionPanels/AnalysisRecExpansionPanel.js","components/Generate360/ExpansionPanels/DemographicDataExpansionPanel.js","components/Generate360/ExpansionPanels/FreeformExpansionPanel.js","components/Generate360/TableTemplate/TableUsers.js","components/Generate360/EditDialogs/AddClientDialog.js","components/Generate360/ExpansionPanels/ClientAccessExpansionPanel.js","components/Generate360/Generate360.js","components/Table360s/Table360s.js","components/Search360s/Search360s.js","components/HomePage/HomePage.js","components/Manage360s/Manage360s.js","components/ManageUsers/ViewUserDialog/ViewUser.js","components/TableUsers/TableUsers.js","components/ManageUsers/ExpansionPanels/PendingClientRequests.js","components/ManageUsers/ExpansionPanels/Users.js","components/ManageUsers/ExpansionPanels/DeactivatedUsers.js","components/ManageUsers/ManageUsers.js","components/UserProfile/EditUser/EditUser.js","components/UserProfile/EditUser/EditPassword.js","components/UserProfile/EditUser/RequestAccess.js","components/UserProfile/UserProfile.js","components/View360/SideBar.js","components/View360/TableTemplate/TableTemplate.js","components/View360/LoadingDialog.js","components/View360/View360.js","components/ResetPassword/ResetPassword.js","components/App/App.js","index.js"],"names":["module","exports","__webpack_require__","p","combineReducers","loginMessage","state","arguments","length","undefined","type","registrationMessage","loginMode","userReducer","action","payload","current360","loadingDialogOpen","info","published_status","analysis_recommendation_public","threesixty_reports_public","dashboard_public","goals_public","demographics_public","oral_report_public","question_set_public","circle_share_public","threesixty_freeform_public","freeform_public","upload_public","analysis_recommendation_published","threesixty_reports_published","dashboard_published","goals_published","demographics_published","oral_report_published","question_set_published","circle_share_published","threesixty_freeform_published","freeform_published","upload_published","goalsAssessment","dashboard","threesixty_reports","analysis_recommendation","demographics","circle_share","question_set","oral_report","chart_data","clients","updateNeeded","Object","objectSpread","defineProperty","section","field","status","content","all360s","published","unpublished","recent","allUsers","pendingRequests","deactivatedUsers","threesixtyUsers","userControls","user","iziCategories","userAccessLevel","rootReducer","errors","loginUser","logoutUser","loginSaga","config","regenerator_default","a","wrap","_context","prev","next","put","headers","Content-Type","withCredentials","axios","post","t0","console","log","response","stop","_marked","this","_context2","_marked2","_context3","takeLatest","_marked3","registerUser","registrationSaga","registrationSaga_marked","registrationSaga_marked2","fetchUser","userSaga","get","sent","data","userSaga_marked","userSaga_marked2","fetchPublished","fetchUnpublished","fetch360Search","all360sSaga","call","slice","all360sSaga_marked","all360sSaga_marked2","params","publishedStatus","all360sSaga_marked3","_context4","_marked4","changePublicStatus","changePublishStatus","create360Complete","create360Lowdown","edit360","fetch360","fetch360Clients","fetch360Info","fetch360Section","fetchGoals","fetchDashboard","fetchThreeSixtyReports","fetchAnalysisRecommendation","fetchDemographics","fetchCircleShare","fetchQuestionSet","fetchOralReport","fetchChartData","current360Saga","concat","current360Id","current360Saga_marked","current360Saga_marked2","id","current360Saga_marked3","current360Saga_marked4","_context5","_marked5","_context6","all","take","_marked6","_context7","_marked7","_context8","_marked8","_context9","_marked9","_context10","_marked10","_context11","_marked11","_context12","_marked12","_context13","_marked13","_context14","_marked14","_context15","_marked15","_context16","_marked16","_context17","_marked17","_context18","_marked18","_context19","_marked19","fetchAllUsers","fetchPendingRequests","fetchDeactivatedUsers","fetchUsersSearch","fetchThreesixtyUsers","allUsersSaga","allUsersSaga_marked","allUsersSaga_marked2","allUsersSaga_marked3","allUsersSaga_marked4","allUsersSaga_marked5","allUsersSaga_marked6","fetchUserInfo","add360Access","remove360Access","remove360AccessFrom360","request360Access","editUserInfo","editCurrentUserInfo","deletePendingRequest","userControlsSaga","userControlsSaga_marked","userControlsSaga_marked2","delete","userControlsSaga_marked3","threesixtyUserId","userControlsSaga_marked4","userControlsSaga_marked5","userControlsSaga_marked6","userControlsSaga_marked7","userControlsSaga_marked8","userControlsSaga_marked9","fetchIziCategories","iziCategoriesSaga_marked","iziCategoriesSaga_marked2","fetchAccessLevels","userAccessLevelSaga","userAccessLevelSaga_marked","userAccessLevelSaga_marked2","rootSaga","iziCategoriesSaga","sagas_marked","connect","props","react_default","createElement","className","onClick","dispatch","root","document","querySelector","colors","purple","window","getComputedStyle","getPropertyValue","purpleHover","red","redHover","pink","pinkHover","orange","orangeHover","lightGrey","grey","Nav","employee","classes","AppBar_default","nav","position","Toolbar_default","Link","to","src","MarnitaLogo","alt","image","Typography_default","title","variant","grow","reduxState","access_id","Fragment","components_LogOutButton_LogOutButton","Component","styles","flexGrow","height","marginRight","overflow","backgroundColor","color","display","withStyles","Footer","ForgotPassword","email","showError","messageFromServer","showNullError","open","handleChange","name","event","_this","setState","target","value","sendEmail","preventDefault","then","catch","error","handleClickOpen","handleClickClose","_this$state","Button_default","button","Dialog_default","onClose","aria-labelledby","container","header","onSubmit","TextField_default","input","label","onChange","placeholder","submitButton","emailSent","IconButton_default","closeButton","Cancel_default","textAlign","padding","width","marginBottom","margin","top","right","Login","username","password","login","handleInputChangeFor","propertyName","_this2","role","form","textField","components_ForgotPassword_ForgotPassword","borderRadius","minWidth","CreateUser","firstname","lastname","iziName","date","alert","handleCancel","text","fontSize","marginTop","ComponentToShow","ComponentToProtect","component","otherProps","objectWithoutProperties","Route","assign","Create360","client","location","category","description","returnToDashboard","history","push","handleSwitch","newValue","handleSubmit","confirmSubmit","errorMessage","confirmAlert","message","buttons","create360","FormControl_default","formControl","InputLabel_default","ref","InputLabelRef","htmlFor","Select_default","OutlinedInput_default","labelWidth","MenuItem_default","map","key","Switch_default","checked","Dashboard","pending","handleCreate","handleView","handleUsers","div","ButtonBase_default","Paper_default","paper","Grid_default","spacing","btnText","item","xs","btnGrid","Avatar_default","Forward_default","PriorityHigh_default","justifyContent","paddingLeft","paddingRight","marginLeft","LoadingDialog","scroll","fullWidth","maxWidth","DialogTitle_default","center","DialogContent_default","el","react_loading_default","delay","alignItems","spaceBetween","flexWrap","ThreesixtyInformationEditDialog","updating","category_id","handleChangeFor","_this$setState","handleSave","loadCurrentData","newState","moment","format","size","DialogContentText_default","autoFocus","multiline","notched","DialogActions_default","minHeight","ThreesixtyInformationPublishDialog","ThreesixyInformationExpansionPanel","publishDialogOpen","handleChangePublished","ExpansionPanel_default","expansionPanel","ExpansionPanelSummary_default","expandIcon","ExpandMore_default","summary","heading","subheading","subheadingUnpublished","ExpansionPanelDetails_default","details","rootTable","threesixty","index","property","Divider_default","ExpansionPanelActions_default","FormControlLabel_default","control","switchBase","colorSwitchBase","colorChecked","bar","colorBar","EditDialogs_ThreesixtyInformationEditDialog","EditDialogs_ThreesixtyInformationPublishDialog","&$colorChecked","& + $colorBar","icon","verticalAlign","fontWeight","overflowX","flexBasis","table","CustomTableCell","theme","head","body","TableCell","TableUsers","clearRequest","Table_default","TableHead_default","TableRow_default","TableBody_default","row","cellVariables","variable","scope","CheckCircleOutline_default","iconColored","Close_default","centerText","GoalsAssessmentEditComponent","inputGroup","rowHeaderLeft","rowLabel","rowHeaderRight","aria-label","deleteRow","DeleteForever_default","desired","delivered","difference","percent","comments","GoalsAssessmentEditDialog","addRowId","addRow","_objectSpread2","newRowName","row_public","new","scrollToBottom","_objectSpread4","keys","isNaN","rowCheck","entries","entry","setTimeout","bottom","scrollIntoView","behavior","block","GoalsAssessmentsEditComponent","style","float","clear","GoalsAssessmentExpansionPanel","handleChangePublic","TableTemplate","GoalAssessmentsEditDialog","DashboardEditComponent","row_title","row_info","DashboardEditDialog","Supplements_DashboardEditComponent","DashboardExpansionPanel","EditDialogs_DashboardEditDialog","MarkDownOutput","react_markdown_default","source","skipHtml","escapeHtml","ThreesixtyEventOverviewExpansionPanel","ThreesixtyMindstormExpansionPanel","ThreesixtyOralReportExpansionPanel","ThreesixtyFreeformExpansionPanel","ThreesixtyCircleShareInExpansionPanel","AnalysisRecEditComponent","findings","recommendations","AnalysisRecEditDialog","Supplements_AnalysisRecEditComponent","AnalysisRecExpansionPanel","header5","paragraph","MarkdownOutput","EditDialogs_AnalysisRecEditDialog","DemographicDataExpansionPanel","FreeformExpansionPanel","TableUsers_CustomTableCell","users","access_type","editBtn","addAccess","ranges","AddClientDialog","searchBy","level","sortBy","person","userId","submitSearch","searchField","select","classNames","InputProps","startAdornment","InputAdornment_default","option","Generate360_TableTemplate_TableUsers","ClientAccessExpansionPanel","removeAccess","threesixty_user_id","EditDialogs_AddClientDialog","Generate360","match","back","returnButton","manage360Btn","ThreesixtyInformationExpansionPanel","GoalAssessmentsExpansionPanel","ExpansionPanels_DashboardExpansionPanel","ExpansionPanels_ThreesixtyEventOverviewExpansionPanel","ExpansionPanels_ThreesixtyMindstormExpansionPanel","ExpansionPanels_ThreesixtyOralReportExpansionPanel","ExpansionPanels_ThreesixtyFreeformExpansionPanel","ExpansionPanels_ThreesixtyCircleShareInExpansionPanel","ExpansionPanels_AnalysisRecExpansionPanel","ExpansionPanels_DemographicDataExpansionPanel","ExpansionPanels_FreeformExpansionPanel","ExpansionPanels_ClientAccessExpansionPanel","EditDialogs_LoadingDialog","CustomizedTable","goToGenerate360","pathname","goToView360","Table360s_CustomTableCell","rows","homeVersion","withRouter","Search360s","handleSearch","Home","useEllipsis","handleClick","index_es","centerContainer","izi","Card_default","cardSize","elevation","CardContent_default","card","divHeader","react_textfit_lib","mode","cardHeader","cardBody","iziInfo","react_lines_ellipsis_lib_default","maxLine","ellipsis","trimRight","basedOn","CardActions_default","cardActions","components_Search360s_Search360s","Table360s","flexDirection","Manage360s","returnToDash","goToCreate360","ViewUser","edit","notes","endEdit","saveChanges","dialogTitle","Input_default","userInfoEdit","userInfo","Tooltip_default","placement","connected_360_id","paddingBottom","TableUsers_TableUsers_CustomTableCell","ViewUserDialog_ViewUser","request_id","PendingClientRequests","defaultExpanded","components_TableUsers_TableUsers","Users","viewAllUsers","DeactivatedUsers","ManageUsers","ExpansionPanels_PendingClientRequests","ExpansionPanels_Users","ExpansionPanels_DeactivatedUsers","EditUser","firstName","lastName","editButton","background","EditPassword","noMatch","oldPassword","newPassword","confirmNewPassword","passwordChanged","changeError","feedback","RequestAccess","paddingTop","UserProfile","UserProfile_EditUser_EditUser","EditUser_EditPassword","viewButton","EditUser_RequestAccess","scrollWithOffset","element","offset","SideBar","selectedIndex","handleMenuItemClick","List_default","list","some","e","String","react_router_hash_link_lib","smooth","selected","TableTemplate_CustomTableCell","View360","View360_LoadingDialog","sideBar","View360_SideBar","report","forceSingleModeWidth","mainReportInfo","subHeader","middleDivider","left","sticky","sectionHeader","TableTemplate_TableTemplate","threesixtyReport","header6","demographic","set_title","breakdown","group_num","question","responses","interpretBoolean","grid_xs","sm","grid_sm","chart","react_chartjs_2_es","labels","datasets","options","legend","responsive","zIndex","overflowY","boxShadow","loading","ResetPassword","confirmPassword","update","isLoading","updatePassword","token","updated","passwordResetToken","href","App","HashRouter","components_Nav_Nav","Switch","Redirect","exact","from","path","components_ProtectedRoute_ProtectedRoute","ProtectedRoute_EmployeeRoute","render","components_Footer_Footer","sagaMiddleware","createSagaMiddleware","middlewareList","store","createStore","applyMiddleware","apply","run","ReactDOM","react_redux_es","components_App_App","getElementById"],"mappings":"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","file":"static/js/main.c2ca3bea.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/marnita_logo.cf47a303.png\";","import { combineReducers } from 'redux';\n\n// loginMessage holds the string that will display\n// on the login screen if there's an error\nconst loginMessage = (state = '', action) => {\n  switch (action.type) {\n    case 'CLEAR_LOGIN_ERROR':\n      return '';\n    case 'LOGIN_INPUT_ERROR':\n      return 'Enter your username and password!';\n    case 'LOGIN_FAILED':\n      return 'Oops! The username and password didn\\'t match. Try again!';\n    case 'LOGIN_FAILED_NO_CODE':\n      return 'Oops! Something went wrong! Is the server running?';\n    default:\n      return state;\n  }\n};\n\n// registrationMessage holds the string that will display\n// on the registration screen if there's an error\nconst registrationMessage = (state = '', action) => {\n  switch (action.type) {\n    case 'CLEAR_REGISTRATION_ERROR':\n      return '';\n    case 'REGISTRATION_INPUT_ERROR':\n      return 'Choose a username and password!';\n    case 'REGISTRATION_FAILED':\n      return 'Oops! That didn\\'t work. The username might already be taken. Try again!';\n    default:\n      return state;\n  }\n};\n\n// make one object that has keys loginMessage, registrationMessage\n// these will be on the redux state at:\n// state.errors.loginMessage and state.errors.registrationMessage\nexport default combineReducers({\n  loginMessage,\n  registrationMessage,\n});\n","const loginMode = (state = 'login', action) => {\n    switch (action.type) {\n      case 'SET_TO_LOGIN_MODE':\n        return 'login';\n      case 'SET_TO_REGISTER_MODE':\n        return 'register';\n      default:\n        return state;\n    }\n  };\n\n// loginMode will be on the redux state at:\n// state.loginMode\n  export default loginMode;\n  ","const userReducer = (state = {}, action) => {\n  switch (action.type) {\n    case 'SET_USER':\n      return action.payload;\n    case 'UNSET_USER':\n      return {};\n    default:\n      return state;\n  }\n};\n\n// user will be on the redux state at:\n// state.user\nexport default userReducer;\n","const current360 = (state = { loadingDialogOpen: true, info: [{published_status: false, analysis_recommendation_public: false, threesixty_reports_public: false, \n  dashboard_public: false, goals_public: false, demographics_public: false, oral_report_public: false, question_set_public: false, \n  circle_share_public: false, threesixty_freeform_public: false, freeform_public: false, upload_public: false, \n  analysis_recommendation_published: false, threesixty_reports_published: false, dashboard_published: false, goals_published: false,\n  demographics_published: false, oral_report_published: false, question_set_published: false, circle_share_published: false,\n  threesixty_freeform_published: false, freeform_published: false, upload_published: false}], \n  goalsAssessment: [], dashboard: [], threesixty_reports: [], \n  analysis_recommendation: [], demographics: [], circle_share: [], question_set: [], oral_report: [],\n  chart_data: [], clients: [], updateNeeded: { goalsAssessment: false, dashboard: false, threesixty_reports: false, \n  analysis_recommendation: false, demographics: false, circle_share: false, question_set: false, \n  oral_report: false, updateNeeded: false} }, action) => {\n    switch (action.type) {\n      case 'GENERATE_360_LOADING': \n        return {...state, loadingDialogOpen: true}\n      case 'GENERATE_360_LOADED':\n        return {...state, loadingDialogOpen: false}\n      case 'CURRENT_360_SECTION_NEEDS_UPDATE':\n        return {...state, updateNeeded: {\n          ...state.updateNeeded,\n          [action.payload.section]: true\n        }};\n      case 'CURRENT_360_SECTION_UPDATE_COMPLETE':\n        return {...state, updateNeeded: {\n          ...state.updateNeeded,\n          [action.payload.section]: false\n        }};\n      case 'SET_PUBLIC_STATUS':\n        return {...state, info: [{\n          ...state.info[0],\n          [action.payload.field]: action.payload.status\n        }]}\n      case 'SET_PUBLISH_STATUS':\n        return {...state, info: [{\n          ...state.info[0],\n          [action.payload.field]: action.payload.status\n        }]}\n      case 'SET_360_SECTION':\n        return {...state, [action.payload.section]: action.payload.content};\n      case 'SET_360_CLIENTS':\n        return {...state, clients: action.payload.content};\n      case 'SET_360_INFO':\n        return {...state, info: action.payload.content};\n      case 'SET_GOALS':\n        return {...state, goalsAssessment: action.payload.content};\n      case 'SET_DASHBOARD':\n        return {...state, dashboard: action.payload.content};\n      case 'SET_THREESIXTY_REPORTS':\n        return {...state, threesixty_reports: action.payload.content};\n      case 'SET_ANALYSIS_RECOMMENDATION':\n        return {...state, analysis_recommendation: action.payload.content};\n      case 'SET_DEMOGRAPHICS':\n        return {...state, demographics: action.payload.content};\n      case 'SET_CIRCLE_SHARE':\n        return {...state, circle_share: action.payload.content};\n      case 'SET_QUESTION_SET':\n        return {...state, question_set: action.payload.content};\n      case 'SET_ORAL_REPORT':\n        return {...state, oral_report: action.payload.content};\n      case 'SET_CHART_DATA':\n        return {...state, chart_data: action.payload};\n      default:\n        return state;\n    }\n  };\n  \nexport default current360;\n  ","const all360s = (state =  {published: [], unpublished: [], recent: [], }, action) => {\n    switch (action.type) {\n      case 'SET_PUBLISHED':\n        return  {...state, published: action.payload};\n      case 'SET_UNPUBLISHED':\n        return  {...state, unpublished: action.payload};\n      case 'SET_RECENT':\n        return {...state, recent: action.payload};\n      default:\n        return state;\n    }\n  };\n  \nexport default all360s;\n  ","const allUsers = (state =  { allUsers: [], pendingRequests: [], deactivatedUsers: [], threesixtyUsers: [] }, action) => {\n  switch (action.type) {\n    case 'SET_ALL_USERS':\n      return { ...state, allUsers: action.payload };\n    case 'SET_PENDING_REQUESTS':\n      return { ...state, pendingRequests: action.payload };\n    case 'SET_DEACTIVATED_USERS':\n      return { ...state, deactivatedUsers: action.payload };\n    case 'SET_THREESIXTY_USERS':\n      return { ...state, threesixtyUsers: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport default allUsers;\n","const userControls = (state =  { user: [] }, action) => {\n  switch (action.type) {\n    case 'SET_USER_INFO':\n      return { ...state, user: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport default userControls;\n","const iziCategories = (state = [], action) => {\n  switch (action.type) {\n    case 'SET_IZI_CATEGORIES':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport default iziCategories;\n","const userAccessLevel = (state = [], action) => {\n  switch (action.type) {\n    case 'SET_ACCESS_LEVELS':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\n// user will be on the redux state at:\n// state.user\nexport default userAccessLevel;\n","import { combineReducers } from 'redux';\nimport errors from './errorsReducer';\nimport loginMode from './loginModeReducer';\nimport user from './userReducer';\nimport current360 from './current360Reducer';\nimport all360s from './all360sReducer';\nimport allUsers from './allUsersReducer';\nimport userControls from './userControlsReducer';\nimport iziCategories from './iziCategoriesReducer';\nimport userAccessLevel from './userAccessLevelReducer';\n\n\n\n// rootReducer is the primary reducer for our entire project\n// It bundles up all of the other reducers so our project can use them.\n// This is imported in index.js as rootSaga\n\n// Lets make a bigger object for our store, with the objects from our reducers.\n// This is what we get when we use 'state' inside of 'mapStateToProps'\nconst rootReducer = combineReducers({\n  errors, // contains registrationMessage and loginMessage\n  loginMode, // will have a value of 'login' or 'registration' to control which screen is shown\n  user, // will have an id and username if someone is logged in\n  current360, // stores the ID for the 360 currently being worked on or edited\n  all360s, // stores general info for all 360s to be displayed in tables\n  allUsers, // stores user info for all users to be displayed on the user tables\n  userControls, // stores user information to be able to control user information (REVIEW)\n  iziCategories, //stores izi category types to be used throughout the application\n  userAccessLevel, // stores the various access levels for selection when filtering users\n});\n\nexport default rootReducer;\n","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n// worker Saga: will be fired on \"LOGIN\" actions\nfunction* loginUser(action) {\n  try {\n    // clear any existing error on the login page\n    yield put({ type: 'CLEAR_LOGIN_ERROR' });\n\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n      withCredentials: true,\n    };\n\n    // send the action.payload as the body\n    // the config includes credentials which\n    // allow the server session to recognize the user\n    yield axios.post('api/user/login', action.payload, config);\n    \n    // after the user has logged in\n    // get the user information from the server\n    yield put({type: 'FETCH_USER'});\n  } catch (error) {\n    console.log('Error with user login:', error);\n    if (error.response.status === 401) {\n      // The 401 is the error status sent from passport\n      // if user isn't in the database or\n      // if the username and password don't match in the database\n      yield put({ type: 'LOGIN_FAILED' });\n    } else {\n      // Got an error that wasn't a 401\n      // Could be anything, but most common cause is the server is not started\n      yield put({ type: 'LOGIN_FAILED_NO_CODE' });\n    }\n  }\n}\n\n// worker Saga: will be fired on \"LOGOUT\" actions\nfunction* logoutUser(action) {\n  try {\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n      withCredentials: true,\n    };\n\n    // the config includes credentials which\n    // allow the server session to recognize the user\n    // when the server recognizes the user session\n    // it will end the session\n    yield axios.post('api/user/logout', config);\n\n    // now that the session has ended on the server\n    // remove the client-side user object to let\n    // the client-side code know the user is logged out\n    yield put({ type: 'UNSET_USER' });\n\n  } catch (error) {\n    console.log('Error with user logout:', error);\n  }\n}\n\nfunction* loginSaga() {\n  yield takeLatest('LOGIN', loginUser);\n  yield takeLatest('LOGOUT', logoutUser);\n}\n\nexport default loginSaga;\n","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n// worker Saga: will be fired on \"REGISTER\" actions\nfunction* registerUser(action) {\n  try {\n    // clear any existing error on the registration page\n    yield put({ type: 'CLEAR_REGISTRATION_ERROR' });\n\n    // passes the username and password from the payload to the server\n    yield axios.post('api/user/register', action.payload);\n\n    // automatically log a user in after registration\n    yield put({ type: 'LOGIN', payload: action.payload });\n    \n    // set to 'login' mode so they see the login screen\n    // after registration or after they log out\n    yield put({type: 'SET_TO_LOGIN_MODE'});\n  } catch (error) {\n      console.log('Error with user registration:', error);\n      yield put({type: 'REGISTRATION_FAILED'});\n  }\n}\n\nfunction* registrationSaga() {\n  yield takeLatest('REGISTER', registerUser);\n}\n\nexport default registrationSaga;\n","import axios from 'axios';\nimport { put, takeLatest } from 'redux-saga/effects';\n\n// worker Saga: will be fired on \"FETCH_USER\" actions\nfunction* fetchUser() {\n  try {\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n      withCredentials: true,\n    };\n\n    // the config includes credentials which\n    // allow the server session to recognize the user\n    // If a user is logged in, this will return their information\n    // from the server session (req.user)\n    const response = yield axios.get('api/user', config);\n\n    // now that the session has given us a user object\n    // with an id and username set the client-side user object to let\n    // the client-side code know the user is logged in\n    yield put({ type: 'SET_USER', payload: response.data });\n  } catch (error) {\n    console.log('User get request failed', error);\n  }\n}\n\nfunction* userSaga() {\n  yield takeLatest('FETCH_USER', fetchUser);\n}\n\nexport default userSaga;\n","import axios from 'axios';\nimport { put, call, takeLatest } from 'redux-saga/effects';\n\n// gets all published 360s\nfunction* fetchPublished() {\n  try {\n    const response = yield call(axios.get, '/all360/true');\n    yield put({type: 'SET_PUBLISHED', payload: response.data});\n    yield put( { type: 'SET_RECENT', payload: response.data.slice(0,3) } );\n  } \n  catch (error) {\n    console.log('error', error);\n  }\n};\n\n// gets all unpublished 360s\nfunction* fetchUnpublished() {\n  try {\n    const response = yield call(axios.get, '/all360/false');\n    yield put({type: 'SET_UNPUBLISHED', payload: response.data});\n  } \n  catch (error) {\n    console.log('error', error);\n  }\n};\n\n// runs a search based on the incoming query, then checks to see\n// which property in redux the information belongs to and sets it there\nfunction* fetch360Search(action) {\n  try {\n    const response = yield call( axios.get, '/all360/search', { params: action.payload } );\n    if(action.payload.publishedStatus === 'true'){\n      yield put( { type: 'SET_PUBLISHED', payload: response.data } );\n    } else {\n      yield put( { type: 'SET_UNPUBLISHED', payload: response.data } );\n    }\n  } \n  catch (error) {\n    console.log('error', error);\n  }\n};\n\nfunction* all360sSaga() {\n  yield takeLatest( 'FETCH_PUBLISHED', fetchPublished );\n  yield takeLatest( 'FETCH_UNPUBLISHED', fetchUnpublished );\n  yield takeLatest( 'FETCH_360_SEARCH', fetch360Search );\n};\n\nexport default all360sSaga;","import axios from 'axios';\nimport { all, put, call, take, takeLatest } from 'redux-saga/effects';\n\nfunction* changePublicStatus(action) {\n  try {\n    yield call(axios.put, `current360/public/${action.payload.current360Id}`, action.payload );\n    yield put({ type: 'SET_PUBLIC_STATUS', payload: action.payload });\n  } \n  catch (error) {\n    console.log('error', error);\n  }\n};\n\nfunction* changePublishStatus(action) {\n  try {\n    yield call(axios.put, `current360/publish/${action.payload.current360Id}`, action.payload );\n    yield put({ type: 'SET_PUBLISH_STATUS', payload: action.payload });\n  } \n  catch (error) {\n    console.log('error', error);\n  }\n};\n\nfunction* create360Complete(action) {\n  try {\n    const response = yield call(axios.post, '/current360/complete', {data: action.payload} );\n    yield put({ type: 'FETCH_360', payload: {current360Id: response.data.id} });\n    yield put({ type: 'FETCH_PUBLISHED' });\n    yield put({ type: 'FETCH_UNPUBLISHED' });\n  } \n  catch (error) {\n    console.log('error', error);\n  }\n};\n\nfunction* create360Lowdown(action) {\n  try {\n    const response = yield call(axios.post, '/current360/lowdown', {data: action.payload} );\n    yield put({ type: 'FETCH_360', payload: {current360Id: response.data.id} });\n    yield put({ type: 'FETCH_PUBLISHED' });\n    yield put({ type: 'FETCH_UNPUBLISHED' });\n  } \n  catch (error) {\n    console.log('error', error);\n  }\n};\n\nfunction* edit360(action) {\n  try {\n    yield call(axios.put, `/current360/edit/${action.payload.section}/${action.payload.current360Id}`, action.payload.data );\n    yield put({ type: 'FETCH_360_SECTION', payload: action.payload })\n  } \n  catch (error) {\n    console.log('error', error);\n  }\n};\n\n// dispatches actions to fetch each of the 360 sections. (expects current360Id)\nfunction* fetch360(action) {\n  try {\n    yield put({ type: 'GENERATE_360_LOADING' })\n    // Get all sections of the 360\n    yield all ([\n      put({ type: 'FETCH_360_INFO', payload: action.payload }),\n      put({ type: 'FETCH_GOALS', payload: action.payload }),\n      put({ type: 'FETCH_DASHBOARD', payload: action.payload }),\n      put({ type: 'FETCH_THREESIXTY_REPORTS', payload: action.payload }),\n      put({ type: 'FETCH_ANALYSIS_RECOMMENDATION', payload: action.payload }),\n      put({ type: 'FETCH_DEMOGRAPHIC', payload: action.payload }),\n      put({ type: 'FETCH_CIRCLE_SHARE', payload: action.payload }),\n      put({ type: 'FETCH_QUESTION_SET', payload: action.payload }),\n      put({ type: 'FETCH_ORAL_REPORT', payload: action.payload }),\n      put({ type: 'FETCH_CHART_DATA', payload: action.payload }),\n    ]);\n    yield take(['SET_GOALS', 'SET_DASHBOARD', 'SET_THREESIXTY_REPORTS', 'SET_ANALYSIS_RECOMMENDATION',\n      'SET_DEMOGRAPHIC', 'SET_CIRCLE_SHARE', 'SET_QUESTION_SET', 'SET_ORAL_REPORT', 'SET_CHART_DATA'])\n    yield put({ type: 'GENERATE_360_LOADED' })\n  } \n  catch (error) {\n    console.log('error', error);\n  }\n};\n\n// general worker saga to fetch clients with access to a specific 360.\n// expect an action.payload with current360Id\nfunction* fetch360Clients(action) {\n  try {\n    const response = yield call(axios.get, `/current360/clients/${action.payload.current360Id}`);\n    yield put({ type: 'SET_360_CLIENTS', payload: {section: action.payload.section, content: response.data} });\n  } \n  catch (error) {\n    console.log('error', error);\n  }\n}\n\n// general worker saga. expect an action.payload with section and current360Id\nfunction* fetch360Info(action) {\n  try {\n    const response = yield call(axios.get, `/current360/info`, {params: action.payload});\n    yield put({ type: 'SET_360_INFO', payload: {section: action.payload.section, content: response.data} });\n  } \n  catch (error) {\n    console.log('error', error);\n  }\n}\n\n// general worker saga. expect an action.payload with section and current360Id\nfunction* fetch360Section(action) {\n  try {\n    const response = yield call(axios.get, `/current360/${action.payload.section}`, {params: action.payload});\n    yield put({ type: 'SET_360_SECTION', payload: {section: action.payload.section, content: response.data} });\n    yield put({ type: 'CURRENT_360_SECTION_NEEDS_UPDATE', payload: {section: action.payload.section} });\n  } \n  catch (error) {\n    console.log('error', error);\n  }\n}\n\nfunction* fetchGoals(action) {\n  try {\n    const response = yield call(axios.get, `/current360/goalsAssessment`, {params: action.payload});\n    yield put({ type: 'SET_GOALS', payload: { content: response.data} });\n    yield put({ type: 'CURRENT_360_SECTION_NEEDS_UPDATE', payload: {section: 'goalsAssessment'} });\n  } \n  catch (error) {\n    console.log('error', error);\n  }\n}\n\nfunction* fetchDashboard(action) {\n  try {\n    const response = yield call(axios.get, `/current360/dashboard`, {params: action.payload});\n    yield put({ type: 'SET_DASHBOARD', payload: {section: 'dashboard', content: response.data} });\n    yield put({ type: 'CURRENT_360_SECTION_NEEDS_UPDATE', payload: {section: 'dashboard'} });\n  } \n  catch (error) {\n    console.log('error', error);\n  }\n}\n\nfunction* fetchThreeSixtyReports(action) {\n  try {\n    const response = yield call(axios.get, `/current360/threesixty_reports`, {params: action.payload});\n    yield put({ type: 'SET_THREESIXTY_REPORTS', payload: {section: 'threesixty_reports', content: response.data} });\n    yield put({ type: 'CURRENT_360_SECTION_NEEDS_UPDATE', payload: {section: 'threesixty_reports'} });\n  } \n  catch (error) {\n    console.log('error', error);\n  }\n}\n\nfunction* fetchAnalysisRecommendation(action) {\n  try {\n    const response = yield call(axios.get, `/current360/analysis_recommendation`, {params: action.payload});\n    yield put({ type: 'SET_ANALYSIS_RECOMMENDATION', payload: {section: 'analysis_recommendation', content: response.data} });\n    yield put({ type: 'CURRENT_360_SECTION_NEEDS_UPDATE', payload: {section: 'analysis_recommendation'} });\n  } \n  catch (error) {\n    console.log('error', error);\n  }\n}\n\nfunction* fetchDemographics(action) {\n  try {\n    const response = yield call(axios.get, `/current360/demographics`, {params: action.payload});\n    yield put({ type: 'SET_DEMOGRAPHICS', payload: {section: 'demographics', content: response.data} });\n    yield put({ type: 'CURRENT_360_SECTION_NEEDS_UPDATE', payload: {section: 'demographics'} });\n  } \n  catch (error) {\n    console.log('error', error);\n  }\n}\n\nfunction* fetchCircleShare(action) {\n  try {\n    const response = yield call(axios.get, `/current360/circle_share`, {params: action.payload});\n    yield put({ type: 'SET_CIRCLE_SHARE', payload: {section: 'circle_share', content: response.data} });\n    yield put({ type: 'CURRENT_360_SECTION_NEEDS_UPDATE', payload: {section: 'circle_share'} });\n  } \n  catch (error) {\n    console.log('error', error);\n  }\n}\n\n\nfunction* fetchQuestionSet(action) {\n  try {\n    const response = yield call(axios.get, `/current360/question_set`, {params: action.payload});\n    yield put({ type: 'SET_QUESTION_SET', payload: {section: 'question_set', content: response.data} });\n    yield put({ type: 'CURRENT_360_SECTION_NEEDS_UPDATE', payload: {section: 'question_set'} });\n  } \n  catch (error) {\n    console.log('error', error);\n  }\n}\n\n\nfunction* fetchOralReport(action) {\n  try {\n    const response = yield call(axios.get, `/current360/oral_report`, {params: action.payload});\n    yield put({ type: 'SET_ORAL_REPORT', payload: {section: 'oral_report', content: response.data} });\n    yield put({ type: 'CURRENT_360_SECTION_NEEDS_UPDATE', payload: {section: 'oral_report'} });\n  } \n  catch (error) {\n    console.log('error', error);\n  }\n}\n\n// gets data for charts displayed in 360 report\nfunction* fetchChartData(action) {\n  try {\n    const response = yield call(axios.get, `/current360/chart_data`, {params: action.payload});\n    yield put({ type: 'SET_CHART_DATA', payload: response.data} );\n  } \n  catch (error) {\n    console.log('error', error);\n  }\n}\n\n\nfunction* current360Saga() {\n  yield takeLatest( 'CHANGE_PUBLIC_STATUS', changePublicStatus );\n  yield takeLatest( 'CHANGE_PUBLISH_STATUS', changePublishStatus );\n  yield takeLatest( 'CREATE_360_COMPLETE', create360Complete );\n  yield takeLatest( 'CREATE_360_LOWDOWN', create360Lowdown );\n  yield takeLatest( 'EDIT_360', edit360 );\n  yield takeLatest( 'FETCH_360', fetch360 );\n  yield takeLatest( 'FETCH_360_CLIENTS', fetch360Clients);\n  yield takeLatest( 'FETCH_360_INFO', fetch360Info);\n  yield takeLatest( 'FETCH_360_SECTION', fetch360Section);\n  yield takeLatest( 'FETCH_GOALS', fetchGoals );\n  yield takeLatest( 'FETCH_DASHBOARD', fetchDashboard );\n  yield takeLatest( 'FETCH_THREESIXTY_REPORTS', fetchThreeSixtyReports );\n  yield takeLatest( 'FETCH_ANALYSIS_RECOMMENDATION', fetchAnalysisRecommendation );\n  yield takeLatest( 'FETCH_DEMOGRAPHIC', fetchDemographics );\n  yield takeLatest( 'FETCH_CIRCLE_SHARE', fetchCircleShare );\n  yield takeLatest( 'FETCH_QUESTION_SET', fetchQuestionSet );\n  yield takeLatest( 'FETCH_ORAL_REPORT', fetchOralReport );\n  yield takeLatest( 'FETCH_CHART_DATA', fetchChartData );\n};\n\nexport default current360Saga;","import axios from 'axios';\nimport { put, call, takeLatest } from 'redux-saga/effects';\n\n// gets all users\nfunction* fetchAllUsers() {\n  try {\n    const response = yield call(axios.get, '/allUsers');\n    yield put({type: 'SET_ALL_USERS', payload: response.data});\n  } \n  catch (error) {\n    console.log('error', error);\n  }\n};\n\n// gets all pending requests for 360 report access\nfunction* fetchPendingRequests() {\n  try {\n    const response = yield call(axios.get, '/allUsers/pendingRequests');\n    yield put({type: 'SET_PENDING_REQUESTS', payload: response.data});\n  } \n  catch (error) {\n    console.log('error', error);\n  }\n};\n\n// gets all deactivated users\nfunction* fetchDeactivatedUsers() {\n  try {\n    const response = yield call(axios.get, '/allUsers/deactivated');\n    yield put({type: 'SET_DEACTIVATED_USERS', payload: response.data});\n  } \n  catch (error) {\n    console.log('error', error);\n  }\n};\n\n// gets user search results\nfunction* fetchUsersSearch(action) {\n  try {\n    const response = yield call(axios.get, '/allUsers/search', { params: action.payload } );\n    yield put({type: 'SET_ALL_USERS', payload: response.data});\n  } \n  catch (error) {\n    console.log('error', error);\n  }\n};\n\n// gets all users with access to 360 report\nfunction* fetchThreesixtyUsers(action) {\n  try {\n    const response = yield call(axios.get, '/allUsers/threesixty', { params: action.payload } );\n    yield put({type: 'SET_THREESIXTY_USERS', payload: response.data});\n  } \n  catch (error) {\n    console.log('error', error);\n  }\n};\n\nfunction* allUsersSaga() {\n  yield takeLatest( 'FETCH_ALL_USERS', fetchAllUsers );\n  yield takeLatest( 'FETCH_PENDING_REQUESTS', fetchPendingRequests );\n  yield takeLatest( 'FETCH_DEACTIVATED_USERS', fetchDeactivatedUsers );\n  yield takeLatest( 'FETCH_USERS_SEARCH', fetchUsersSearch );\n  yield takeLatest( 'FETCH_THREESIXTY_USERS', fetchThreesixtyUsers );\n};\n\nexport default allUsersSaga;","import axios from 'axios';\nimport { put, call, takeLatest } from 'redux-saga/effects';\n\n// gets user's info\nfunction* fetchUserInfo() {\n  try {\n    const response = yield call(axios.get, '/userControls');\n    yield put({type: 'SET_USER_INFO', payload: response.data});\n  } \n  catch (error) {\n    console.log('error', error);\n  }\n};\n\n// grants a user access to a 360 report\nfunction* add360Access(action) {\n  try {\n    yield call(axios.post, '/userControls/add', {data: action.payload});\n    yield put({ type: 'FETCH_360_CLIENTS', payload: action.payload});\n  } \n  catch (error) {\n    console.log('error', error);\n  }\n};\n\n// removes a user's access permissions to a 360 report\nfunction* remove360Access(action) {\n  try {\n    yield call(axios.delete, `/userControls/threesixty/${action.payload}`);\n    yield put({type: 'FETCH_ALL_USERS'});\n\n  } \n  catch (error) {\n    console.log('error', error);\n  }\n};\n\n// removes a user's access permissions to a 360 report\nfunction* remove360AccessFrom360(action) {\n  try {\n    yield call(axios.delete, `/userControls/threesixty/${action.payload.threesixtyUserId}`);\n    yield put({type: 'FETCH_360_CLIENTS', payload: action.payload});\n\n  } \n  catch (error) {\n    console.log('error', error);\n  }\n};\n\n// posts that a user has requested access to a 360 report\nfunction* request360Access(action) {\n  try {\n    yield call(axios.post, '/userControls', {data: action.payload});\n  } \n  catch (error) {\n    console.log('error', error);\n  }\n};\n\n// saves edits an admin makes to a user's info\nfunction* editUserInfo(action) {\n  try {\n    yield call(axios.put, '/userControls', {data: action.payload});\n    yield put({type: 'FETCH_ALL_USERS'});\n    yield put({type: 'FETCH_DEACTIVATED_USERS'});\n    yield put({type: 'FETCH_PENDING_REQUESTS'});\n    // it's worth looking into a better/more efficient way to handle this,\n    // but that seems like an after-the-break sort of thing\n  } \n  catch (error) {\n    console.log('error', error);\n  }\n};\n\n// saves edits a user makes to their profile\nfunction* editCurrentUserInfo(action) {\n  try {\n    yield call(axios.put, '/userControls/currentUser', {data: action.payload});\n    yield put({type: 'FETCH_USER'});\n  } \n  catch (error) {\n    console.log('error', error);\n  }\n};\n\n// removes user's request from admin's pending requests table\nfunction* deletePendingRequest(action) {\n  try {\n    yield call(axios.delete, `/userControls/${action.payload}`);\n    yield put({type: 'FETCH_PENDING_REQUESTS'});\n  } \n  catch (error) {\n    console.log('error', error);\n  }\n};\n\nfunction* userControlsSaga() {\n  yield takeLatest( 'FETCH_USER_INFO', fetchUserInfo );\n  yield takeLatest( 'ADD_360_ACCESS', add360Access );\n  yield takeLatest( 'REMOVE_360_ACCESS', remove360Access );\n  yield takeLatest( 'REMOVE_360_ACCESS_FROM_360', remove360AccessFrom360 );\n  yield takeLatest( 'REQUEST_360_ACCESS', request360Access );\n  yield takeLatest( 'EDIT_USER_INFO', editUserInfo );\n  yield takeLatest( 'DELETE_PENDING_REQUEST', deletePendingRequest );\n  yield takeLatest( 'EDIT_CURRENT_USER_INFO', editCurrentUserInfo );\n}\n\nexport default userControlsSaga;","import axios from 'axios';\nimport { put, call, takeLatest } from 'redux-saga/effects';\n\n// gets all IZI categories\nfunction* fetchIziCategories() {\n  try {\n    const response = yield call(axios.get, '/iziCategories');\n    yield put( { type: 'SET_IZI_CATEGORIES', payload: response.data } );\n  } \n  catch (error) {\n    console.log('error', error);\n  }\n};\n\nfunction* allUsersSaga() {\n  yield takeLatest( 'FETCH_IZI_CATEGORIES', fetchIziCategories );\n};\n\nexport default allUsersSaga;","import axios from 'axios';\nimport { put, call, takeLatest } from 'redux-saga/effects';\n\n// gets all users access levels\nfunction* fetchAccessLevels(action) {\n  try {\n    const response = yield call(axios.get, '/userAccessLevel' );\n    yield put({ type: 'SET_ACCESS_LEVELS', payload: response.data });\n  } \n  catch (error) {\n    console.log('error', error);\n  }\n};\n\nfunction* userAccessLevelSaga() {\n  yield takeLatest( 'FETCH_ACCESS_LEVELS', fetchAccessLevels );\n};\n\nexport default userAccessLevelSaga;","import { all } from 'redux-saga/effects';\nimport loginSaga from './loginSaga';\nimport registrationSaga from './registrationSaga';\nimport userSaga from './userSaga';\nimport all360sSaga from './all360sSaga';\nimport current360Saga from './current360Saga';\nimport allUsersSaga from './allUsersSaga';\nimport userControlsSaga from './userControlsSaga';\nimport iziCategoriesSaga from './iziCategoriesSaga';\nimport userAccessLevelSaga from './userAccessLevelSaga';\n\n\n// rootSaga is the primary saga.\n// It bundles up all of the other sagas so our project can use them.\n// This is imported in index.js as rootSaga\n\n// some sagas trigger other sagas, as an example\n// the registration triggers a login\n// and login triggers setting the user\nexport default function* rootSaga() {\n  yield all([\n    loginSaga(),\n    registrationSaga(),\n    userSaga(),\n    all360sSaga(),\n    current360Saga(),\n    allUsersSaga(),\n    userControlsSaga(),\n    iziCategoriesSaga(),\n    userAccessLevelSaga(),\n  ]);\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nconst LogOutButton = props => (\n  <button\n    // This button shows up in multiple locations and can be styled differently\n    // by sending the className from its parents through React props\n    className={props.className}\n    onClick={() => props.dispatch({ type: 'LOGOUT' })}\n  >\n    Log Out\n  </button>\n);\n\nexport default connect()(LogOutButton);\n","let root = document.querySelector(':root');\nconst colors = {\n  purple: window.getComputedStyle(root).getPropertyValue('--main-purple'),\n  purpleHover: window.getComputedStyle(root).getPropertyValue('--main-purple-hover'),\n  red: window.getComputedStyle(root).getPropertyValue('--main-red'),\n  redHover: window.getComputedStyle(root).getPropertyValue('--main-red-hover'),\n  pink: window.getComputedStyle(root).getPropertyValue('--main-pink'),\n  pinkHover: window.getComputedStyle(root).getPropertyValue('--main-pink-hover'),\n  orange: window.getComputedStyle(root).getPropertyValue('--main-orange'),\n  orangeHover: window.getComputedStyle(root).getPropertyValue('--main-orange-hover'),\n  lightGrey: window.getComputedStyle(root).getPropertyValue('--main-light-grey'),\n  grey: window.getComputedStyle(root).getPropertyValue('--main-grey'),\n};\n\nexport default colors;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport LogOutButton from '../LogOutButton/LogOutButton';\nimport './Nav.css';\nimport MarnitaLogo from '../HomePage/marnita_logo.png';\nimport colors from '../App/colors';\n\n// Material-UI\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\n\nclass Nav extends Component {\n\n  employee = (user) => {\n    if(user >= 4) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <AppBar className={classes.nav} position=\"fixed\">\n          <Toolbar>\n            <Link to=\"/home\">\n              <img src={MarnitaLogo} alt=\"Marnita's Table Placeholder\" className={classes.image}/>\n              <Typography className={classes.title} variant=\"h4\">\n                MarnitaConnect\n              </Typography>\n            </Link>\n  \n            <div className={classes.grow} />\n              {this.employee(this.props.reduxState.user.access_id) && (\n                <>\n                  <Link className=\"nav-link\" to=\"/dashboard\">\n                    Dashboard\n                  </Link>\n                </>\n              )}\n\n              <Link className=\"nav-link\" to=\"/profile\">\n              {/* Show this link if they are logged in or not,\n              but call this link 'Home' if they are logged in,\n              and call this link 'Login / Register' if they are not */}\n                {this.props.reduxState.user.id ? 'Profile' : 'Login / Register'}\n              </Link>\n\n              {/* Show the link to the info page and the logout button if the user is logged in */}\n              {this.props.reduxState.user.id && (\n                <>\n                  <LogOutButton className=\"nav-link\"/>\n                </>\n              )}\n          </Toolbar>\n        </AppBar>\n      </div>\n    );\n  }\n};\n\nconst styles = {\n  root: {\n    flexGrow: 1,\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  image: {\n    height: '2.125rem',\n    marginRight: 10\n  },\n  nav: {\n    overflow: 'hidden',\n    backgroundColor: colors.purple,\n  },\n  title: {\n    color: 'white',\n    display: 'inline-block'\n  }\n};\n\nconst mapReduxStateToProps = (reduxState) => ({\n  reduxState\n});\n\nexport default connect(mapReduxStateToProps)(withStyles(styles)(Nav));\n","import React from 'react';\nimport './Footer.css'\n\n// This is one of our simplest components\n// It doesn't have local state, so it can be a function component.\n// It doesn't dispatch any redux actions or display any part of redux state\n// or even care what the redux state is, so it doesn't need 'connect()'\n\nconst Footer = () => (\n  <footer className=\"footer\">\n    &copy; Marnita's Table\n  </footer>\n);\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport colors from '../App/colors';\n\n// Material-UI\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport Dialog from '@material-ui/core/Dialog';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Cancel from '@material-ui/icons/Cancel';\n\nclass ForgotPassword extends Component {\n\n  state = {\n    email: '',\n    showError: false,\n    messageFromServer: '',\n    showNullError: false,\n    open: false,\n  }\n\n  handleChange = name => event => {\n    this.setState({\n      [name]: event.target.value,\n    });\n  };\n\n  sendEmail = event => {\n    event.preventDefault();\n    if (this.state.email === '') {\n      this.setState({\n        showError: false,\n        messageFromServer: '',\n        showNullError: true,\n      });\n    } else {\n      axios.post('/forgotPassword', {\n          email: this.state.email,\n        })\n        .then(response => {\n          if (response.data === 'email not in db') {\n            this.setState({\n              showError: true,\n              messageFromServer: '',\n              showNullError: false,\n            });\n          } else if (response.data === 'recovery email sent') {\n            this.setState({\n              showError: false,\n              messageFromServer: 'recovery email sent',\n              showNullError: false,\n            });\n          }\n        })\n        .catch(error => {\n          console.log(error.data);\n        });\n    }\n  };\n\n  handleClickOpen = () => {\n    this.setState({\n      ...this.state,\n      open: true,\n    })\n  } // end handleClickOpen\n\n  handleClickClose = () => {\n    this.setState({\n      ...this.state,\n      email: '',\n      showError: false,\n      messageFromServer: '',\n      showNullError: false,\n      open: false,\n    })\n  } // end handleClickClose\n\n  render() {\n    const { classes } = this.props;\n    const { email, messageFromServer, showNullError, showError } = this.state;\n    return (\n      <React.Fragment>\n        <Button className={classes.button} onClick={this.handleClickOpen}>Forgot Password?</Button>\n        <Dialog\n          open={this.state.open}\n          onClose={this.handleClickClose}\n          aria-labelledby=\"forgot-password-dialog\"\n        >\n          <div className={classes.container}>\n            <Typography variant=\"h6\">Forgot Password?</Typography>\n            <Typography className={classes.header} variant=\"h6\">Enter Your Email Address</Typography>\n            <form className=\"profile-form\" onSubmit={this.sendEmail}>\n              <TextField\n                className={classes.input}\n                id=\"email\"\n                label=\"email\"\n                value={email}\n                onChange={this.handleChange('email')}\n                placeholder=\"Email Address\"\n              />\n              <Button className={classes.submitButton} variant=\"contained\" onClick={this.sendEmail}>Submit</Button>\n            </form>\n            {showNullError && (\n              <div>\n                <Typography className={classes.error}>The email address cannot be empty.</Typography>\n              </div>\n            )}\n            {showError && (\n              <div>\n                <Typography className={classes.error}>\n                  That email address isn't recognized. Please try again or register for a new account.\n                </Typography>\n              </div>\n            )}\n            {messageFromServer === 'recovery email sent' && (\n              <div>\n                <Typography className={classes.emailSent}>\n                  Password Reset Email Sent!\n                </Typography>\n              </div>\n            )}\n          <IconButton className={classes.closeButton} onClick={this.handleClickClose}>\n            <Cancel />\n          </IconButton>\n          </div>\n        </Dialog>\n      </React.Fragment>\n    );\n  }\n}\n\nconst styles = {\n  container: {\n    position: 'relative',\n    textAlign: 'center',\n    padding: 20,\n    height: 350,\n    width: 275\n  },\n  header: {\n    marginBottom: 25,\n  },\n  error: {\n    marginBottom: 50,\n    padding: 10,\n    color: 'white',\n    backgroundColor: colors.red\n  },\n  emailSent: {\n    marginBottom: 50,\n    padding: 10,\n    backgroundColor: colors.lightGrey\n  },\n  button: {\n    textAlign: 'center',\n    width: 200,\n    padding: 10,\n    margin: 10,\n  },\n  submitButton:{\n    display: 'block',\n    margin: '25px auto'\n  },\n  closeButton: {\n    position: 'absolute',\n    top: -5,\n    right: -5,\n    padding: 10,\n    margin: 10,\n  }\n}\n\nexport default (withStyles(styles)(ForgotPassword));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport ForgotPassword from '../ForgotPassword/ForgotPassword';\n\n// Material-UI\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\n\nclass Login extends Component {\n  state = {\n    username: '',\n    password: '',\n  };\n\n  login = (event) => {\n    event.preventDefault();\n\n    if (this.state.username && this.state.password) {\n      this.props.dispatch({\n        type: 'LOGIN',\n        payload: {\n          username: this.state.username,\n          password: this.state.password,\n        },\n      });\n    } else {\n      this.props.dispatch({ type: 'LOGIN_INPUT_ERROR' });\n    }\n  } // end login\n\n  handleInputChangeFor = propertyName => (event) => {\n    this.setState({\n      [propertyName]: event.target.value,\n    });\n  }\n\n  render() {\n    const { classes } = this.props;\n    \n    return (\n      <div className={classes.container}>\n        {this.props.errors.loginMessage && (\n          <Typography\n            variant=\"h4\"\n            className=\"alert\"\n            role=\"alert\"\n          >\n            {this.props.errors.loginMessage}\n          </Typography>\n        )}\n        <form onSubmit={this.login} className={classes.form}>\n          <Typography variant=\"h3\" className={classes.header}>Login</Typography>\n          <div>\n            <TextField\n              label=\"Username\"\n              className={classes.textField}\n              margin=\"dense\"\n              variant=\"outlined\"\n              type=\"text\"\n              name=\"username\"\n              placeholder=\"Username\"\n              value={this.state.username}\n              onChange={this.handleInputChangeFor('username')}\n            />\n          </div>\n          <div>\n            <TextField\n              label=\"Password\"\n              className={classes.textField}\n              margin=\"dense\"\n              variant=\"outlined\"\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"Password\"\n              value={this.state.password}\n              onChange={this.handleInputChangeFor('password')}\n            />\n          </div>\n          <div>\n            <input\n              className=\"log-in\"\n              type=\"submit\"\n              name=\"submit\"\n              value=\"Log In\"\n            />\n          </div>\n        </form>\n        <Button\n          type=\"button\"\n          className={classes.button}\n          onClick={() => {this.props.dispatch({type: 'SET_TO_REGISTER_MODE'})}}\n        >\n          Register\n        </Button>\n        <br />\n        <ForgotPassword />\n      </div>\n    );\n  }\n}\n\nconst styles = {\n  container: {\n    margin: 'auto',\n    textAlign: 'center',\n  },\n  form: {\n    backgroundColor: 'var(--main-light-grey)',\n    width: 380,\n    margin: '25px auto',\n    padding: 17,\n    borderRadius: 2,\n  },\n  header: {\n    textAlign: 'center',\n    marginBottom: 25\n  },\n  button: {\n    textAlign: 'center',\n    width: 200,\n    padding: 10,\n  },\n  textField: {\n    backgroundColor: 'white',\n    margin: 'auto',\n    minWidth: 350,\n    marginBottom: 15\n  },\n};\n\nconst mapReduxStateToProps = (state) => ({\n errors: state.errors\n});\n\nexport default connect(mapReduxStateToProps)(withStyles(styles)(Login));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\n// Material-UI\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\n\nclass CreateUser extends Component {\n  state = {\n    firstname: '',\n    lastname: '',\n    username: '',\n    email: '',\n    password: '',\n    iziName: '',\n    date: null\n  };\n\n  registerUser = (event) => {\n    event.preventDefault();\n\n    if (this.state.username && this.state.password) {\n      this.props.dispatch({\n        type: 'REGISTER',\n        payload: {\n          firstname: this.state.firstname,\n          lastname: this.state.lastname,\n          email: this.state.email,\n          username: this.state.username,\n          password: this.state.password,\n          iziName: this.state.iziName,\n          date: this.state.date\n        },\n      });\n      alert('Success creating profile!')\n    } else {\n      this.props.dispatch({type: 'REGISTRATION_INPUT_ERROR'});\n      alert('Error creating profile!')\n    }\n    this.setState({\n      ...this.state,\n      firstname: '',\n      lastname: '',\n      email: '',\n      username: '',\n      password: '',\n      iziName: '',\n      date: ''\n    })\n  } // end registerUser\n\n  handleCancel = () => {\n    this.props.dispatch({type: 'SET_TO_LOGIN_MODE'});\n  }\n\n  handleInputChangeFor = propertyName => (event) => {\n    this.setState({\n      [propertyName]: event.target.value,\n    });\n  }\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div className={classes.container}>\n        {this.props.errors.registrationMessage && (\n          <Typography\n            variant=\"h4\"\n            className=\"alert\"\n            role=\"alert\"\n          >\n            {this.props.errors.registrationMessage}\n          </Typography>\n        )}\n        <form onSubmit={this.registerUser} className={classes.form}>\n        <Typography variant=\"h3\" className={classes.header}>Create Account</Typography>\n          <TextField\n            label=\"First Name\"\n            className={classes.textField}\n            margin=\"dense\"\n            variant=\"outlined\"\n            type=\"text\"\n            name=\"firstname\"\n            placeholder=\"First Name\"\n            value={this.state.firstname}\n            onChange={this.handleInputChangeFor('firstname')}\n          />\n          <br />\n          <TextField\n            label=\"Last Name\"\n            className={classes.textField}\n            margin=\"dense\"\n            variant=\"outlined\"\n            type=\"text\"\n            name=\"lastname\"\n            placeholder=\"Last Name\"\n            value={this.state.lastname}\n            onChange={this.handleInputChangeFor('lastname')}\n          />\n          <br />\n          <TextField\n            label=\"Email\"\n            className={classes.textField}\n            margin=\"dense\"\n            variant=\"outlined\"\n            type=\"text\"\n            name=\"email\"\n            placeholder=\"Email\"\n            value={this.state.email}\n            onChange={this.handleInputChangeFor('email')}\n          />\n          <br />\n          <TextField\n            label=\"Username\"\n            className={classes.textField}\n            margin=\"dense\"\n            variant=\"outlined\"\n            type=\"text\"\n            name=\"username\"\n            placeholder=\"Username\"\n            value={this.state.username}\n            onChange={this.handleInputChangeFor('username')}\n          />\n          <br />\n          <TextField\n            label=\"Password\"\n            className={classes.textField}\n            margin=\"dense\"\n            variant=\"outlined\"\n            type=\"text\"\n            name=\"password\"\n            placeholder=\"password\"\n            value={this.state.password}\n            onChange={this.handleInputChangeFor('password')}\n          />\n          <br />\n          <Typography className={classes.text}>\n            If you are an IZI sponsor, enter the following\n            information to request access to the full scope of the event data.\n          </Typography>\n          <div>\n            <TextField\n              label=\"IZI Name\"\n              className={classes.textField}\n              margin=\"dense\"\n              variant=\"outlined\"\n              type=\"text\"\n              name=\"iziName\"\n              placeholder=\"iziName\"\n              value={this.state.iziName}\n              onChange={this.handleInputChangeFor('iziName')}\n            />\n            <br />\n            <Typography variant=\"h6\">OR</Typography>\n            <TextField\n              className={classes.textField}\n              type=\"date\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              onChange={this.handleInputChangeFor('date')}\n              name =\"date\"\n            />\n            <br />\n            <Button\n              className={classes.button}\n              variant=\"contained\"\n              type=\"submit\"\n              name=\"submit\"\n              value=\"createUser\"\n            >\n              Create User\n            </Button>\n            <br />\n            <Button\n              className={classes.button}\n              variant=\"contained\"\n              onClick={this.handleCancel}\n              name=\"cancel\"\n              value=\"cancel\"\n            >\n              Cancel\n            </Button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst styles = {\n  container: {\n    margin: 'auto',\n    textAlign: 'center',\n  },\n  textField: {\n    backgroundColor: 'white',\n    margin: 'auto',\n    minWidth: 350,\n    marginBottom: 15\n  },\n  text: {\n    textAlign: 'center',\n    width: 330,\n    margin: 'auto',\n    padding: 10,\n    fontSize: 18\n  },\n  form: {\n    backgroundColor: 'var(--main-light-grey)',\n    width: 380,\n    margin: '25px auto',\n    padding: 17,\n    borderRadius: 2,\n  },\n  header: {\n    textAlign: 'center',\n    marginBottom: 25\n  },\n  button: {\n    width: 200,\n    marginTop: 15\n  }\n};\n\nconst mapReduxStateToProps = (state) => ({\n errors: state.errors\n});\n\nexport default connect(mapReduxStateToProps)(withStyles(styles)(CreateUser));","import React from 'react';\nimport {Route} from 'react-router-dom'\nimport {connect} from 'react-redux';\nimport Login from '../Login/Login';\nimport CreateUser from '../CreateUser/CreateUser';\n\n// A Custom Wrapper Component -- This will keep our code DRY.\n// Responsible for watching redux state, and returning an appropriate component\n// API for this component is the same as a regular route\n\n// THIS IS NOT SECURITY! That must be done on the server\n// A malicious user could change the code and see any view\n// so your server-side route must implement real security\n// by checking req.isAuthenticated for authentication\n// and by checking req.user for authorization\n\nconst ProtectedRoute = (props) => {\n  // Using destructuring, this takes ComponentToProtect from component\n  // prop and grabs all other props to pass them along to Route\n  const {\n    // Alias prop 'component' as 'ComponentToProtect'\n    component: ComponentToProtect,\n    user,\n    loginMode,\n    ...otherProps\n  } = props;\n\n  let ComponentToShow;\n\n  if(user.id) {\n    // if the user is logged in (only logged in users have ids)\n    // show the component that is protected\n    ComponentToShow = ComponentToProtect;\n  } else if (loginMode === 'login') {\n    // if they are not logged in, check the loginMode on Redux State\n    // if the mode is 'login', show the LoginPage\n    ComponentToShow = Login;\n  } else {\n    // the the user is not logged in and the mode is not 'login'\n    // show the CreateUser\n    ComponentToShow = CreateUser;\n  }\n\n  // We return a Route component that gets added to our list of routes\n  return (\n      <Route\n        // all props like 'exact' and 'path' that were passed in\n        // are now passed along to the 'Route' Component\n        {...otherProps}\n        component={ComponentToShow}\n      />\n  )\n}\n\n// Instead of taking everything from state, we just want the user and loginMode\n// to determine which page we should show the user\n// if you wanted you could write this code like this:\n// const mapStateToProps = ({ user, loginMode }) => ({ user, loginMode });\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user,\n    loginMode: state.loginMode,\n  }\n}\n\nexport default connect(mapStateToProps)(ProtectedRoute)\n\n\n","import React from 'react';\nimport {Route} from 'react-router-dom'\nimport {connect} from 'react-redux';\nimport Login from '../Login/Login';\nimport CreateUser from '../CreateUser/CreateUser';\n\n// A Custom Wrapper Component -- This will keep our code DRY.\n// Responsible for watching redux state, and returning an appropriate component\n// API for this component is the same as a regular route\n\n// THIS IS NOT SECURITY! That must be done on the server\n// A malicious user could change the code and see any view\n// so your server-side route must implement real security\n// by checking req.isAuthenticated for authentication\n// and by checking req.user for authorization\n\nconst EmployeeRoute = (props) => {\n  // Using destructuring, this takes ComponentToProtect from component\n  // prop and grabs all other props to pass them along to Route\n  const {\n    // Alias prop 'component' as 'ComponentToProtect'\n    component: ComponentToProtect,\n    user,\n    loginMode,\n    ...otherProps\n  } = props;\n\n  let ComponentToShow;\n\n  if(user.access_id >= 4) {\n    // if the user's access level is employee or higher\n    // show the component that is protected\n    ComponentToShow = ComponentToProtect;\n  } else if (loginMode === 'login') {\n    // if they are not logged in, check the loginMode on Redux State\n    // if the mode is 'login', show the LoginPage\n    ComponentToShow = Login;\n  } else {\n    // the the user is not logged in and the mode is not 'login'\n    // show the CreateUser\n    ComponentToShow = CreateUser;\n  }\n\n  // We return a Route component that gets added to our list of routes\n  return (\n      <Route\n        // all props like 'exact' and 'path' that were passed in\n        // are now passed along to the 'Route' Component\n        {...otherProps}\n        component={ComponentToShow}\n      />\n  )\n}\n\n// Instead of taking everything from state, we just want the user and loginMode\n// to determine which page we should show the user\n// if you wanted you could write this code like this:\n// const mapStateToProps = ({ user, loginMode }) => ({ user, loginMode });\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user,\n    loginMode: state.loginMode,\n  }\n}\n\nexport default connect(mapStateToProps)(EmployeeRoute)\n\n\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\n// React-confirm-alert\nimport { confirmAlert } from 'react-confirm-alert'; // Import\nimport 'react-confirm-alert/src/react-confirm-alert.css' // Import css\n\n// Material-UI\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Switch from '@material-ui/core/Switch';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\n\nconst styles = {\n  container: {\n    margin: 25\n  },\n  textField: {\n    width: 400,\n    marginBottom: 10\n  },\n  form: {\n    textAlign: 'center',\n    padding: 50\n  },\n  header: {\n    textAlign: 'center',\n    marginBottom: 25\n  }\n};\n\n\nclass Create360 extends Component {\n\n  state = {\n    name: '',\n    client: '',\n    date: '',\n    location: '',\n    category: '',\n    description: '',\n    status: false,\n  };\n\n  // will navigate to admin dashboard\n  returnToDashboard = (event) => {\n    event.preventDefault();\n    this.props.history.push('/dashboard');\n  };\n\n  // handles change for inputs\n  handleChange = (event) => {\n    this.setState({\n      ...this.state,\n      [event.target.name]: event.target.value,\n    })\n  };\n\n  // handles change for switch\n  handleSwitch = (event) => {\n    let newValue = !this.state.status;\n    this.setState({\n      ...this.state,\n      status: newValue\n    });\n  };\n\n  // dispatch to current360Saga\n  handleSubmit = (event) => {\n    event.preventDefault();\n    if(this.state.name && this.state.client && this.state.date && this.state.location && this.state.category && this.state.description){\n      this.confirmSubmit();\n    } else {\n      this.errorMessage();\n    };\n  };\n\n  errorMessage = () => {\n    confirmAlert({\n      title: 'Error',\n      message: 'All fields must be completed to proceed.',\n      buttons: [\n        {\n          label: 'Ok',\n        },\n      ]\n    })\n  };\n\n\n  create360 = () => {\n    if(!this.state.status){\n      this.props.dispatch({ type: 'CREATE_360_COMPLETE', payload: this.state });\n      this.props.history.push('/manage360s');\n    } else {\n      this.props.dispatch({ type: 'CREATE_360_LOWDOWN', payload: this.state }); \n      this.props.history.push('/manage360s');\n    };\n  }\n\n  confirmSubmit = () => {\n    confirmAlert({\n      title: 'Confirm to submit',\n      message: `Are you sure you want to create a 360 with these properties?\n                Name: ${this.state.name},\n                Client: ${this.state.client},\n                Date: ${this.state.date},\n                Location: ${this.state.location},\n                Category: ${this.state.category},\n                Description: ${this.state.description}`,\n      buttons: [\n        {\n          label: 'Submit',\n          onClick: () => this.create360()\n        },\n        {\n          label: 'Edit',\n        }\n      ]\n    })\n  };\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div className={classes.container}>\n        <Button \n          variant=\"contained\"\n          onClick={this.returnToDashboard}\n        >\n          Return to Dashboard\n        </Button>\n        <form className={classes.form} onSubmit={this.handleSubmit}>\n          <Typography variant=\"h2\" className={classes.header}>Create 360</Typography>\n          <TextField\n            label=\"Name\"\n            className={classes.textField}\n            margin=\"dense\"\n            variant=\"outlined\"\n            onChange={this.handleChange}\n            value={this.state.name}\n            name =\"name\"\n            placeholder=\"Name\"\n          /><br />\n\n          <TextField\n            label=\"Client\"\n            className={classes.textField}\n            margin=\"dense\"\n            variant=\"outlined\"\n            onChange={this.handleChange}\n            value={this.state.client}\n            name =\"client\"\n            placeholder=\"Client\"\n          /><br />\n\n          <TextField\n            className={classes.textField}\n            type=\"date\"\n            margin=\"dense\"\n            variant=\"outlined\"\n            onChange={this.handleChange}\n            value={this.state.date}\n            name =\"date\"\n          /><br />\n\n          <TextField\n            label=\"Location\"\n            className={classes.textField}\n            margin=\"dense\"\n            variant=\"outlined\"\n            onChange={this.handleChange}\n            value={this.state.location}\n            name =\"location\"\n            placeholder=\"Location\"\n          /><br />\n\n          <FormControl variant=\"outlined\" className={classes.formControl}>\n            <InputLabel\n              ref={ref => {\n                this.InputLabelRef = ref;\n              }}\n              htmlFor=\"outlined-age-simple\"\n            >\n              Category\n            </InputLabel>\n            <Select\n              className={classes.textField}\n              value={this.state.category}\n              onChange={this.handleChange}\n              input={\n                <OutlinedInput\n                  labelWidth={0}\n                  name=\"category\"\n                  id=\"outlined-age-simple\"\n                />\n              }\n            >\n              <MenuItem value=\"\">\n                <em>None</em>\n              </MenuItem>\n              {this.props.reduxState.iziCategories.map(category => (\n                <MenuItem key={category.id} value={category.id}>{category.category}</MenuItem>\n              ))}\n            </Select>\n          </FormControl><br />\n\n          <TextField\n            label=\"Description\"\n            className={classes.textField}\n            margin=\"dense\"\n            variant=\"outlined\"\n            onChange={this.handleChange}\n            value={this.state.description}\n            name =\"description\"\n            placeholder=\"Description\"\n          /><br />\n\n          <span>Longform</span>\n          <Switch\n            checked={this.state.status}\n            onChange={this.handleSwitch}\n            color=\"default\"\n          />\n          <span>Shortform</span>\n\n          <br />\n\n          <Button type=\"submit\" variant=\"contained\">Create 360</Button>\n        </form>\n    </div>\n    );\n  }\n};\n\nconst mapReduxStateToProps = (reduxState) => ({\n reduxState\n});\n\nexport default connect(mapReduxStateToProps)(withStyles(styles)(Create360));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport colors from '../App/colors';\n\n// Material-UI\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Avatar from '@material-ui/core/Avatar';\nimport Forward from '@material-ui/icons/Forward';\nimport PriorityHigh from '@material-ui/icons/PriorityHigh';\n\nclass Dashboard extends Component {\n\n state = {\n  pending: false\n };\n\n handleCreate = () => {\n  this.props.history.push('/create360')\n }\n\n handleView = () => {\n  this.props.history.push('/manage360s')\n }\n\n handleUsers = () => {\n   this.props.history.push('/manageUsers')\n }\n\n componentDidMount() {\n   axios.get('/allUsers/checkRequests')\n   .then((response) => {\n     if(response.data){\n       this.setState({\n         pending: true\n       })\n     } else {\n       this.setState({\n         pending: false\n       })\n     }\n   })\n }\n\n render() {\n   const { classes } = this.props;\n\n   return (\n     <div className={classes.div}>\n      <Typography variant=\"h3\" className={classes.header}>Admin Dashboard</Typography>\n      <ButtonBase className={classes.button} onClick={this.handleCreate}>\n        <Paper className={classes.paper}>\n          <Grid container spacing={0}>\n            <Grid className={classes.btnText} item xs={8}>\n              <Typography variant=\"h6\">CREATE NEW 360</Typography>\n            </Grid>\n            <Grid className={classes.btnGrid} item xs={4}>\n              <Avatar className={classes.root}>\n                <Forward />\n              </Avatar>\n            </Grid>\n          </Grid>\n        </Paper>\n      </ButtonBase>\n\n      <ButtonBase className={classes.button} onClick={this.handleView}>\n        <Paper className={classes.paper}>\n          <Grid container spacing={0}>\n            <Grid className={classes.btnText} item xs={8}>\n              <Typography variant=\"h6\">360 MANAGER</Typography>\n            </Grid>\n            <Grid className={classes.btnGrid} item xs={4}>\n              <Avatar className={classes.root}>\n                <Forward />\n              </Avatar>\n            </Grid>\n          </Grid>\n        </Paper>\n      </ButtonBase>\n\n      <ButtonBase className={classes.button} onClick={this.handleUsers}>\n        <Paper className={classes.paper}>\n          <Grid container spacing={0}>\n            <Grid className={classes.btnText} item xs={8}>\n              <Typography variant=\"h6\">MANAGE USERS</Typography>\n            </Grid>\n            <Grid className={classes.btnGrid} item xs={2}>\n            { this.state.pending ?\n              <Avatar className={classes.root}>\n                <PriorityHigh />\n              </Avatar> : null}\n            </Grid>\n            <Grid className={classes.btnGrid} item xs={2}>\n              <Avatar className={classes.root}>\n                <Forward />\n              </Avatar>\n            </Grid>\n          </Grid>\n        </Paper>\n      </ButtonBase>\n     </div>\n   );\n }\n};\n\nconst styles = {\n  div: {\n    width: 600,\n    justifyContent: 'center',\n    margin: 'auto',\n    textAlign: 'center',\n    padding: 20,\n  },\n  paper: {\n    display: 'flex',\n    width: 380,\n    padding: 5,\n    backgroundColor: colors.grey,\n  },\n  button: {\n    marginBottom: 25\n  },\n  btnText: {\n    textAlign: 'left',\n    paddingLeft: 20,\n    margin: 'auto 0px',\n  },\n  btnGrid: {\n    margin: 0,\n    paddingRight: 10\n  },\n  root: {\n    marginLeft: 'auto',\n  },\n  header: {\n    marginBottom: 25\n  }\n};\n\nconst mapReduxStateToProps = (reduxState) => ({\n reduxState\n});\n\nexport default connect(mapReduxStateToProps)(withStyles(styles)(Dashboard));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\n// Material-UI\nimport { withStyles } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport ReactLoading from 'react-loading';\nimport colors from '../../App/colors';\n\nclass LoadingDialog extends Component {\n\n state = {\n\n };\n\n componentDidMount() {\n    this.props.dispatch({ type: 'FETCH_360', payload: {current360Id: this.props.current360Id} })\n }\n\n render() {\n   const { classes } = this.props;\n\n   return (\n     <React.Fragment>\n      <Dialog\n        open={this.props.reduxState.current360.loadingDialogOpen}\n        aria-labelledby=\"info-publish-dialog\"\n        scroll=\"paper\"\n        fullWidth\n        maxWidth=\"lg\"\n        classes={{paper: classes.paper}}\n      >\n        <DialogTitle id=\"info-publish-dialog\" className={classes.center}>Loading 360</DialogTitle>\n        <DialogContent id=\"info-publish-dialog-content\" className={classes.center} ref={(el) => { this.scroll = el; }}>\n          <ReactLoading type={'bubbles'} color={colors.pink} delay={0} height={100} width={100}/>\n        </DialogContent>\n      </Dialog>\n    </React.Fragment>\n   );\n }\n};\n\nconst styles = {\n  center: {\n    textAlign: 'center',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'flex-start'\n  },\n  paper: {\n    width: 300,\n    height: 200,\n  },\n  spaceBetween: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    flexWrap: 'wrap'\n  }\n};\n\nconst mapReduxStateToProps = (reduxState) => ({\n reduxState\n});\n\nexport default connect(mapReduxStateToProps)(withStyles(styles)(LoadingDialog));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\n\n// Material-UI\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\n\nclass ThreesixtyInformationEditDialog extends Component {\n\n state = {\n   open: false,\n   updating: false,\n   name: this.props.reduxState.current360.info[0].name,\n   date: this.props.reduxState.current360.info[0].date,\n   location: this.props.reduxState.current360.info[0].location,\n   category_id: this.props.reduxState.current360.info[0].category_id,\n   client: this.props.reduxState.current360.info[0].client,\n   description: this.props.reduxState.current360.info[0].description,\n };\n\n // Update the rows array when a textbox is typed in.\n handleChangeFor= (event) => {\n  event.preventDefault();\n\n  this.setState({\n    [event.target.name]: event.target.value,\n    // set flag that this row has been updated so that it can be updated in database upon submittal \n    updated: true\n  })\n } // end handleChangeFor\n\n // handles clicking of the \"edit\" button. Opens a dialog window.\n handleClickOpen = () => {\n  this.props.dispatch({ type: 'FETCH_360_SECTION', payload: {section: 'info', current360Id: this.props.current360Id} });\n  this.setState({\n    ...this.state,\n    open: true,\n    updating: true\n  })\n } // end handleClickOpen\n\n // handles clicking of the \"save\" or \"cancel\" button from the dailog window \n // and closes the dialog window.\n handleClickClose = () => {\n  this.setState({\n    ...this.state,\n    open: false\n  })\n } // end handleClickClose\n\n // dispatches an action to update the database with the new values and \n // calls handleClickClose.\n handleSave = () => {\n  this.props.dispatch({ type: 'EDIT_360', payload: {section: 'info', current360Id: this.props.current360Id, data: this.state} })\n  this.handleClickClose();\n } // end handleSave\n\n // called when this.props.reduxState.current360.updateNeeded.[section] is true (set true\n // after the section is updated), this runs to copy the section into local state.\n loadCurrentData = () => {\n\n  // Create blank object to hold information\n  let newState = {};\n\n  // Save current state for open\n  newState.open = this.state.open;\n  // Save values from redux state\n  newState.name = this.props.reduxState.current360.info[0].name;\n  newState.date = moment(this.props.reduxState.current360.info[0].date).format('YYYY-MM-DD');\n  newState.location = this.props.reduxState.current360.info[0].location;\n  newState.category_id = this.props.reduxState.current360.info[0].category_id;\n  newState.client = this.props.reduxState.current360.info[0].client;\n  newState.description = this.props.reduxState.current360.info[0].description;\n  // Set updating status to false\n  newState.updating = false;\n\n  // Set state to newState object\n  this.setState( newState );\n\n  // Dispatch action to indicate the update has been completed\n  this.props.dispatch({ type: 'CURRENT_360_SECTION_UPDATE_COMPLETE', payload: {section: 'info'} });\n\n } // end loadCurrentData\n\n render() {\n   const { classes } = this.props;\n\n   // Check if the section information updated since this site was last loaded.\n   // A section is re-downloaded each time the edit dialog is opened.\n   if (this.props.reduxState.current360.updateNeeded.info === true) {\n     this.loadCurrentData();\n   }\n\n   return (\n     <React.Fragment>\n      <Button size=\"small\" color=\"primary\" onClick={this.handleClickOpen}>Edit</Button>\n      <Dialog\n        open={this.state.open}\n        onClose={this.handleClickClose}\n        aria-labelledby=\"info-edit-dialog\"\n        scroll=\"paper\"\n        fullWidth\n        maxWidth=\"lg\"\n        classes={{paper: classes.paper}}\n      >\n      {/* Conditionally render a loading message until data is loaded into local state */}\n      {(this.state.updating === true) ? \n      <React.Fragment>\n        <DialogTitle id=\"info-edit-dialog\">Edit 360 Information</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            New information is currently loading...\n          </DialogContentText>\n        </DialogContent>\n      </React.Fragment>\n        :\n        <React.Fragment>\n          <DialogTitle id=\"info-edit-dialog\">Edit 360 Information</DialogTitle>\n          <DialogContent id=\"info-edit-dialog-content\" ref={(el) => { this.scroll = el; }}>\n            <DialogContentText>\n              Remember to save changes before closing this edit dialog.\n            </DialogContentText>\n            <TextField\n              // Create focus on the first text box of the page:\n              autoFocus\n              margin=\"dense\"\n              id=\"name\"\n              name=\"name\"\n              label=\"Name\"\n              type=\"text\"\n              variant=\"outlined\"\n              value={this.state.name}\n              onChange={(event) => this.handleChangeFor(event)}\n              className={classes.input}\n              fullWidth\n              multiline\n            />\n            <TextField\n              // Create focus on the first text box of the page:\n              autoFocus\n              margin=\"dense\"\n              id=\"client\"\n              name=\"client\"\n              label=\"Client\"\n              type=\"text\"\n              variant=\"outlined\"\n              value={this.state.client}\n              onChange={(event) => this.handleChangeFor(event)}\n              className={classes.input}\n              fullWidth\n              multiline\n            />\n            <TextField\n              // Create focus on the first text box of the page:\n              autoFocus\n              margin=\"dense\"\n              id=\"date\"\n              name=\"date\"\n              label=\"Date\"\n              type=\"date\"\n              variant=\"outlined\"\n              value={this.state.date}\n              onChange={(event) => this.handleChangeFor(event)}\n              className={classes.input}\n              fullWidth\n            />\n            <TextField\n              // Create focus on the first text box of the page:\n              autoFocus\n              margin=\"dense\"\n              id=\"location\"\n              name=\"location\"\n              label=\"Location\"\n              type=\"text\"\n              variant=\"outlined\"\n              value={this.state.location}\n              onChange={(event) => this.handleChangeFor(event)}\n              className={classes.input}\n              fullWidth\n              multiline\n            />\n            <FormControl variant=\"outlined\" className={classes.formControl} fullWidth>\n              <InputLabel\n                ref={ref => {\n                  this.InputLabelRef = ref;\n                }}\n                htmlFor=\"category-id\"\n              >\n                Category\n              </InputLabel>\n              <Select\n                value={this.state.category_id}\n                onChange={this.handleChangeFor}\n                input={\n                  <OutlinedInput\n                    labelWidth={65}\n                    notched\n                    name=\"category_id\"\n                    id=\"category-id\"\n                  />\n                }\n              >\n                {this.props.reduxState.iziCategories.map(category => (\n                  <MenuItem key={category.id} value={category.id}>{category.category}</MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n            <TextField\n              // Create focus on the first text box of the page:\n              autoFocus\n              margin=\"dense\"\n              id=\"description\"\n              name=\"description\"\n              label=\"Description\"\n              type=\"text\"\n              variant=\"outlined\"\n              value={this.state.description}\n              onChange={(event) => this.handleChangeFor(event)}\n              className={classes.input}\n              fullWidth\n              multiline\n            />\n\n          </DialogContent>\n          <DialogActions className={classes.spaceBetween}>\n            <div>\n            </div>\n            <div>\n              <Button onClick={this.handleClickClose} color=\"primary\">\n                Cancel\n              </Button>\n              <Button variant=\"contained\" onClick={this.handleSave} color=\"primary\">\n                Save Changes\n              </Button>\n            </div>\n          </DialogActions>\n        </React.Fragment>\n      }\n      </Dialog>\n    </React.Fragment>\n   );\n }\n};\n\nconst styles = {\n  formControl: {\n    marginTop: 8,\n    marginBottom: 4\n  },\n  paper: {\n    minHeight: '50%'\n  },\n  spaceBetween: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    flexWrap: 'wrap'\n  }\n};\n\nconst mapReduxStateToProps = (reduxState) => ({\n reduxState\n});\n\nexport default connect(mapReduxStateToProps)(withStyles(styles)(ThreesixtyInformationEditDialog));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\n// Material-UI\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nclass ThreesixtyInformationPublishDialog extends Component {\n\n state = {\n\n };\n\n render() {\n   const { classes } = this.props;\n\n   return (\n     <React.Fragment>\n      <Dialog\n        open={this.props.open}\n        onClose={this.props.handleClickClose}\n        aria-labelledby=\"info-publish-dialog\"\n        scroll=\"paper\"\n        fullWidth\n        maxWidth=\"lg\"\n        classes={{paper: classes.paper}}\n      >\n        <DialogTitle id=\"info-publish-dialog\">Publish 360</DialogTitle>\n        <DialogContent id=\"info-publish-dialog-content\" ref={(el) => { this.scroll = el; }}>\n          <DialogContentText>\n            Are you sure you want to publish this 360? Publishing will make this 360 available \n            on the MarnitaConnect homepage. Make sure that your sections are accurately set\n            to public/private before completing this action.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions className={classes.spaceBetween}>\n          <div>\n          </div>\n          <div>\n            <Button onClick={this.props.handleClickClose} color=\"primary\">\n              Cancel\n            </Button>\n            <Button variant=\"contained\" onClick={this.props.handleSave} color=\"primary\">\n              Publish\n            </Button>\n          </div>\n        </DialogActions>\n      </Dialog>\n    </React.Fragment>\n   );\n }\n};\n\nconst styles = {\n  paper: {\n    width: 500\n  },\n  spaceBetween: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    flexWrap: 'wrap'\n  }\n};\n\nconst mapReduxStateToProps = (reduxState) => ({\n reduxState\n});\n\nexport default connect(mapReduxStateToProps)(withStyles(styles)(ThreesixtyInformationPublishDialog));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport colors from '../../App/colors';\nimport moment from 'moment';\n\n// import edit and publish dialog components\nimport ThreesixtyInformationEditDialog from '../EditDialogs/ThreesixtyInformationEditDialog';\nimport ThreesixtyInformationPublishDialog from '../EditDialogs/ThreesixtyInformationPublishDialog';\n\n// Material-UI\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Divider from '@material-ui/core/Divider';\nimport Paper from '@material-ui/core/Paper';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\n\nclass ThreesixyInformationExpansionPanel extends Component {\n\n state = {\n  publishDialogOpen: false,\n };\n\n // handle the toggle of published/unpublished for the 360\n handleChangePublished = () => {\n   if (this.props.reduxState.current360.info[0].published_status) {\n    // If 360 is being unpublished, dispatch action to unpublish:\n     this.props.dispatch({ type: 'CHANGE_PUBLISH_STATUS', payload: {field: 'published_status', status: false, current360Id: this.props.current360Id}})\n   } else {\n    // if 360 is being published, open publish dialog window to show warning\n    this.handleClickOpen();\n   }\n } // end handleChangePublished\n\n  // Opens a dialog window when user wants to publish.\n  handleClickOpen = () => {\n    this.setState({\n      ...this.state,\n      publishDialogOpen: true,\n    })\n   } // end handleClickOpen\n  \n   // handles clicking of the \"publish\" or \"cancel\" button from the publish dailog window \n   // and closes the publish dialog window.\n   handleClickClose = () => {\n    this.setState({\n      ...this.state,\n      publishDialogOpen: false\n    })\n   } // end handleClickClose\n  \n   // dispatches an action to update the database with the new values and \n   // calls handleClickClose.\n   handleSave = () => {\n    this.setState({\n      ...this.state,\n      published: true,\n    })\n    this.props.dispatch({ type: 'CHANGE_PUBLISH_STATUS', payload: {field: 'published_status',status: true, current360Id: this.props.current360Id} })\n    this.handleClickClose();\n   } // end handleSave\n\n componentDidMount() {\n   // Get section when loaded\n   this.props.dispatch({ type: 'FETCH_360_INFO', payload: {current360Id: this.props.current360Id} });\n }\n\n render() {\n   const { classes } = this.props;\n\n   return (\n    <div className={classes.root}>\n      <ExpansionPanel className={classes.expansionPanel}>\n\n        {/* Information on the expansion panel's summary bar (always shows) */}\n        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />} className={classes.summary}>\n          <div className={classes.title}>\n            <Typography variant=\"h2\" className={classes.heading}>360 Information</Typography>\n          </div>\n\n          <div className={classes.status}>\n            {/* Render publication status on expansion panel summary. */}\n            {this.props.reduxState.current360.info[0].published_status ? \n             <Typography variant=\"h2\" className={classes.subheading}>Published</Typography> : <Typography variant=\"h2\" className={classes.subheadingUnpublished}>Unpublished</Typography>}\n          </div>\n\n\n        </ExpansionPanelSummary>\n\n        {/* Content that is within the expansion panel (shows when panel is expanded) */}\n        <ExpansionPanelDetails className={classes.details}>\n          <Paper className={classes.rootTable}>\n            {this.props.reduxState.current360.info.map((threesixty, index) => {\n              return (\n                <React.Fragment key={index}>\n                  <p><span className={classes.property}>Database Id: </span>{threesixty.id}</p>\n                  <p><span className={classes.property}>Name: </span>{threesixty.name}</p>\n                  <p><span className={classes.property}>Date: </span>{moment(threesixty.date).format('ll')}</p>\n                  <p><span className={classes.property}>Location: </span>{threesixty.location}</p>\n                  <p><span className={classes.property}>Category: </span>{threesixty.category}</p>\n                  <p><span className={classes.property}>Client: </span>{threesixty.client}</p>\n                  <p><span className={classes.property}>Description: </span>{threesixty.description}</p>\n                </React.Fragment>\n              );\n            })}\n          </Paper>\n        </ExpansionPanelDetails>\n\n        <Divider />\n\n        {/* Actions that show when the panel is expanded */}\n        <ExpansionPanelActions>\n          <FormControlLabel\n            control={\n              <Switch\n                checked={this.props.reduxState.current360.info[0].published_status}\n                onChange={this.handleChangePublished}\n                value=\"published\"\n                classes={{\n                  switchBase: classes.colorSwitchBase,\n                  checked: classes.colorChecked,\n                  bar: classes.colorBar\n                }}\n              />\n            }\n            label={this.props.reduxState.current360.info[0].published_status ? 'Published' : 'Unpublished'}\n          />\n          \n          <ThreesixtyInformationEditDialog current360Id={this.props.current360Id}/>\n          <ThreesixtyInformationPublishDialog open={this.state.publishDialogOpen} handleClickOpen={this.handleClickOpen} \n          handleClickClose={this.handleClickClose} handleSave={this.handleSave}/>\n        </ExpansionPanelActions>\n\n      </ExpansionPanel>\n    </div>\n   );\n }\n};\n\nconst styles = {\n  colorBar: {\n    // needs to be here for custom-css switch to work.\n  },\n  colorChecked: {\n    // needs to be here for custom-css switch to work.\n  },\n  colorSwitchBase: {\n    color: colors.orange,\n    '&$colorChecked': {\n      color: colors.orange,\n      '& + $colorBar': {\n        backgroundColor: colors.orange\n      }\n    }\n  },\n  details: {\n    alignItems: 'center',\n  },\n  expansionPanel: {\n    backgroundColor: colors.lightGrey\n  },\n  heading: {\n    fontSize: \"1.5rem\",\n  },\n  icon: {\n    verticalAlign: 'bottom',\n    height: 20,\n    width: 20,\n  },\n  property: {\n    fontWeight: 'bold'\n  },\n  root: {\n    width: '100%',\n  },\n  rootTable: {\n    width: '100%',\n    overflowX: 'scroll',\n    padding: 20\n  },\n  status: {\n    flexBasis: '25.00%',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    display: 'flex'\n  },\n  subheading: {\n    fontSize: '1rem',\n    color: colors.red,\n    fontWeight: 'bold'\n  },\n  subheadingUnpublished: {\n    fontSize: '1rem',\n    color: colors.purple,\n    fontWeight: 'bold'\n  },\n  summary: {\n    alignItems: 'center',\n  },\n  table: {\n    minWidth: 700\n  },\n  title: {\n    flexBasis: '75.00%',\n  },\n};\n\nconst mapReduxStateToProps = (reduxState) => ({\n reduxState\n});\n\nThreesixyInformationExpansionPanel.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default connect(mapReduxStateToProps)(withStyles(styles)(ThreesixyInformationExpansionPanel));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport colors from '../../App/colors';\n\n// Material-UI\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport CheckCircleOutline from '@material-ui/icons/CheckCircleOutline';\nimport Close from '@material-ui/icons/Close';\n\n// Cleanly style table cells within Material-UI\nconst CustomTableCell = withStyles(theme => ({\n  head: {\n    fontSize: '1rem',\n    backgroundColor: colors.orange,\n    color: 'white',\n    padding: 10,\n    textAlign: 'center'\n  },\n  body: {\n    padding: 5,\n  },\n}))(TableCell);\n\nclass TableUsers extends Component {\n\n  clearRequest = (id) => {\n    this.props.dispatch({type: 'DELETE_PENDING_REQUEST', payload: id});\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n    \n      <Paper className={classes.rootTable}>\n        <Table className={classes.table}>\n          <TableHead>\n            <TableRow>\n              {this.props.headers.map( (header, index) => \n                  <CustomTableCell key={header} width={this.props.width[index]}>{header}</CustomTableCell>\n                )}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {this.props.data.map(row => {\n            return (\n              <TableRow key={row.id}>\n                {this.props.cellVariables.map(( variable, index ) => \n                  <CustomTableCell key={variable} width={this.props.width[index]} component=\"th\" scope=\"row\" className={this.props.className[index]}>\n                    {/* Check if value is truthie. If true, print 'yes' */}\n                    {row[variable] === true ? <CheckCircleOutline className={classes.iconColored}/> : \n                    // Next, check if value is falsie. If not, print the value\n                    ((row[variable] === false || row[variable] === null) ? <Close /> : row[variable])}\n                  </CustomTableCell>\n                )}\n              </TableRow>\n            );\n            })}\n          </TableBody>\n        </Table>\n      </Paper>\n    );\n  }\n};\n\nconst styles = {\n rootTable: {\n  alignItems: 'center',\n  overflowX: 'scroll'\n },\n centerText: {\n  textAlign: 'center'\n },\n icon: {\n  verticalAlign: 'bottom',\n  height: 20,\n  width: 20,\n },\n iconColored: {\n  color: colors.pink\n },\n table: {\n  minWidth: 700\n },\n title: {\n  flexBasis: '75.00%',\n },\n};\n\nconst mapReduxStateToProps = (reduxState) => ({\n reduxState\n});\n\nTableUsers.propTypes = {\n classes: PropTypes.object.isRequired,\n};\n\nexport default connect(mapReduxStateToProps)(withStyles(styles)(TableUsers));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport colors from '../../../App/colors';\n\n// Material-UI\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteForever from '@material-ui/icons/DeleteForever';\nimport Grid from '@material-ui/core/Grid';\n\nclass GoalsAssessmentEditComponent extends Component {\n\n state = {\n\n };\n\n render() {\n   const { classes } = this.props;\n  \n   return (\n    <div key={this.props.index} className={classes.inputGroup}>\n      <Grid container>\n        <Grid item xs={6} className={classes.rowHeaderLeft}>\n          <Typography variant=\"subtitle1\" className={classes.rowLabel}>Row {this.props.index + 1}</Typography>\n        </Grid>\n        <Grid item xs={6} className={classes.rowHeaderRight}>\n          <IconButton aria-label=\"Delete\" className={classes.margin} onClick={() => this.props.deleteRow(this.props.row.id)}>\n            <DeleteForever fontSize=\"small\"/>\n          </IconButton>\n        </Grid>\n      </Grid>\n      <TextField\n        // Create focus on the first text box of the page:\n        {...(this.props.index === 0) ? {autoFocus: true} : null}\n        margin=\"dense\"\n        id=\"description\"\n        name=\"description\"\n        label=\"Description\"\n        type=\"text\"\n        variant=\"outlined\"\n        value={this.props.row.description}\n        onChange={(event) => this.props.handleChangeFor(event,this.props.row.id)}\n        className={classes.input}\n        fullWidth\n        multiline\n      />\n      <div className={classes.spaceBetween}>\n        <TextField\n          margin=\"dense\"\n          id=\"desired\"\n          name=\"desired\"\n          label=\"Desired\"\n          type=\"number\"\n          variant=\"outlined\"\n          value={this.props.row.desired}\n          onChange={(event) => this.props.handleChangeFor(event,this.props.row.id)}\n          className={classes.input}\n        />\n        <TextField\n          margin=\"dense\"\n          id=\"delivered\"\n          name=\"delivered\"\n          label=\"Delivered\"\n          type=\"number\"\n          variant=\"outlined\"\n          value={this.props.row.delivered}\n          onChange={(event) => this.props.handleChangeFor(event,this.props.row.id)}\n          className={classes.input}\n        />\n        <TextField\n          margin=\"dense\"\n          id=\"difference\"\n          name=\"difference\"\n          label=\"Difference\"\n          type=\"number\"\n          variant=\"outlined\"\n          value={this.props.row.difference}\n          onChange={(event) => this.props.handleChangeFor(event,this.props.row.id)}\n          className={classes.input}\n        />\n        <TextField\n          margin=\"dense\"\n          id=\"percent\"\n          name=\"percent\"\n          label=\"Percent\"\n          type=\"number\"\n          variant=\"outlined\"\n          value={this.props.row.percent}\n          onChange={(event) => this.props.handleChangeFor(event,this.props.row.id)}\n          className={classes.input}\n        />\n      </div>\n      <TextField\n        margin=\"dense\"\n        id=\"comments\"\n        name=\"comments\"\n        label=\"Comments\"\n        type=\"text\"\n        variant=\"outlined\"\n        value={this.props.row.comments}\n        onChange={(event) => this.props.handleChangeFor(event,this.props.row.id)}\n        className={classes.input}\n        fullWidth\n        multiline\n      />\n    </div>  \n   );\n }\n};\n\nconst styles = {\n  input: {\n    backgroundColor: 'white',\n    borderRadius: 5,\n  },\n  inputGroup: {\n    marginBottom: 20,\n    padding: 10,\n    backgroundColor: colors.lightGrey,\n    borderRadius: 5\n  },\n  margin: {\n    margin: '0.1vmin',\n  },\n  rowHeaderLeft: {\n    alignItems: 'center',\n    display: 'flex',\n  },\n  rowHeaderRight: {\n    textAlign: 'right'\n  },\n  rowLabel: {\n    marginLeft: '12px'\n  },\n  spaceBetween: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    flexWrap: 'wrap'\n  }\n};\n\nconst mapReduxStateToProps = (reduxState) => ({\n reduxState\n});\n\nexport default connect(mapReduxStateToProps)(withStyles(styles)(GoalsAssessmentEditComponent));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport GoalsAssessmentEditComponent from './Supplements/GoalsAssessmentsEditComponent';\n\n// Material-UI\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nclass GoalsAssessmentEditDialog extends Component {\n\n state = {\n   // DO NOT create integer-only parameters as they are reserved for data rows\n   open: false,\n   addRowId: 0,\n   updating: false,\n };\n\n // Create a new row\n addRow = () => {\n   // create new row with the current row count\n  let newRowName = this.state.addRowId;\n  this.setState({\n    ...this.state,\n    [newRowName]: {\n      id: newRowName,\n      description: '',\n      desired: '',\n      delivered: '',\n      difference: '',\n      percent: '',\n      comments: '',\n      row_public: true,\n      // set flag that this row is new so that it can be added to database upon submittal\n      new: true\n    },\n    // update the row count id\n    addRowId: this.state.addRowId + 1\n  })\n\n  this.scrollToBottom();\n } // end addRow\n\n // Delete a row\n deleteRow = (id) => {\n   this.setState({\n     ...this.state,\n     // replace row's content with 'deleted' string so the row is deleted from database upon submittal\n     [id]: 'deleted'\n   })\n } // end deleteRow\n\n // Update the rows array when a textbox is typed in.\n handleChangeFor= (event, id) => {\n  event.preventDefault();\n\n  this.setState({\n    [id]: {\n      ...this.state[id],\n      [event.target.name]: event.target.value,\n      // set flag that this row has been updated so that it can be updated in database upon submittal \n      updated: true\n    }\n  })\n } // end handleChangeFor\n\n // handles clicking of the \"edit\" button. Opens a dialog window.\n handleClickOpen = () => {\n  this.props.dispatch({ type: 'FETCH_360_SECTION', payload: {section: 'goalsAssessment', current360Id: this.props.current360Id} });\n  this.setState({\n    ...this.state,\n    open: true,\n    updating: true\n  })\n } // end handleClickOpen\n\n // handles clicking of the \"save\" or \"cancel\" button from the dailog window \n // and closes the dialog window.\n handleClickClose = () => {\n  this.setState({\n    ...this.state,\n    open: false\n  })\n } // end handleClickClose\n\n // dispatches an action to update the database with the new values and \n // calls handleClickClose.\n handleSave = () => {\n  this.props.dispatch({ type: 'EDIT_360', payload: {section: 'goalsAssessment', current360Id: this.props.current360Id, data: this.state} })\n  this.handleClickClose();\n } // end handleSave\n\n // called when this.props.reduxState.current360.updateNeeded.[section] is true (set true\n // after the section is updated), this runs to copy the section into local state.\n loadCurrentData = () => {\n\n  // Create blank object to hold information\n  let newState = {};\n\n  // Map through current this.state and save parameters that are not integers (row data)\n  Object.keys(this.state).map( (key) => {\n    if (isNaN(key)) {\n      newState[key]=this.state[key]\n    };\n    return null;\n  });\n\n  // Initialize addRowId\n  // (if all rows are accidentally deleted, this will allow the user to still create a row)\n  let addRowId;\n\n  // map through results from database pull\n  this.props.reduxState.current360.goalsAssessment.map((row,index) => {\n    let rowCheck = row;\n    if (index === 0) {\n      addRowId=row.id;\n    }\n\n    // Check if any entries in the row are null and set to empty strings (for happy inputs)\n    Object.entries(rowCheck).map((entry) => {\n        if (entry[1] == null) {\n          rowCheck[entry[0]] = '';\n        }\n        return null;\n      })\n    \n    // increment addRowId to keep row count up to date\n    addRowId++;\n    // add updated row (with any converted null values) to the newState object\n    newState[row.id]=rowCheck;\n    return null;\n  });\n\n  // Fix updating status and set addRowId in newState\n  newState.updating = false;\n  newState.addRowId = addRowId;\n\n  // Set state to newState object\n  this.setState( newState );\n\n  // Dispatch action to indicate the update has been completed\n  this.props.dispatch({ type: 'CURRENT_360_SECTION_UPDATE_COMPLETE', payload: {section: 'goalsAssessment'} });\n\n } // end loadCurrentData\n\n // Scrolls to the bottom (this.bottom is an empty div at the bottom of the dialog content)\n // when a new row is created to reveal the row\n scrollToBottom = () => {\n   // The timeout is in place to make sure the new row has appended before the scroll begins\n   setTimeout(() => {\n    this.bottom.scrollIntoView({ behavior: \"smooth\", block: \"start\" });\n   }, 250);\n } // scrollToBottom\n\n render() {\n   const { classes } = this.props;\n\n   // Check if the section information updated since this site was last loaded.\n   // A section is re-downloaded each time the edit dialog is opened.\n   if (this.props.reduxState.current360.updateNeeded.goalsAssessment === true) {\n     this.loadCurrentData();\n   }\n\n   return (\n     <React.Fragment>\n      <Button size=\"small\" color=\"primary\" onClick={this.handleClickOpen}>Edit</Button>\n      <Dialog\n        open={this.state.open}\n        onClose={this.handleClickClose}\n        aria-labelledby=\"goal-assessment-edit-dialog\"\n        scroll=\"paper\"\n        fullWidth\n        maxWidth=\"lg\"\n        classes={{paper: classes.paper}}\n      >\n      {/* Conditionally render a loading message until data is loaded into local state */}\n      {(this.state.updating === true) ? \n      <React.Fragment>\n        <DialogTitle id=\"goal-assessment-edit-dialog\">Edit Goals Assessment</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            New information is currently loading...\n          </DialogContentText>\n        </DialogContent>\n      </React.Fragment>\n        :\n        <React.Fragment>\n          <DialogTitle id=\"goal-assessment-edit-dialog\">Edit Goals Assessment</DialogTitle>\n          <DialogContent id=\"goal-assessment-edit-dialog-content\" ref={(el) => { this.scroll = el; }}>\n            <DialogContentText>\n              Remember to save changes before closing this edit dialog.\n            </DialogContentText>\n            {/* Map through keys of this.state. Only render the edit component for integers (which are \n            reserved for row data) */}\n            {Object.keys(this.state).map( (key,index) => {\n              if (!isNaN(key) && this.state[key] !== 'deleted') {\n                return (\n                  <GoalsAssessmentEditComponent key={this.state[key].id} row={this.state[key]} index={index} handleChangeFor={this.handleChangeFor} deleteRow={this.deleteRow} />\n                );\n              } \n              return null;\n            })}\n            <div style={{ float:\"left\", clear: \"both\" }} ref={(el) => { this.bottom = el; }}>\n            </div>\n          </DialogContent>\n          <DialogActions className={classes.spaceBetween}>\n            <div>\n              <Button onClick={this.addRow}>Add Row</Button>\n            </div>\n            <div>\n              <Button onClick={this.handleClickClose} color=\"primary\">\n                Cancel\n              </Button>\n              <Button variant=\"contained\" onClick={this.handleSave} color=\"primary\">\n                Save Changes\n              </Button>\n            </div>\n          </DialogActions>\n        </React.Fragment>\n      }\n      </Dialog>\n    </React.Fragment>\n   );\n }\n};\n\nconst styles = {\n  paper: {\n    height: 'calc(100% - 96px)'\n  },\n  spaceBetween: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    flexWrap: 'wrap'\n  }\n};\n\nconst mapReduxStateToProps = (reduxState) => ({\n reduxState\n});\n\nexport default connect(mapReduxStateToProps)(withStyles(styles)(GoalsAssessmentEditDialog));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport colors from '../../App/colors';\nimport TableTemplate from '../TableTemplate/TableTemplate';\n\n// import edit dialog component\nimport GoalsAssessmentEditDialog from '../EditDialogs/GoalAssessmentsEditDialog';\n\n// Material-UI\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Divider from '@material-ui/core/Divider';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\n\nclass GoalsAssessmentExpansionPanel extends Component {\n\n state = {\n\n };\n\n // handle the toggle of published/unpublished for the section\n handleChangePublished = () => {\n  if (this.props.reduxState.current360.info[0].goals_published) {\n   // If section is being unpublished, dispatch action to unpublish:\n    this.props.dispatch({ type: 'CHANGE_PUBLISH_STATUS', payload: {field: 'goals_published', status: false, current360Id: this.props.current360Id}})\n  } else {\n   // If section is being published, dispatch action to publish:\n   this.props.dispatch({ type: 'CHANGE_PUBLISH_STATUS', payload: {field: 'goals_published', status: true, current360Id: this.props.current360Id}})\n  }\n} // end handleChangePublished\n\n // handle the toggle of public/private for the section\n handleChangePublic = () => {\n  if (this.props.reduxState.current360.info[0].goals_public) {\n   // If section is being changed to private, dispatch action to make private:\n    this.props.dispatch({ type: 'CHANGE_PUBLIC_STATUS', payload: {field: 'goals_public', status: false, current360Id: this.props.current360Id}})\n  } else {\n   // If section is being changed to public, dispatch action to make public:\n   this.props.dispatch({ type: 'CHANGE_PUBLIC_STATUS', payload: {field: 'goals_public', status: true, current360Id: this.props.current360Id}})\n  }\n} // end handleChangePublished\n\n componentDidMount() {\n   // Get section when loaded\n   this.props.dispatch({ type: 'FETCH_GOALS', payload: {section: 'goalsAssessment', current360Id: this.props.current360Id} });\n }\n\n render() {\n   const { classes } = this.props;\n\n   return (\n    <div className={classes.root}>\n      <ExpansionPanel className={classes.expansionPanel}>\n\n        {/* Information on the expansion panel's summary bar (always shows) */}\n        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />} className={classes.summary}>\n          <div className={classes.title}>\n            <Typography variant=\"h2\" className={classes.heading}>Goals Assessment</Typography>\n          </div>\n\n          <div className={classes.status}>\n            {/* Conditionally render \"Published\" on expansion panel summary if the section is active. */}\n            {(this.props.reduxState.current360.info[0].goals_published === true) ?\n            <Typography variant=\"h2\" className={classes.subheading}>Visible,&nbsp;</Typography>\n            : null }\n            {/* Render \"Public\" on expansion panel summary if the section is active. */}\n            <Typography variant=\"h2\" className={classes.subheading}>{this.props.reduxState.current360.info[0].goals_public ? 'Public' : 'Private'}</Typography>\n          </div>\n\n\n        </ExpansionPanelSummary>\n\n        {/* Content that is within the expansion panel (shows when panel is expanded) */}\n        <ExpansionPanelDetails className={classes.details}>\n          <TableTemplate \n            headers={['Description', 'Desired', 'Delivered', 'Difference', 'Percent', 'Comments']} \n            width={['25%',null,null,null,null,null]}\n            data={this.props.reduxState.current360.goalsAssessment} \n            className={[null,classes.centerText,classes.centerText,classes.centerText,classes.centerText,null]}\n            cellVariables={['description', 'desired', 'delivered', 'difference', 'percent', 'comments']} \n          />\n        </ExpansionPanelDetails>\n\n        <Divider />\n\n        {/* Actions that show when the panel is expanded */}\n        <ExpansionPanelActions>\n          <FormControlLabel\n            control={\n              <Switch\n                checked={this.props.reduxState.current360.info[0].goals_published}\n                onChange={this.handleChangePublished}\n                value=\"published\"\n                classes={{\n                  switchBase: classes.colorSwitchBase,\n                  checked: classes.colorChecked,\n                  bar: classes.colorBar\n                }}\n              />\n            }\n            label={this.props.reduxState.current360.info[0].goals_published ? 'Published' : 'Unpublished'}\n          />\n          <FormControlLabel\n            control={\n              <Switch\n                checked={this.props.reduxState.current360.info[0].goals_public}\n                onChange={this.handleChangePublic}\n                value=\"public\"\n                classes={{\n                  switchBase: classes.colorSwitchBase,\n                  checked: classes.colorChecked,\n                  bar: classes.colorBar\n                }}\n              />\n            }\n            label={this.props.reduxState.current360.info[0].goals_public ? 'Public' : 'Private'}\n          />\n          \n          <GoalsAssessmentEditDialog current360Id={this.props.current360Id}/>\n        </ExpansionPanelActions>\n\n      </ExpansionPanel>\n    </div>\n   );\n }\n};\n\nconst styles = {\n  centerText: {\n    textAlign: 'center'\n  },\n  colorBar: {\n    // needs to be here for custom-css switch to work.\n  },\n  colorChecked: {\n    // needs to be here for custom-css switch to work.\n  },\n  colorSwitchBase: {\n    color: colors.orange,\n    '&$colorChecked': {\n      color: colors.orange,\n      '& + $colorBar': {\n        backgroundColor: colors.orange\n      }\n    }\n  },\n  details: {\n    alignItems: 'center',\n  },\n  expansionPanel: {\n    backgroundColor: colors.lightGrey\n  },\n  heading: {\n    fontSize: \"1.5rem\",\n  },\n  icon: {\n    verticalAlign: 'bottom',\n    height: 20,\n    width: 20,\n  },\n  root: {\n    width: '100%',\n  },\n  rootTable: {\n    width: '100%',\n    overflowX: 'scroll'\n  },\n  status: {\n    flexBasis: '25.00%',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    display: 'flex'\n  },\n  subheading: {\n    fontSize: '1rem',\n    color: colors.purple,\n    fontWeight: 'bold'\n  },\n  summary: {\n    alignItems: 'center',\n  },\n  table: {\n    minWidth: 700\n  },\n  title: {\n    flexBasis: '75.00%',\n  },\n};\n\nconst mapReduxStateToProps = (reduxState) => ({\n reduxState\n});\n\nGoalsAssessmentExpansionPanel.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default connect(mapReduxStateToProps)(withStyles(styles)(GoalsAssessmentExpansionPanel));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport colors from '../../../App/colors';\n\n// Material-UI\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteForever from '@material-ui/icons/DeleteForever';\nimport Grid from '@material-ui/core/Grid';\n\nclass DashboardEditComponent extends Component {\n\n state = {\n\n };\n\n render() {\n   const { classes } = this.props;\n  \n   return (\n    <div key={this.props.index} className={classes.inputGroup}>\n      <Grid container>\n        <Grid item xs={6} className={classes.rowHeaderLeft}>\n          <Typography variant=\"subtitle1\" className={classes.rowLabel}>Row {this.props.index + 1}</Typography>\n        </Grid>\n        <Grid item xs={6} className={classes.rowHeaderRight}>\n          <IconButton aria-label=\"Delete\" className={classes.margin} onClick={() => this.props.deleteRow(this.props.row.id)}>\n            <DeleteForever fontSize=\"small\"/>\n          </IconButton>\n        </Grid>\n      </Grid>\n      <TextField\n        // Create focus on the first text box of the page:\n        {...(this.props.index === 0) ? {autoFocus: true} : null}\n        margin=\"dense\"\n        id=\"description\"\n        name=\"row_title\"\n        label=\"Description\"\n        type=\"text\"\n        variant=\"outlined\"\n        value={this.props.row.row_title}\n        onChange={(event) => this.props.handleChangeFor(event,this.props.row.id)}\n        className={classes.input}\n        fullWidth\n        multiline\n      />\n      <TextField\n        margin=\"dense\"\n        id=\"details\"\n        name=\"row_info\"\n        label=\"Details\"\n        type=\"text\"\n        variant=\"outlined\"\n        value={this.props.row.row_info}\n        onChange={(event) => this.props.handleChangeFor(event,this.props.row.id)}\n        className={classes.input}\n        fullWidth\n        multiline\n      />\n    </div>  \n   );\n }\n};\n\nconst styles = {\n  input: {\n    backgroundColor: 'white',\n    borderRadius: 5,\n  },\n  inputGroup: {\n    marginBottom: 20,\n    padding: 10,\n    backgroundColor: colors.lightGrey,\n    borderRadius: 5\n  },\n  margin: {\n    margin: '0.1vmin',\n  },\n  rowHeaderLeft: {\n    alignItems: 'center',\n    display: 'flex',\n  },\n  rowHeaderRight: {\n    textAlign: 'right'\n  },\n  rowLabel: {\n    marginLeft: '12px'\n  },\n  spaceBetween: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    flexWrap: 'wrap'\n  }\n};\n\nconst mapReduxStateToProps = (reduxState) => ({\n reduxState\n});\n\nexport default connect(mapReduxStateToProps)(withStyles(styles)(DashboardEditComponent));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport DashboardEditComponent from './Supplements/DashboardEditComponent';\n\n// Material-UI\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nclass DashboardEditDialog extends Component {\n\n state = {\n   // DO NOT create integer-only parameters as they are reserved for data rows\n   open: false,\n   addRowId: 0,\n   updating: false,\n };\n\n // Create a new row\n addRow = () => {\n   // create new row with the current row count\n  let newRowName = this.state.addRowId;\n  this.setState({\n    ...this.state,\n    [newRowName]: {\n      id: newRowName,\n      row_info: '',\n      row_public: true,\n      row_title: '',\n      // set flag that this row is new so that it can be added to database upon submittal\n      new: true\n    },\n    // update the row count id\n    addRowId: this.state.addRowId + 1\n  })\n\n  this.scrollToBottom();\n } // end addRow\n\n // Delete a row\n deleteRow = (id) => {\n   this.setState({\n     ...this.state,\n     // replace row's content with 'deleted' string so the row is deleted from database upon submittal\n     [id]: 'deleted'\n   })\n } // end deleteRow\n\n // Update the rows array when a textbox is typed in.\n handleChangeFor= (event, id) => {\n  event.preventDefault();\n\n  this.setState({\n    [id]: {\n      ...this.state[id],\n      [event.target.name]: event.target.value,\n      // set flag that this row has been updated so that it can be updated in database upon submittal \n      updated: true\n    }\n  })\n } // end handleChangeFor\n\n // handles clicking of the \"edit\" button. Opens a dialog window.\n handleClickOpen = () => {\n  this.props.dispatch({ type: 'FETCH_360_SECTION', payload: {section: 'dashboard', current360Id: this.props.current360Id} });\n  this.setState({\n    ...this.state,\n    open: true,\n    updating: true\n  })\n } // end handleClickOpen\n\n // handles clicking of the \"save\" or \"cancel\" button from the dailog window \n // and closes the dialog window.\n handleClickClose = () => {\n  this.setState({\n    ...this.state,\n    open: false\n  })\n } // end handleClickClose\n\n // dispatches an action to update the database with the new values and \n // calls handleClickClose.\n handleSave = () => {\n  this.props.dispatch({ type: 'EDIT_360', payload: {section: 'dashboard', current360Id: this.props.current360Id, data: this.state} })\n  this.handleClickClose();\n } // end handleSave\n\n // called when this.props.reduxState.current360.updateNeeded.[section] is true (set true\n // after the section is updated), this runs to copy the section into local state.\n loadCurrentData = () => {\n\n  // Create blank object to hold information\n  let newState = {};\n\n  // Map through current this.state and save parameters that are not integers (row data)\n  Object.keys(this.state).map( (key) => {\n    if (isNaN(key) && key !== 'newState') {\n      newState[key]=this.state[key]\n    };\n    return null;\n  });\n\n  // Initialize addRowId to be 1 \n  // (if all rows are accidentally deleted, this will allow the user to still create a row)\n  let addRowId = 1;\n\n  // map through results from database pull\n  this.props.reduxState.current360.dashboard.map((row,index) => {\n    let rowCheck = row;\n\n    // Check if any entries in the row are null and set to empty strings (for happy inputs)\n    Object.entries(rowCheck).map((entry) => {\n        if (entry[1] == null) {\n          rowCheck[entry[0]] = '';\n        }\n        return null;\n      })\n    \n    // increment addRowId to keep row count up to date\n    addRowId++;\n    // add updated row (with any converted null values) to the newState object\n    newState[row.id]=rowCheck;\n    return null;\n  });\n\n  // Fix updating status and set addRowId in newState\n  newState.updating = false;\n  newState.addRowId = addRowId;\n\n  // Set state to newState object\n  this.setState( newState );\n\n  // Dispatch action to indicate the update has been completed\n  this.props.dispatch({ type: 'CURRENT_360_SECTION_UPDATE_COMPLETE', payload: {section: 'dashboard'} });\n\n } // end loadCurrentData\n\n // Scrolls to the bottom (this.bottom is an empty div at the bottom of the dialog content)\n // when a new row is created to reveal the row\n scrollToBottom = () => {\n   // The timeout is in place to make sure the new row has appended before the scroll begins\n   setTimeout(() => {\n    this.bottom.scrollIntoView({ behavior: \"smooth\", block: \"start\" });\n   }, 250);\n } // scrollToBottom\n\n render() {\n   const { classes } = this.props;\n\n   // Check if the section information updated since this site was last loaded.\n   // A section is re-downloaded each time the edit dialog is opened.\n   if (this.props.reduxState.current360.updateNeeded.dashboard === true) {\n     this.loadCurrentData();\n   }\n\n   return (\n     <React.Fragment>\n      <Button size=\"small\" color=\"primary\" onClick={this.handleClickOpen}>Edit</Button>\n      <Dialog\n        open={this.state.open}\n        onClose={this.handleClickClose}\n        aria-labelledby=\"dashboard-edit-dialog\"\n        scroll=\"paper\"\n        fullWidth\n        maxWidth=\"lg\"\n        classes={{paper: classes.paper}}\n      >\n      {/* Conditionally render a loading message until data is loaded into local state */}\n      {(this.state.updating === true) ? \n      <React.Fragment>\n        <DialogTitle id=\"dashboard-edit-dialog\">Edit Dashboard</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            New information is currently loading...\n          </DialogContentText>\n        </DialogContent>\n      </React.Fragment>\n        :\n        <React.Fragment>\n          <DialogTitle id=\"dashboard-edit-dialog\">Edit Dashboard</DialogTitle>\n          <DialogContent id=\"dashboard-edit-dialog-content\" ref={(el) => { this.scroll = el; }}>\n            <DialogContentText>\n              Remember to save changes before closing this edit dialog.\n            </DialogContentText>\n            {/* Map through keys of this.state. Only render the edit component for integers (which are \n            reserved for row data) */}\n            {Object.keys(this.state).map( (key,index) => {\n              if (!isNaN(key) && this.state[key] !== 'deleted') {\n                return (\n                  <DashboardEditComponent key={this.state[key].id} row={this.state[key]} index={index} handleChangeFor={this.handleChangeFor} deleteRow={this.deleteRow} />\n                );\n              } \n              return null;\n            })}\n            <div style={{ float:\"left\", clear: \"both\" }} ref={(el) => { this.bottom = el; }}>\n            </div>\n          </DialogContent>\n          <DialogActions className={classes.spaceBetween}>\n            <div>\n              <Button onClick={this.addRow}>Add Row</Button>\n            </div>\n            <div>\n              <Button onClick={this.handleClickClose} color=\"primary\">\n                Cancel\n              </Button>\n              <Button variant=\"contained\" onClick={this.handleSave} color=\"primary\">\n                Save Changes\n              </Button>\n            </div>\n          </DialogActions>\n        </React.Fragment>\n      }\n      </Dialog>\n    </React.Fragment>\n   );\n }\n};\n\nconst styles = {\n  paper: {\n    height: 'calc(100% - 96px)'\n  },\n  spaceBetween: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    flexWrap: 'wrap'\n  }\n};\n\nconst mapReduxStateToProps = (reduxState) => ({\n reduxState\n});\n\nexport default connect(mapReduxStateToProps)(withStyles(styles)(DashboardEditDialog));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport colors from '../../App/colors';\nimport TableTemplate from '../TableTemplate/TableTemplate';\n\n// import edit dialog component\nimport DashboardEditDialog from '../EditDialogs/DashboardEditDialog';\n\n// Material-UI\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Divider from '@material-ui/core/Divider';\nimport Paper from '@material-ui/core/Paper';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\n\nclass DashboardExpansionPanel extends Component {\n\n state = {\n\n };\n\n // handle the toggle of published/unpublished for the section\n handleChangePublished = () => {\n  if (this.props.reduxState.current360.info[0].dashboard_published) {\n   // If section is being unpublished, dispatch action to unpublish:\n    this.props.dispatch({ type: 'CHANGE_PUBLISH_STATUS', payload: {field: 'dashboard_published', status: false, current360Id: this.props.current360Id}})\n  } else {\n   // If section is being published, dispatch action to publish:\n   this.props.dispatch({ type: 'CHANGE_PUBLISH_STATUS', payload: {field: 'dashboard_published', status: true, current360Id: this.props.current360Id}})\n  }\n} // end handleChangePublished\n\n // handle the toggle of public/private for the section\n handleChangePublic = () => {\n  if (this.props.reduxState.current360.info[0].dashboard_public) {\n   // If section is being changed to private, dispatch action to make private:\n    this.props.dispatch({ type: 'CHANGE_PUBLIC_STATUS', payload: {field: 'dashboard_public', status: false, current360Id: this.props.current360Id}})\n  } else {\n   // If section is being changed to public, dispatch action to make public:\n   this.props.dispatch({ type: 'CHANGE_PUBLIC_STATUS', payload: {field: 'dashboard_public', status: true, current360Id: this.props.current360Id}})\n  }\n} // end handleChangePublished\n\n componentDidMount() {\n   // Get section when loaded\n   this.props.dispatch({ type: 'FETCH_DASHBOARD', payload: {section: 'dashboard', current360Id: this.props.current360Id} });\n }\n\n render() {\n   const { classes } = this.props;\n\n   return (\n    <div className={classes.root}>\n      <ExpansionPanel className={classes.expansionPanel}>\n\n        {/* Information on the expansion panel's summary bar (always shows) */}\n        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />} className={classes.summary}>\n          <div className={classes.title}>\n            <Typography variant=\"h2\" className={classes.heading}>Dashboard</Typography>\n          </div>\n\n          <div className={classes.status}>\n            {/* Conditionally render \"Published\" on expansion panel summary if the section is active. */}\n            {(this.props.reduxState.current360.info[0].dashboard_published === true) ?\n            <Typography variant=\"h2\" className={classes.subheading}>Visible,&nbsp;</Typography>\n            : null }\n            {/* Render \"Public\" on expansion panel summary if the section is active. */}\n            <Typography variant=\"h2\" className={classes.subheading}>{this.props.reduxState.current360.info[0].dashboard_public ? 'Public' : 'Private'}</Typography>\n          </div>\n\n\n        </ExpansionPanelSummary>\n\n        {/* Content that is within the expansion panel (shows when panel is expanded) */}\n        <ExpansionPanelDetails className={classes.details}>\n          <Paper className={classes.rootTable}>\n            <TableTemplate \n              headers={['Description', 'Details']} \n              width={['15%',null]}\n              data={this.props.reduxState.current360.dashboard} \n              className={[null,null]}\n              cellVariables={['row_title', 'row_info']} \n            />\n          </Paper>\n        </ExpansionPanelDetails>\n\n        <Divider />\n\n        {/* Actions that show when the panel is expanded */}\n        <ExpansionPanelActions>\n          <FormControlLabel\n            control={\n              <Switch\n                checked={this.props.reduxState.current360.info[0].dashboard_published}\n                onChange={this.handleChangePublished}\n                value=\"published\"\n                classes={{\n                  switchBase: classes.colorSwitchBase,\n                  checked: classes.colorChecked,\n                  bar: classes.colorBar\n                }}\n              />\n            }\n            label={this.props.reduxState.current360.info[0].dashboard_published ? 'Published' : 'Unpublished'}\n          />\n          <FormControlLabel\n            control={\n              <Switch\n                checked={this.props.reduxState.current360.info[0].dashboard_public}\n                onChange={this.handleChangePublic}\n                value=\"public\"\n                classes={{\n                  switchBase: classes.colorSwitchBase,\n                  checked: classes.colorChecked,\n                  bar: classes.colorBar\n                }}\n              />\n            }\n            label={this.props.reduxState.current360.info[0].dashboard_public ? 'Public' : 'Private'}\n          />\n          \n          <DashboardEditDialog current360Id={this.props.current360Id}/>\n        </ExpansionPanelActions>\n\n      </ExpansionPanel>\n    </div>\n   );\n }\n};\n\nconst styles = {\n  centerText: {\n    textAlign: 'center'\n  },\n  colorBar: {\n    // needs to be here for custom-css switch to work.\n  },\n  colorChecked: {\n    // needs to be here for custom-css switch to work.\n  },\n  colorSwitchBase: {\n    color: colors.orange,\n    '&$colorChecked': {\n      color: colors.orange,\n      '& + $colorBar': {\n        backgroundColor: colors.orange\n      }\n    }\n  },\n  details: {\n    alignItems: 'center',\n  },\n  expansionPanel: {\n    backgroundColor: colors.lightGrey\n  },\n  heading: {\n    fontSize: \"1.5rem\",\n  },\n  icon: {\n    verticalAlign: 'bottom',\n    height: 20,\n    width: 20,\n  },\n  root: {\n    width: '100%',\n  },\n  rootTable: {\n    width: '100%',\n    overflowX: 'scroll'\n  },\n  status: {\n    flexBasis: '25.00%',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    display: 'flex'\n  },\n  subheading: {\n    fontSize: '1rem',\n    color: colors.purple,\n    fontWeight: 'bold'\n  },\n  summary: {\n    alignItems: 'center',\n  },\n  table: {\n    minWidth: 700\n  },\n  title: {\n    flexBasis: '75.00%',\n  },\n};\n\nconst mapReduxStateToProps = (reduxState) => ({\n reduxState\n});\n\nDashboardExpansionPanel.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default connect(mapReduxStateToProps)(withStyles(styles)(DashboardExpansionPanel));","import React from 'react';\nimport ReactMarkdown from \"react-markdown\";\n\nconst MarkDownOutput = (props) => {\n  const { display } = props;\n  return (\n    <ReactMarkdown\n      source={display}\n      skipHtml={false}\n      escapeHtml={false}\n    />\n  );\n}\n\nexport default MarkDownOutput;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport colors from '../../App/colors';\nimport MarkDownOutput from '../../MarkdownOutput/MarkdownOutput';\n\n// import edit dialog component\n// import AnalysisRecEditDialog from '../EditDialogs/AnalysisRecEditDialog';\n\n// Material-UI\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Divider from '@material-ui/core/Divider';\nimport Paper from '@material-ui/core/Paper';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\n\nclass ThreesixtyEventOverviewExpansionPanel extends Component {\n\n state = {\n\n };\n\n // handle the toggle of published/unpublished for the section\n handleChangePublished = () => {\n  if (this.props.reduxState.current360.info[0].threesixty_reports_published) {\n   // If section is being unpublished, dispatch action to unpublish:\n    this.props.dispatch({ type: 'CHANGE_PUBLISH_STATUS', payload: {field: 'threesixty_reports_published', status: false, current360Id: this.props.current360Id}})\n  } else {\n   // If section is being published, dispatch action to publish:\n   this.props.dispatch({ type: 'CHANGE_PUBLISH_STATUS', payload: {field: 'threesixty_reports_published', status: true, current360Id: this.props.current360Id}})\n  }\n} // end handleChangePublished\n\n // handle the toggle of public/private for the section\n handleChangePublic = () => {\n  if (this.props.reduxState.current360.info[0].threesixty_reports_public) {\n   // If section is being changed to private, dispatch action to make private:\n    this.props.dispatch({ type: 'CHANGE_PUBLIC_STATUS', payload: {field: 'threesixty_reports_public', status: false, current360Id: this.props.current360Id}})\n  } else {\n   // If section is being changed to public, dispatch action to make public:\n   this.props.dispatch({ type: 'CHANGE_PUBLIC_STATUS', payload: {field: 'threesixty_reports_public', status: true, current360Id: this.props.current360Id}})\n  }\n} // end handleChangePublished\n\n componentDidMount() {\n   // Get section when loaded\n   this.props.dispatch({ type: 'FETCH_THREESIXTY_REPORTS', payload: {section: 'threesixty_reports', current360Id: this.props.current360Id} });\n }\n\n render() {\n   const { classes } = this.props;\n\n   return (\n    <div className={classes.root}>\n      <ExpansionPanel className={classes.expansionPanel}>\n\n        {/* Information on the expansion panel's summary bar (always shows) */}\n        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />} className={classes.summary}>\n          <div className={classes.title}>\n            <Typography variant=\"h2\" className={classes.heading}>360 Report - Event Overview</Typography>\n          </div>\n\n          <div className={classes.status}>\n            {/* Conditionally render \"Published\" on expansion panel summary if the section is active. */}\n            {(this.props.reduxState.current360.info[0].threesixty_reports_published === true) ?\n            <Typography variant=\"h2\" className={classes.subheading}>Visible,&nbsp;</Typography>\n            : null }\n            {/* Render \"Public\" on expansion panel summary if the section is active. */}\n            <Typography variant=\"h2\" className={classes.subheading}>{this.props.reduxState.current360.info[0].threesixty_reports_public ? 'Public' : 'Private'}</Typography>\n          </div>\n\n\n        </ExpansionPanelSummary>\n\n        {/* Content that is within the expansion panel (shows when panel is expanded) */}\n        <ExpansionPanelDetails className={classes.details}>\n          <Paper className={classes.rootTable}>\n\n          </Paper>\n        </ExpansionPanelDetails>\n\n        <Divider />\n\n        {/* Actions that show when the panel is expanded */}\n        <ExpansionPanelActions>\n          <FormControlLabel\n            control={\n              <Switch\n                checked={this.props.reduxState.current360.info[0].threesixty_reports_published}\n                onChange={this.handleChangePublished}\n                value=\"published\"\n                classes={{\n                  switchBase: classes.colorSwitchBase,\n                  checked: classes.colorChecked,\n                  bar: classes.colorBar\n                }}\n              />\n            }\n            label={this.props.reduxState.current360.info[0].threesixty_reports_published ? 'Published' : 'Unpublished'}\n          />\n          <FormControlLabel\n            control={\n              <Switch\n                checked={this.props.reduxState.current360.info[0].threesixty_reports_public}\n                onChange={this.handleChangePublic}\n                value=\"public\"\n                classes={{\n                  switchBase: classes.colorSwitchBase,\n                  checked: classes.colorChecked,\n                  bar: classes.colorBar\n                }}\n              />\n            }\n            label={this.props.reduxState.current360.info[0].threesixty_reports_public ? 'Public' : 'Private'}\n          />\n          \n          {/* <AnalysisRecEditDialog current360Id={this.props.current360Id}/> */}\n        </ExpansionPanelActions>\n\n      </ExpansionPanel>\n    </div>\n   );\n }\n};\n\nconst styles = {\n  centerText: {\n    textAlign: 'center'\n  },\n  colorBar: {\n    // needs to be here for custom-css switch to work.\n  },\n  colorChecked: {\n    // needs to be here for custom-css switch to work.\n  },\n  colorSwitchBase: {\n    color: colors.orange,\n    '&$colorChecked': {\n      color: colors.orange,\n      '& + $colorBar': {\n        backgroundColor: colors.orange\n      }\n    }\n  },\n  details: {\n    alignItems: 'center',\n  },\n  expansionPanel: {\n    backgroundColor: colors.lightGrey\n  },\n  heading: {\n    fontSize: \"1.5rem\",\n  },\n  icon: {\n    verticalAlign: 'bottom',\n    height: 20,\n    width: 20,\n  },\n  root: {\n    width: '100%',\n  },\n  rootTable: {\n    width: '100%',\n    overflowX: 'scroll',\n    padding: 20\n  },\n  status: {\n    flexBasis: '25.00%',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    display: 'flex'\n  },\n  subheading: {\n    fontSize: '1rem',\n    color: colors.purple,\n    fontWeight: 'bold'\n  },\n  summary: {\n    alignItems: 'center',\n  },\n  table: {\n    minWidth: 700\n  },\n  title: {\n    flexBasis: '75.00%',\n  },\n};\n\nconst mapReduxStateToProps = (reduxState) => ({\n reduxState\n});\n\nThreesixtyEventOverviewExpansionPanel.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default connect(mapReduxStateToProps)(withStyles(styles)(ThreesixtyEventOverviewExpansionPanel));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport colors from '../../App/colors';\nimport MarkDownOutput from '../../MarkdownOutput/MarkdownOutput';\n\n// import edit dialog component\n// import AnalysisRecEditDialog from '../EditDialogs/AnalysisRecEditDialog';\n\n// Material-UI\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Divider from '@material-ui/core/Divider';\nimport Paper from '@material-ui/core/Paper';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\n\nclass ThreesixtyMindstormExpansionPanel extends Component {\n\n state = {\n\n };\n\n // handle the toggle of published/unpublished for the section\n handleChangePublished = () => {\n  if (this.props.reduxState.current360.info[0].threesixty_reports_published) {\n   // If section is being unpublished, dispatch action to unpublish:\n    this.props.dispatch({ type: 'CHANGE_PUBLISH_STATUS', payload: {field: 'threesixty_reports_published', status: false, current360Id: this.props.current360Id}})\n  } else {\n   // If section is being published, dispatch action to publish:\n   this.props.dispatch({ type: 'CHANGE_PUBLISH_STATUS', payload: {field: 'threesixty_reports_published', status: true, current360Id: this.props.current360Id}})\n  }\n} // end handleChangePublished\n\n // handle the toggle of public/private for the section\n handleChangePublic = () => {\n  if (this.props.reduxState.current360.info[0].threesixty_reports_public) {\n   // If section is being changed to private, dispatch action to make private:\n    this.props.dispatch({ type: 'CHANGE_PUBLIC_STATUS', payload: {field: 'threesixty_reports_public', status: false, current360Id: this.props.current360Id}})\n  } else {\n   // If section is being changed to public, dispatch action to make public:\n   this.props.dispatch({ type: 'CHANGE_PUBLIC_STATUS', payload: {field: 'threesixty_reports_public', status: true, current360Id: this.props.current360Id}})\n  }\n} // end handleChangePublished\n\n componentDidMount() {\n   // Get section when loaded\n   this.props.dispatch({ type: 'FETCH_THREESIXTY_REPORTS', payload: {section: 'threesixty_reports', current360Id: this.props.current360Id} });\n }\n\n render() {\n   const { classes } = this.props;\n\n   return (\n    <div className={classes.root}>\n      <ExpansionPanel className={classes.expansionPanel}>\n\n        {/* Information on the expansion panel's summary bar (always shows) */}\n        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />} className={classes.summary}>\n          <div className={classes.title}>\n            <Typography variant=\"h2\" className={classes.heading}>360 Report - Mindstorm</Typography>\n          </div>\n\n          <div className={classes.status}>\n            {/* Conditionally render \"Published\" on expansion panel summary if the section is active. */}\n            {(this.props.reduxState.current360.info[0].threesixty_reports_published === true) ?\n            <Typography variant=\"h2\" className={classes.subheading}>Visible,&nbsp;</Typography>\n            : null }\n            {/* Render \"Public\" on expansion panel summary if the section is active. */}\n            <Typography variant=\"h2\" className={classes.subheading}>{this.props.reduxState.current360.info[0].threesixty_reports_public ? 'Public' : 'Private'}</Typography>\n          </div>\n\n\n        </ExpansionPanelSummary>\n\n        {/* Content that is within the expansion panel (shows when panel is expanded) */}\n        <ExpansionPanelDetails className={classes.details}>\n          <Paper className={classes.rootTable}>\n\n          </Paper>\n        </ExpansionPanelDetails>\n\n        <Divider />\n\n        {/* Actions that show when the panel is expanded */}\n        <ExpansionPanelActions>\n          <FormControlLabel\n            control={\n              <Switch\n                checked={this.props.reduxState.current360.info[0].threesixty_reports_published}\n                onChange={this.handleChangePublished}\n                value=\"published\"\n                classes={{\n                  switchBase: classes.colorSwitchBase,\n                  checked: classes.colorChecked,\n                  bar: classes.colorBar\n                }}\n              />\n            }\n            label={this.props.reduxState.current360.info[0].threesixty_reports_published ? 'Published' : 'Unpublished'}\n          />\n          <FormControlLabel\n            control={\n              <Switch\n                checked={this.props.reduxState.current360.info[0].threesixty_reports_public}\n                onChange={this.handleChangePublic}\n                value=\"public\"\n                classes={{\n                  switchBase: classes.colorSwitchBase,\n                  checked: classes.colorChecked,\n                  bar: classes.colorBar\n                }}\n              />\n            }\n            label={this.props.reduxState.current360.info[0].threesixty_reports_public ? 'Public' : 'Private'}\n          />\n          \n          {/* <AnalysisRecEditDialog current360Id={this.props.current360Id}/> */}\n        </ExpansionPanelActions>\n\n      </ExpansionPanel>\n    </div>\n   );\n }\n};\n\nconst styles = {\n  centerText: {\n    textAlign: 'center'\n  },\n  colorBar: {\n    // needs to be here for custom-css switch to work.\n  },\n  colorChecked: {\n    // needs to be here for custom-css switch to work.\n  },\n  colorSwitchBase: {\n    color: colors.orange,\n    '&$colorChecked': {\n      color: colors.orange,\n      '& + $colorBar': {\n        backgroundColor: colors.orange\n      }\n    }\n  },\n  details: {\n    alignItems: 'center',\n  },\n  expansionPanel: {\n    backgroundColor: colors.lightGrey\n  },\n  heading: {\n    fontSize: \"1.5rem\",\n  },\n  icon: {\n    verticalAlign: 'bottom',\n    height: 20,\n    width: 20,\n  },\n  root: {\n    width: '100%',\n  },\n  rootTable: {\n    width: '100%',\n    overflowX: 'scroll',\n    padding: 20\n  },\n  status: {\n    flexBasis: '25.00%',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    display: 'flex'\n  },\n  subheading: {\n    fontSize: '1rem',\n    color: colors.purple,\n    fontWeight: 'bold'\n  },\n  summary: {\n    alignItems: 'center',\n  },\n  table: {\n    minWidth: 700\n  },\n  title: {\n    flexBasis: '75.00%',\n  },\n};\n\nconst mapReduxStateToProps = (reduxState) => ({\n reduxState\n});\n\nThreesixtyMindstormExpansionPanel.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default connect(mapReduxStateToProps)(withStyles(styles)(ThreesixtyMindstormExpansionPanel));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport colors from '../../App/colors';\nimport MarkDownOutput from '../../MarkdownOutput/MarkdownOutput';\n\n// import edit dialog component\n// import AnalysisRecEditDialog from '../EditDialogs/AnalysisRecEditDialog';\n\n// Material-UI\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Divider from '@material-ui/core/Divider';\nimport Paper from '@material-ui/core/Paper';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\n\nclass ThreesixtyOralReportExpansionPanel extends Component {\n\n state = {\n\n };\n\n // handle the toggle of published/unpublished for the section\n handleChangePublished = () => {\n  if (this.props.reduxState.current360.info[0].threesixty_reports_published) {\n   // If section is being unpublished, dispatch action to unpublish:\n    this.props.dispatch({ type: 'CHANGE_PUBLISH_STATUS', payload: {field: 'threesixty_reports_published', status: false, current360Id: this.props.current360Id}})\n  } else {\n   // If section is being published, dispatch action to publish:\n   this.props.dispatch({ type: 'CHANGE_PUBLISH_STATUS', payload: {field: 'threesixty_reports_published', status: true, current360Id: this.props.current360Id}})\n  }\n} // end handleChangePublished\n\n // handle the toggle of public/private for the section\n handleChangePublic = () => {\n  if (this.props.reduxState.current360.info[0].threesixty_reports_public) {\n   // If section is being changed to private, dispatch action to make private:\n    this.props.dispatch({ type: 'CHANGE_PUBLIC_STATUS', payload: {field: 'threesixty_reports_public', status: false, current360Id: this.props.current360Id}})\n  } else {\n   // If section is being changed to public, dispatch action to make public:\n   this.props.dispatch({ type: 'CHANGE_PUBLIC_STATUS', payload: {field: 'threesixty_reports_public', status: true, current360Id: this.props.current360Id}})\n  }\n} // end handleChangePublished\n\n componentDidMount() {\n   // Get section when loaded\n   this.props.dispatch({ type: 'FETCH_THREESIXTY_REPORTS', payload: {section: 'threesixty_reports', current360Id: this.props.current360Id} });\n }\n\n render() {\n   const { classes } = this.props;\n\n   return (\n    <div className={classes.root}>\n      <ExpansionPanel className={classes.expansionPanel}>\n\n        {/* Information on the expansion panel's summary bar (always shows) */}\n        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />} className={classes.summary}>\n          <div className={classes.title}>\n            <Typography variant=\"h2\" className={classes.heading}>360 Report - Oral Report</Typography>\n          </div>\n\n          <div className={classes.status}>\n            {/* Conditionally render \"Published\" on expansion panel summary if the section is active. */}\n            {(this.props.reduxState.current360.info[0].threesixty_reports_published === true) ?\n            <Typography variant=\"h2\" className={classes.subheading}>Visible,&nbsp;</Typography>\n            : null }\n            {/* Render \"Public\" on expansion panel summary if the section is active. */}\n            <Typography variant=\"h2\" className={classes.subheading}>{this.props.reduxState.current360.info[0].threesixty_reports_public ? 'Public' : 'Private'}</Typography>\n          </div>\n\n\n        </ExpansionPanelSummary>\n\n        {/* Content that is within the expansion panel (shows when panel is expanded) */}\n        <ExpansionPanelDetails className={classes.details}>\n          <Paper className={classes.rootTable}>\n\n          </Paper>\n        </ExpansionPanelDetails>\n\n        <Divider />\n\n        {/* Actions that show when the panel is expanded */}\n        <ExpansionPanelActions>\n          <FormControlLabel\n            control={\n              <Switch\n                checked={this.props.reduxState.current360.info[0].threesixty_reports_published}\n                onChange={this.handleChangePublished}\n                value=\"published\"\n                classes={{\n                  switchBase: classes.colorSwitchBase,\n                  checked: classes.colorChecked,\n                  bar: classes.colorBar\n                }}\n              />\n            }\n            label={this.props.reduxState.current360.info[0].threesixty_reports_published ? 'Published' : 'Unpublished'}\n          />\n          <FormControlLabel\n            control={\n              <Switch\n                checked={this.props.reduxState.current360.info[0].threesixty_reports_public}\n                onChange={this.handleChangePublic}\n                value=\"public\"\n                classes={{\n                  switchBase: classes.colorSwitchBase,\n                  checked: classes.colorChecked,\n                  bar: classes.colorBar\n                }}\n              />\n            }\n            label={this.props.reduxState.current360.info[0].threesixty_reports_public ? 'Public' : 'Private'}\n          />\n          \n          {/* <AnalysisRecEditDialog current360Id={this.props.current360Id}/> */}\n        </ExpansionPanelActions>\n\n      </ExpansionPanel>\n    </div>\n   );\n }\n};\n\nconst styles = {\n  centerText: {\n    textAlign: 'center'\n  },\n  colorBar: {\n    // needs to be here for custom-css switch to work.\n  },\n  colorChecked: {\n    // needs to be here for custom-css switch to work.\n  },\n  colorSwitchBase: {\n    color: colors.orange,\n    '&$colorChecked': {\n      color: colors.orange,\n      '& + $colorBar': {\n        backgroundColor: colors.orange\n      }\n    }\n  },\n  details: {\n    alignItems: 'center',\n  },\n  expansionPanel: {\n    backgroundColor: colors.lightGrey\n  },\n  heading: {\n    fontSize: \"1.5rem\",\n  },\n  icon: {\n    verticalAlign: 'bottom',\n    height: 20,\n    width: 20,\n  },\n  root: {\n    width: '100%',\n  },\n  rootTable: {\n    width: '100%',\n    overflowX: 'scroll',\n    padding: 20\n  },\n  status: {\n    flexBasis: '25.00%',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    display: 'flex'\n  },\n  subheading: {\n    fontSize: '1rem',\n    color: colors.purple,\n    fontWeight: 'bold'\n  },\n  summary: {\n    alignItems: 'center',\n  },\n  table: {\n    minWidth: 700\n  },\n  title: {\n    flexBasis: '75.00%',\n  },\n};\n\nconst mapReduxStateToProps = (reduxState) => ({\n reduxState\n});\n\nThreesixtyOralReportExpansionPanel.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default connect(mapReduxStateToProps)(withStyles(styles)(ThreesixtyOralReportExpansionPanel));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport colors from '../../App/colors';\nimport TableTemplate from '../TableTemplate/TableTemplate';\n\n// import edit dialog component\n// import DashboardEditDialog from '../EditDialogs/DashboardEditDialog';\n\n// Material-UI\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Divider from '@material-ui/core/Divider';\nimport Paper from '@material-ui/core/Paper';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\n\nclass ThreesixtyFreeformExpansionPanel extends Component {\n\n state = {\n\n };\n\n // handle the toggle of published/unpublished for the section\n handleChangePublished = () => {\n  if (this.props.reduxState.current360.info[0].threesixty_freeform_published) {\n   // If section is being unpublished, dispatch action to unpublish:\n    this.props.dispatch({ type: 'CHANGE_PUBLISH_STATUS', payload: {field: 'threesixty_freeform_published', status: false, current360Id: this.props.current360Id}})\n  } else {\n   // If section is being published, dispatch action to publish:\n   this.props.dispatch({ type: 'CHANGE_PUBLISH_STATUS', payload: {field: 'threesixty_freeform_published', status: true, current360Id: this.props.current360Id}})\n  }\n} // end handleChangePublished\n\n // handle the toggle of public/private for the section\n handleChangePublic = () => {\n  if (this.props.reduxState.current360.info[0].threesixty_freeform_public) {\n   // If section is being changed to private, dispatch action to make private:\n    this.props.dispatch({ type: 'CHANGE_PUBLIC_STATUS', payload: {field: 'threesixty_freeform_public', status: false, current360Id: this.props.current360Id}})\n  } else {\n   // If section is being changed to public, dispatch action to make public:\n   this.props.dispatch({ type: 'CHANGE_PUBLIC_STATUS', payload: {field: 'threesixty_freeform_public', status: true, current360Id: this.props.current360Id}})\n  }\n} // end handleChangePublished\n\n componentDidMount() {\n   // Get section when loaded\n   this.props.dispatch({ type: 'FETCH_THREESIXTY_REPORTS', payload: {section: 'threesixty_reports', current360Id: this.props.current360Id} });\n }\n\n render() {\n   const { classes } = this.props;\n\n   return (\n    <div className={classes.root}>\n      <ExpansionPanel className={classes.expansionPanel}>\n\n        {/* Information on the expansion panel's summary bar (always shows) */}\n        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />} className={classes.summary}>\n          <div className={classes.title}>\n            <Typography variant=\"h2\" className={classes.heading}>360 Report - Freeform</Typography>\n          </div>\n\n          <div className={classes.status}>\n            {/* Conditionally render \"Published\" on expansion panel summary if the section is active. */}\n            {(this.props.reduxState.current360.info[0].threesixty_freeform_published === true) ?\n            <Typography variant=\"h2\" className={classes.subheading}>Visible,&nbsp;</Typography>\n            : null }\n            {/* Render \"Public\" on expansion panel summary if the section is active. */}\n            <Typography variant=\"h2\" className={classes.subheading}>{this.props.reduxState.current360.info[0].threesixty_freeform_public ? 'Public' : 'Private'}</Typography>\n          </div>\n\n\n        </ExpansionPanelSummary>\n\n        {/* Content that is within the expansion panel (shows when panel is expanded) */}\n        <ExpansionPanelDetails className={classes.details}>\n          <Paper className={classes.rootTable}>\n\n          </Paper>\n        </ExpansionPanelDetails>\n\n        <Divider />\n\n        {/* Actions that show when the panel is expanded */}\n        <ExpansionPanelActions>\n          <FormControlLabel\n            control={\n              <Switch\n                checked={this.props.reduxState.current360.info[0].threesixty_freeform_published}\n                onChange={this.handleChangePublished}\n                value=\"published\"\n                classes={{\n                  switchBase: classes.colorSwitchBase,\n                  checked: classes.colorChecked,\n                  bar: classes.colorBar\n                }}\n              />\n            }\n            label={this.props.reduxState.current360.info[0].threesixty_freeform_published ? 'Published' : 'Unpublished'}\n          />\n          <FormControlLabel\n            control={\n              <Switch\n                checked={this.props.reduxState.current360.info[0].threesixty_freeform_public}\n                onChange={this.handleChangePublic}\n                value=\"public\"\n                classes={{\n                  switchBase: classes.colorSwitchBase,\n                  checked: classes.colorChecked,\n                  bar: classes.colorBar\n                }}\n              />\n            }\n            label={this.props.reduxState.current360.info[0].threesixty_freeform_public ? 'Public' : 'Private'}\n          />\n          \n          {/* <DashboardEditDialog current360Id={this.props.current360Id}/> */}\n        </ExpansionPanelActions>\n\n      </ExpansionPanel>\n    </div>\n   );\n }\n};\n\nconst styles = {\n  centerText: {\n    textAlign: 'center'\n  },\n  colorBar: {\n    // needs to be here for custom-css switch to work.\n  },\n  colorChecked: {\n    // needs to be here for custom-css switch to work.\n  },\n  colorSwitchBase: {\n    color: colors.orange,\n    '&$colorChecked': {\n      color: colors.orange,\n      '& + $colorBar': {\n        backgroundColor: colors.orange\n      }\n    }\n  },\n  details: {\n    alignItems: 'center',\n  },\n  expansionPanel: {\n    backgroundColor: colors.lightGrey\n  },\n  heading: {\n    fontSize: \"1.5rem\",\n  },\n  icon: {\n    verticalAlign: 'bottom',\n    height: 20,\n    width: 20,\n  },\n  root: {\n    width: '100%',\n  },\n  rootTable: {\n    width: '100%',\n    overflowX: 'scroll'\n  },\n  status: {\n    flexBasis: '25.00%',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    display: 'flex'\n  },\n  subheading: {\n    fontSize: '1rem',\n    color: colors.purple,\n    fontWeight: 'bold'\n  },\n  summary: {\n    alignItems: 'center',\n  },\n  table: {\n    minWidth: 700\n  },\n  title: {\n    flexBasis: '75.00%',\n  },\n};\n\nconst mapReduxStateToProps = (reduxState) => ({\n reduxState\n});\n\nThreesixtyFreeformExpansionPanel.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default connect(mapReduxStateToProps)(withStyles(styles)(ThreesixtyFreeformExpansionPanel));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport colors from '../../App/colors';\nimport MarkDownOutput from '../../MarkdownOutput/MarkdownOutput';\n\n// import edit dialog component\n// import AnalysisRecEditDialog from '../EditDialogs/AnalysisRecEditDialog';\n\n// Material-UI\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Divider from '@material-ui/core/Divider';\nimport Paper from '@material-ui/core/Paper';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\n\nclass ThreesixtyCircleShareInExpansionPanel extends Component {\n\n state = {\n\n };\n\n // handle the toggle of published/unpublished for the section\n handleChangePublished = () => {\n  if (this.props.reduxState.current360.info[0].threesixty_reports_published) {\n   // If section is being unpublished, dispatch action to unpublish:\n    this.props.dispatch({ type: 'CHANGE_PUBLISH_STATUS', payload: {field: 'threesixty_reports_published', status: false, current360Id: this.props.current360Id}})\n  } else {\n   // If section is being published, dispatch action to publish:\n   this.props.dispatch({ type: 'CHANGE_PUBLISH_STATUS', payload: {field: 'threesixty_reports_published', status: true, current360Id: this.props.current360Id}})\n  }\n} // end handleChangePublished\n\n // handle the toggle of public/private for the section\n handleChangePublic = () => {\n  if (this.props.reduxState.current360.info[0].threesixty_reports_public) {\n   // If section is being changed to private, dispatch action to make private:\n    this.props.dispatch({ type: 'CHANGE_PUBLIC_STATUS', payload: {field: 'threesixty_reports_public', status: false, current360Id: this.props.current360Id}})\n  } else {\n   // If section is being changed to public, dispatch action to make public:\n   this.props.dispatch({ type: 'CHANGE_PUBLIC_STATUS', payload: {field: 'threesixty_reports_public', status: true, current360Id: this.props.current360Id}})\n  }\n} // end handleChangePublished\n\n componentDidMount() {\n   // Get section when loaded\n   this.props.dispatch({ type: 'FETCH_THREESIXTY_REPORTS', payload: {section: 'threesixty_reports', current360Id: this.props.current360Id} });\n }\n\n render() {\n   const { classes } = this.props;\n\n   return (\n    <div className={classes.root}>\n      <ExpansionPanel className={classes.expansionPanel}>\n\n        {/* Information on the expansion panel's summary bar (always shows) */}\n        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />} className={classes.summary}>\n          <div className={classes.title}>\n            <Typography variant=\"h2\" className={classes.heading}>360 Report - Circle Share-in</Typography>\n          </div>\n\n          <div className={classes.status}>\n            {/* Conditionally render \"Published\" on expansion panel summary if the section is active. */}\n            {(this.props.reduxState.current360.info[0].threesixty_reports_published === true) ?\n            <Typography variant=\"h2\" className={classes.subheading}>Visible,&nbsp;</Typography>\n            : null }\n            {/* Render \"Public\" on expansion panel summary if the section is active. */}\n            <Typography variant=\"h2\" className={classes.subheading}>{this.props.reduxState.current360.info[0].threesixty_reports_public ? 'Public' : 'Private'}</Typography>\n          </div>\n\n\n        </ExpansionPanelSummary>\n\n        {/* Content that is within the expansion panel (shows when panel is expanded) */}\n        <ExpansionPanelDetails className={classes.details}>\n          <Paper className={classes.rootTable}>\n\n          </Paper>\n        </ExpansionPanelDetails>\n\n        <Divider />\n\n        {/* Actions that show when the panel is expanded */}\n        <ExpansionPanelActions>\n          <FormControlLabel\n            control={\n              <Switch\n                checked={this.props.reduxState.current360.info[0].threesixty_reports_published}\n                onChange={this.handleChangePublished}\n                value=\"published\"\n                classes={{\n                  switchBase: classes.colorSwitchBase,\n                  checked: classes.colorChecked,\n                  bar: classes.colorBar\n                }}\n              />\n            }\n            label={this.props.reduxState.current360.info[0].threesixty_reports_published ? 'Published' : 'Unpublished'}\n          />\n          <FormControlLabel\n            control={\n              <Switch\n                checked={this.props.reduxState.current360.info[0].threesixty_reports_public}\n                onChange={this.handleChangePublic}\n                value=\"public\"\n                classes={{\n                  switchBase: classes.colorSwitchBase,\n                  checked: classes.colorChecked,\n                  bar: classes.colorBar\n                }}\n              />\n            }\n            label={this.props.reduxState.current360.info[0].threesixty_reports_public ? 'Public' : 'Private'}\n          />\n          \n          {/* <AnalysisRecEditDialog current360Id={this.props.current360Id}/> */}\n        </ExpansionPanelActions>\n\n      </ExpansionPanel>\n    </div>\n   );\n }\n};\n\nconst styles = {\n  centerText: {\n    textAlign: 'center'\n  },\n  colorBar: {\n    // needs to be here for custom-css switch to work.\n  },\n  colorChecked: {\n    // needs to be here for custom-css switch to work.\n  },\n  colorSwitchBase: {\n    color: colors.orange,\n    '&$colorChecked': {\n      color: colors.orange,\n      '& + $colorBar': {\n        backgroundColor: colors.orange\n      }\n    }\n  },\n  details: {\n    alignItems: 'center',\n  },\n  expansionPanel: {\n    backgroundColor: colors.lightGrey\n  },\n  heading: {\n    fontSize: \"1.5rem\",\n  },\n  icon: {\n    verticalAlign: 'bottom',\n    height: 20,\n    width: 20,\n  },\n  root: {\n    width: '100%',\n  },\n  rootTable: {\n    width: '100%',\n    overflowX: 'scroll',\n    padding: 20\n  },\n  status: {\n    flexBasis: '25.00%',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    display: 'flex'\n  },\n  subheading: {\n    fontSize: '1rem',\n    color: colors.purple,\n    fontWeight: 'bold'\n  },\n  summary: {\n    alignItems: 'center',\n  },\n  table: {\n    minWidth: 700\n  },\n  title: {\n    flexBasis: '75.00%',\n  },\n};\n\nconst mapReduxStateToProps = (reduxState) => ({\n reduxState\n});\n\nThreesixtyCircleShareInExpansionPanel.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default connect(mapReduxStateToProps)(withStyles(styles)(ThreesixtyCircleShareInExpansionPanel));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport colors from '../../../App/colors';\n\n// Material-UI\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\n\nclass AnalysisRecEditComponent extends Component {\n\n state = {\n\n };\n\n render() {\n   const { classes } = this.props;\n  \n   return (\n    <div key={this.props.index} className={classes.inputGroup}>\n      <Grid container>\n        <Grid item xs={6} className={classes.rowHeaderLeft}>\n          <Typography variant=\"subtitle1\" className={classes.rowLabel}>Findings</Typography>\n        </Grid>\n      </Grid>\n      <TextField\n        // Create focus on the first text box of the page:\n        {...(this.props.index === 0) ? {autoFocus: true} : null}\n        margin=\"dense\"\n        id=\"findings\"\n        name=\"findings\"\n        label=\"Findings\"\n        type=\"text\"\n        variant=\"outlined\"\n        value={this.props.row.findings}\n        onChange={(event) => this.props.handleChangeFor(event,this.props.row.id)}\n        className={classes.input}\n        fullWidth\n        multiline\n      />\n      <Grid container>\n        <Grid item xs={6} className={classes.rowHeaderLeft}>\n          <Typography variant=\"subtitle1\" className={classes.rowLabel}>Recommendation</Typography>\n        </Grid>\n      </Grid>\n      <TextField\n        margin=\"dense\"\n        id=\"recommendations\"\n        name=\"recommendations\"\n        label=\"Recommendation\"\n        type=\"text\"\n        variant=\"outlined\"\n        value={this.props.row.recommendations}\n        onChange={(event) => this.props.handleChangeFor(event,this.props.row.id)}\n        className={classes.input}\n        fullWidth\n        multiline\n      />\n    </div>  \n   );\n }\n};\n\nconst styles = {\n  input: {\n    backgroundColor: 'white',\n    borderRadius: 5,\n  },\n  inputGroup: {\n    marginBottom: 20,\n    padding: 10,\n    backgroundColor: colors.lightGrey,\n    borderRadius: 5\n  },\n  margin: {\n    margin: '0.1vmin',\n  },\n  rowHeaderLeft: {\n    alignItems: 'center',\n    display: 'flex',\n  },\n  rowHeaderRight: {\n    textAlign: 'right'\n  },\n  rowLabel: {\n    marginLeft: '12px'\n  },\n  spaceBetween: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    flexWrap: 'wrap'\n  }\n};\n\nconst mapReduxStateToProps = (reduxState) => ({\n reduxState\n});\n\nexport default connect(mapReduxStateToProps)(withStyles(styles)(AnalysisRecEditComponent));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport AnalysisRecEditComponent from './Supplements/AnalysisRecEditComponent';\n\n// Material-UI\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nclass AnalysisRecEditDialog extends Component {\n\n state = {\n   // DO NOT create integer-only parameters as they are reserved for data rows\n   open: false,\n   addRowId: 0,\n   updating: false,\n };\n\n // Create a new row\n addRow = () => {\n   // create new row with the current row count\n  let newRowName = this.state.addRowId;\n  this.setState({\n    ...this.state,\n    [newRowName]: {\n      id: newRowName,\n      description: '',\n      desired: '',\n      delivered: '',\n      difference: '',\n      percent: '',\n      comments: '',\n      // set flag that this row is new so that it can be added to database upon submittal\n      new: true\n    },\n    // update the row count id\n    addRowId: this.state.addRowId + 1\n  })\n\n  this.scrollToBottom();\n } // end addRow\n\n // Delete a row\n deleteRow = (id) => {\n   this.setState({\n     ...this.state,\n     // replace row's content with 'deleted' string so the row is deleted from database upon submittal\n     [id]: 'deleted'\n   })\n } // end deleteRow\n\n // Update the rows array when a textbox is typed in.\n handleChangeFor= (event, id) => {\n  event.preventDefault();\n\n  this.setState({\n    [id]: {\n      ...this.state[id],\n      [event.target.name]: event.target.value,\n      // set flag that this row has been updated so that it can be updated in database upon submittal \n      updated: true\n    }\n  })\n } // end handleChangeFor\n\n // handles clicking of the \"edit\" button. Opens a dialog window.\n handleClickOpen = () => {\n  this.props.dispatch({ type: 'FETCH_360_SECTION', payload: {section: 'analysis_recommendation', current360Id: this.props.current360Id} });\n  this.setState({\n    ...this.state,\n    open: true,\n    updating: true\n  })\n } // end handleClickOpen\n\n // handles clicking of the \"save\" or \"cancel\" button from the dailog window \n // and closes the dialog window.\n handleClickClose = () => {\n  this.setState({\n    ...this.state,\n    open: false\n  })\n } // end handleClickClose\n\n // dispatches an action to update the database with the new values and \n // calls handleClickClose.\n handleSave = () => {\n  this.props.dispatch({ type: 'EDIT_360', payload: {section: 'analysis_recommendation', current360Id: this.props.current360Id, data: this.state} })\n  this.handleClickClose();\n } // end handleSave\n\n // called when this.props.reduxState.current360.updateNeeded.[section] is true (set true\n // after the section is updated), this runs to copy the section into local state.\n loadCurrentData = () => {\n\n  // Create blank object to hold information\n  let newState = {};\n\n  // Map through current this.state and save parameters that are not integers (row data)\n  Object.keys(this.state).map( (key) => {\n    if (isNaN(key) && key !== 'newState') {\n      newState[key]=this.state[key]\n    };\n    return null;\n  });\n\n  // Initialize addRowId to be 1 \n  // (if all rows are accidentally deleted, this will allow the user to still create a row)\n  let addRowId = 1;\n\n  // map through results from database pull\n  this.props.reduxState.current360.analysis_recommendation.map((row,index) => {\n    let rowCheck = row;\n\n    // Check if any entries in the row are null and set to empty strings (for happy inputs)\n    Object.entries(rowCheck).map((entry) => {\n        if (entry[1] == null) {\n          rowCheck[entry[0]] = '';\n        }\n        return null;\n      })\n    \n    // increment addRowId to keep row count up to date\n    addRowId++;\n    // add updated row (with any converted null values) to the newState object\n    newState[row.id]=rowCheck;\n    return null;\n  });\n\n  // Fix updating status and set addRowId in newState\n  newState.updating = false;\n  newState.addRowId = addRowId;\n\n  // Set state to newState object\n  this.setState( newState );\n\n  // Dispatch action to indicate the update has been completed\n  this.props.dispatch({ type: 'CURRENT_360_SECTION_UPDATE_COMPLETE', payload: {section: 'analysis_recommendation'} });\n\n } // end loadCurrentData\n\n // Scrolls to the bottom (this.bottom is an empty div at the bottom of the dialog content)\n // when a new row is created to reveal the row\n scrollToBottom = () => {\n   // The timeout is in place to make sure the new row has appended before the scroll begins\n   setTimeout(() => {\n    this.bottom.scrollIntoView({ behavior: \"smooth\", block: \"start\" });\n   }, 250);\n } // scrollToBottom\n\n render() {\n   const { classes } = this.props;\n\n   // Check if the section information updated since this site was last loaded.\n   // A section is re-downloaded each time the edit dialog is opened.\n   if (this.props.reduxState.current360.updateNeeded.analysis_recommendation === true) {\n     this.loadCurrentData();\n   }\n\n   return (\n     <React.Fragment>\n      <Button size=\"small\" color=\"primary\" onClick={this.handleClickOpen}>Edit</Button>\n      <Dialog\n        open={this.state.open}\n        onClose={this.handleClickClose}\n        aria-labelledby=\"analysis-recommendation-edit-dialog\"\n        scroll=\"paper\"\n        fullWidth\n        maxWidth=\"lg\"\n        classes={{paper: classes.paper}}\n      >\n      {/* Conditionally render a loading message until data is loaded into local state */}\n      {(this.state.updating === true) ? \n      <React.Fragment>\n        <DialogTitle id=\"analysis-recommendation-edit-dialog\">Edit Analysis &amp; Recommendations</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            New information is currently loading...\n          </DialogContentText>\n        </DialogContent>\n      </React.Fragment>\n        :\n        <React.Fragment>\n          <DialogTitle id=\"analysis-recommendation-edit-dialog\">Analysis &amp; Recommendations</DialogTitle>\n          <DialogContent id=\"analysis-recommendation-edit-dialog-content\" ref={(el) => { this.scroll = el; }}>\n            <DialogContentText>\n              Remember to save changes before closing this edit dialog.\n            </DialogContentText>\n            {/* Map through keys of this.state. Only render the edit component for integers (which are \n            reserved for row data) */}\n            {Object.keys(this.state).map( (key,index) => {\n              if (!isNaN(key) && this.state[key] !== 'deleted') {\n                return (\n                  <AnalysisRecEditComponent key={this.state[key].id} row={this.state[key]} index={index} handleChangeFor={this.handleChangeFor} deleteRow={this.deleteRow} />\n                );\n              } \n              return null;\n            })}\n            <div style={{ float:\"left\", clear: \"both\" }} ref={(el) => { this.bottom = el; }}>\n            </div>\n          </DialogContent>\n          <DialogActions className={classes.spaceBetween}>\n            <div>\n              {/* <Button onClick={this.addRow}>Add Row</Button> */}\n            </div>\n            <div>\n              <Button onClick={this.handleClickClose} color=\"primary\">\n                Cancel\n              </Button>\n              <Button variant=\"contained\" onClick={this.handleSave} color=\"primary\">\n                Save Changes\n              </Button>\n            </div>\n          </DialogActions>\n        </React.Fragment>\n      }\n      </Dialog>\n    </React.Fragment>\n   );\n }\n};\n\nconst styles = {\n  paper: {\n    height: 'calc(100% - 96px)'\n  },\n  spaceBetween: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    flexWrap: 'wrap'\n  }\n};\n\nconst mapReduxStateToProps = (reduxState) => ({\n reduxState\n});\n\nexport default connect(mapReduxStateToProps)(withStyles(styles)(AnalysisRecEditDialog));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport colors from '../../App/colors';\nimport MarkDownOutput from '../../MarkdownOutput/MarkdownOutput';\n\n// import edit dialog component\nimport AnalysisRecEditDialog from '../EditDialogs/AnalysisRecEditDialog';\n\n// Material-UI\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Divider from '@material-ui/core/Divider';\nimport Paper from '@material-ui/core/Paper';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\n\nclass AnalysisRecExpansionPanel extends Component {\n\n state = {\n\n };\n\n // handle the toggle of published/unpublished for the section\n handleChangePublished = () => {\n  if (this.props.reduxState.current360.info[0].analysis_recommendation_published) {\n   // If section is being unpublished, dispatch action to unpublish:\n    this.props.dispatch({ type: 'CHANGE_PUBLISH_STATUS', payload: {field: 'analysis_recommendation_published', status: false, current360Id: this.props.current360Id}})\n  } else {\n   // If section is being published, dispatch action to publish:\n   this.props.dispatch({ type: 'CHANGE_PUBLISH_STATUS', payload: {field: 'analysis_recommendation_published', status: true, current360Id: this.props.current360Id}})\n  }\n} // end handleChangePublished\n\n // handle the toggle of public/private for the section\n handleChangePublic = () => {\n  if (this.props.reduxState.current360.info[0].analysis_recommendation_public) {\n   // If section is being changed to private, dispatch action to make private:\n    this.props.dispatch({ type: 'CHANGE_PUBLIC_STATUS', payload: {field: 'analysis_recommendation_public', status: false, current360Id: this.props.current360Id}})\n  } else {\n   // If section is being changed to public, dispatch action to make public:\n   this.props.dispatch({ type: 'CHANGE_PUBLIC_STATUS', payload: {field: 'analysis_recommendation_public', status: true, current360Id: this.props.current360Id}})\n  }\n} // end handleChangePublished\n\n componentDidMount() {\n   // Get section when loaded\n   this.props.dispatch({ type: 'FETCH_ANALYSIS_RECOMMENDATION', payload: {section: 'analysis_recommendation', current360Id: this.props.current360Id} });\n }\n\n render() {\n   const { classes } = this.props;\n\n   return (\n    <div className={classes.root}>\n      <ExpansionPanel className={classes.expansionPanel}>\n\n        {/* Information on the expansion panel's summary bar (always shows) */}\n        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />} className={classes.summary}>\n          <div className={classes.title}>\n            <Typography variant=\"h2\" className={classes.heading}>Analysis &amp; Recommendations</Typography>\n          </div>\n\n          <div className={classes.status}>\n            {/* Conditionally render \"Published\" on expansion panel summary if the section is active. */}\n            {(this.props.reduxState.current360.info[0].analysis_recommendation_published === true) ?\n            <Typography variant=\"h2\" className={classes.subheading}>Visible,&nbsp;</Typography>\n            : null }\n            {/* Render \"Public\" on expansion panel summary if the section is active. */}\n            <Typography variant=\"h2\" className={classes.subheading}>{this.props.reduxState.current360.info[0].analysis_recommendation_public ? 'Public' : 'Private'}</Typography>\n          </div>\n\n\n        </ExpansionPanelSummary>\n\n        {/* Content that is within the expansion panel (shows when panel is expanded) */}\n        <ExpansionPanelDetails className={classes.details}>\n          <Paper className={classes.rootTable}>\n            <Typography variant=\"h5\" className={classes.header5}>Outreach Findings</Typography>\n              <div className={classes.paragraph}>\n                {this.props.reduxState.current360.analysis_recommendation.map((row, index) => \n                  <MarkDownOutput display={row.findings} key={index}/>)}\n              </div>\n            <Typography variant=\"h5\" className={classes.header5}>Recommendation</Typography>\n              <div className={classes.paragraph}>\n              {this.props.reduxState.current360.analysis_recommendation.map((row, index) => \n                  <MarkDownOutput display={row.recommendations} key={index}/>)}\n              </div>\n          </Paper>\n        </ExpansionPanelDetails>\n\n        <Divider />\n\n        {/* Actions that show when the panel is expanded */}\n        <ExpansionPanelActions>\n          <FormControlLabel\n            control={\n              <Switch\n                checked={this.props.reduxState.current360.info[0].analysis_recommendation_published}\n                onChange={this.handleChangePublished}\n                value=\"published\"\n                classes={{\n                  switchBase: classes.colorSwitchBase,\n                  checked: classes.colorChecked,\n                  bar: classes.colorBar\n                }}\n              />\n            }\n            label={this.props.reduxState.current360.info[0].analysis_recommendation_published ? 'Published' : 'Unpublished'}\n          />\n          <FormControlLabel\n            control={\n              <Switch\n                checked={this.props.reduxState.current360.info[0].analysis_recommendation_public}\n                onChange={this.handleChangePublic}\n                value=\"public\"\n                classes={{\n                  switchBase: classes.colorSwitchBase,\n                  checked: classes.colorChecked,\n                  bar: classes.colorBar\n                }}\n              />\n            }\n            label={this.props.reduxState.current360.info[0].analysis_recommendation_public ? 'Public' : 'Private'}\n          />\n          \n          <AnalysisRecEditDialog current360Id={this.props.current360Id}/>\n        </ExpansionPanelActions>\n\n      </ExpansionPanel>\n    </div>\n   );\n }\n};\n\nconst styles = {\n  centerText: {\n    textAlign: 'center'\n  },\n  colorBar: {\n    // needs to be here for custom-css switch to work.\n  },\n  colorChecked: {\n    // needs to be here for custom-css switch to work.\n  },\n  colorSwitchBase: {\n    color: colors.orange,\n    '&$colorChecked': {\n      color: colors.orange,\n      '& + $colorBar': {\n        backgroundColor: colors.orange\n      }\n    }\n  },\n  details: {\n    alignItems: 'center',\n  },\n  expansionPanel: {\n    backgroundColor: colors.lightGrey\n  },\n  heading: {\n    fontSize: \"1.5rem\",\n  },\n  icon: {\n    verticalAlign: 'bottom',\n    height: 20,\n    width: 20,\n  },\n  root: {\n    width: '100%',\n  },\n  rootTable: {\n    width: '100%',\n    overflowX: 'scroll',\n    padding: 20\n  },\n  status: {\n    flexBasis: '25.00%',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    display: 'flex'\n  },\n  subheading: {\n    fontSize: '1rem',\n    color: colors.purple,\n    fontWeight: 'bold'\n  },\n  summary: {\n    alignItems: 'center',\n  },\n  table: {\n    minWidth: 700\n  },\n  title: {\n    flexBasis: '75.00%',\n  },\n};\n\nconst mapReduxStateToProps = (reduxState) => ({\n reduxState\n});\n\nAnalysisRecExpansionPanel.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default connect(mapReduxStateToProps)(withStyles(styles)(AnalysisRecExpansionPanel));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport colors from '../../App/colors';\nimport TableTemplate from '../TableTemplate/TableTemplate';\n\n// import edit dialog component\n// import GoalsAssessmentEditDialog from '../EditDialogs/GoalAssessmentsEditDialog';\n\n// Material-UI\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Divider from '@material-ui/core/Divider';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\n\nclass DemographicDataExpansionPanel extends Component {\n\n state = {\n\n };\n\n // handle the toggle of published/unpublished for the section\n handleChangePublished = () => {\n  if (this.props.reduxState.current360.info[0].demographics_published) {\n   // If section is being unpublished, dispatch action to unpublish:\n    this.props.dispatch({ type: 'CHANGE_PUBLISH_STATUS', payload: {field: 'demographics_published', status: false, current360Id: this.props.current360Id}})\n  } else {\n   // If section is being published, dispatch action to publish:\n   this.props.dispatch({ type: 'CHANGE_PUBLISH_STATUS', payload: {field: 'demographics_published', status: true, current360Id: this.props.current360Id}})\n  }\n} // end handleChangePublished\n\n // handle the toggle of public/private for the section\n handleChangePublic = () => {\n  if (this.props.reduxState.current360.info[0].demographics_public) {\n   // If section is being changed to private, dispatch action to make private:\n    this.props.dispatch({ type: 'CHANGE_PUBLIC_STATUS', payload: {field: 'demographics_public', status: false, current360Id: this.props.current360Id}})\n  } else {\n   // If section is being changed to public, dispatch action to make public:\n   this.props.dispatch({ type: 'CHANGE_PUBLIC_STATUS', payload: {field: 'demographics_public', status: true, current360Id: this.props.current360Id}})\n  }\n} // end handleChangePublished\n\n componentDidMount() {\n   // Get section when loaded\n   this.props.dispatch({ type: 'FETCH_DEMOGRAPHIC', payload: {section: 'demographics', current360Id: this.props.current360Id} });\n }\n\n render() {\n   const { classes } = this.props;\n\n   return (\n    <div className={classes.root}>\n      <ExpansionPanel className={classes.expansionPanel}>\n\n        {/* Information on the expansion panel's summary bar (always shows) */}\n        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />} className={classes.summary}>\n          <div className={classes.title}>\n            <Typography variant=\"h2\" className={classes.heading}>Demographic Data</Typography>\n          </div>\n\n          <div className={classes.status}>\n            {/* Conditionally render \"Published\" on expansion panel summary if the section is active. */}\n            {(this.props.reduxState.current360.info[0].demographics_published === true) ?\n            <Typography variant=\"h2\" className={classes.subheading}>Visible,&nbsp;</Typography>\n            : null }\n            {/* Render \"Public\" on expansion panel summary if the section is active. */}\n            <Typography variant=\"h2\" className={classes.subheading}>{this.props.reduxState.current360.info[0].demographics_public ? 'Public' : 'Private'}</Typography>\n          </div>\n\n\n        </ExpansionPanelSummary>\n\n        {/* Content that is within the expansion panel (shows when panel is expanded) */}\n        <ExpansionPanelDetails className={classes.details}>\n\n        </ExpansionPanelDetails>\n\n        <Divider />\n\n        {/* Actions that show when the panel is expanded */}\n        <ExpansionPanelActions>\n          <FormControlLabel\n            control={\n              <Switch\n                checked={this.props.reduxState.current360.info[0].demographics_published}\n                onChange={this.handleChangePublished}\n                value=\"published\"\n                classes={{\n                  switchBase: classes.colorSwitchBase,\n                  checked: classes.colorChecked,\n                  bar: classes.colorBar\n                }}\n              />\n            }\n            label={this.props.reduxState.current360.info[0].demographics_published ? 'Published' : 'Unpublished'}\n          />\n          <FormControlLabel\n            control={\n              <Switch\n                checked={this.props.reduxState.current360.info[0].demographics_public}\n                onChange={this.handleChangePublic}\n                value=\"public\"\n                classes={{\n                  switchBase: classes.colorSwitchBase,\n                  checked: classes.colorChecked,\n                  bar: classes.colorBar\n                }}\n              />\n            }\n            label={this.props.reduxState.current360.info[0].demographics_public ? 'Public' : 'Private'}\n          />\n          \n          {/* <GoalsAssessmentEditDialog current360Id={this.props.current360Id}/> */}\n        </ExpansionPanelActions>\n\n      </ExpansionPanel>\n    </div>\n   );\n }\n};\n\nconst styles = {\n  centerText: {\n    textAlign: 'center'\n  },\n  colorBar: {\n    // needs to be here for custom-css switch to work.\n  },\n  colorChecked: {\n    // needs to be here for custom-css switch to work.\n  },\n  colorSwitchBase: {\n    color: colors.orange,\n    '&$colorChecked': {\n      color: colors.orange,\n      '& + $colorBar': {\n        backgroundColor: colors.orange\n      }\n    }\n  },\n  details: {\n    alignItems: 'center',\n  },\n  expansionPanel: {\n    backgroundColor: colors.lightGrey\n  },\n  heading: {\n    fontSize: \"1.5rem\",\n  },\n  icon: {\n    verticalAlign: 'bottom',\n    height: 20,\n    width: 20,\n  },\n  root: {\n    width: '100%',\n  },\n  rootTable: {\n    width: '100%',\n    overflowX: 'scroll'\n  },\n  status: {\n    flexBasis: '25.00%',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    display: 'flex'\n  },\n  subheading: {\n    fontSize: '1rem',\n    color: colors.purple,\n    fontWeight: 'bold'\n  },\n  summary: {\n    alignItems: 'center',\n  },\n  table: {\n    minWidth: 700\n  },\n  title: {\n    flexBasis: '75.00%',\n  },\n};\n\nconst mapReduxStateToProps = (reduxState) => ({\n reduxState\n});\n\nDemographicDataExpansionPanel.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default connect(mapReduxStateToProps)(withStyles(styles)(DemographicDataExpansionPanel));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport colors from '../../App/colors';\nimport TableTemplate from '../TableTemplate/TableTemplate';\n\n// import edit dialog component\n// import DashboardEditDialog from '../EditDialogs/DashboardEditDialog';\n\n// Material-UI\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Divider from '@material-ui/core/Divider';\nimport Paper from '@material-ui/core/Paper';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\n\nclass FreeformExpansionPanel extends Component {\n\n state = {\n\n };\n\n // handle the toggle of published/unpublished for the section\n handleChangePublished = () => {\n  if (this.props.reduxState.current360.info[0].freeform_published) {\n   // If section is being unpublished, dispatch action to unpublish:\n    this.props.dispatch({ type: 'CHANGE_PUBLISH_STATUS', payload: {field: 'freeform_published', status: false, current360Id: this.props.current360Id}})\n  } else {\n   // If section is being published, dispatch action to publish:\n   this.props.dispatch({ type: 'CHANGE_PUBLISH_STATUS', payload: {field: 'freeform_published', status: true, current360Id: this.props.current360Id}})\n  }\n} // end handleChangePublished\n\n // handle the toggle of public/private for the section\n handleChangePublic = () => {\n  if (this.props.reduxState.current360.info[0].freeform_public) {\n   // If section is being changed to private, dispatch action to make private:\n    this.props.dispatch({ type: 'CHANGE_PUBLIC_STATUS', payload: {field: 'freeform_public', status: false, current360Id: this.props.current360Id}})\n  } else {\n   // If section is being changed to public, dispatch action to make public:\n   this.props.dispatch({ type: 'CHANGE_PUBLIC_STATUS', payload: {field: 'freeform_public', status: true, current360Id: this.props.current360Id}})\n  }\n} // end handleChangePublished\n\n componentDidMount() {\n   // Get section when loaded\n   this.props.dispatch({ type: 'FETCH_THREESIXTY_REPORTS', payload: {section: 'threesixty_reports', current360Id: this.props.current360Id} });\n }\n\n render() {\n   const { classes } = this.props;\n\n   return (\n    <div className={classes.root}>\n      <ExpansionPanel className={classes.expansionPanel}>\n\n        {/* Information on the expansion panel's summary bar (always shows) */}\n        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />} className={classes.summary}>\n          <div className={classes.title}>\n            <Typography variant=\"h2\" className={classes.heading}>Freeform</Typography>\n          </div>\n\n          <div className={classes.status}>\n            {/* Conditionally render \"Published\" on expansion panel summary if the section is active. */}\n            {(this.props.reduxState.current360.info[0].freeform_published === true) ?\n            <Typography variant=\"h2\" className={classes.subheading}>Visible,&nbsp;</Typography>\n            : null }\n            {/* Render \"Public\" on expansion panel summary if the section is active. */}\n            <Typography variant=\"h2\" className={classes.subheading}>{this.props.reduxState.current360.info[0].freeform_public ? 'Public' : 'Private'}</Typography>\n          </div>\n\n\n        </ExpansionPanelSummary>\n\n        {/* Content that is within the expansion panel (shows when panel is expanded) */}\n        <ExpansionPanelDetails className={classes.details}>\n          <Paper className={classes.rootTable}>\n\n          </Paper>\n        </ExpansionPanelDetails>\n\n        <Divider />\n\n        {/* Actions that show when the panel is expanded */}\n        <ExpansionPanelActions>\n          <FormControlLabel\n            control={\n              <Switch\n                checked={this.props.reduxState.current360.info[0].freeform_published}\n                onChange={this.handleChangePublished}\n                value=\"published\"\n                classes={{\n                  switchBase: classes.colorSwitchBase,\n                  checked: classes.colorChecked,\n                  bar: classes.colorBar\n                }}\n              />\n            }\n            label={this.props.reduxState.current360.info[0].freeform_published ? 'Published' : 'Unpublished'}\n          />\n          <FormControlLabel\n            control={\n              <Switch\n                checked={this.props.reduxState.current360.info[0].freeform_public}\n                onChange={this.handleChangePublic}\n                value=\"public\"\n                classes={{\n                  switchBase: classes.colorSwitchBase,\n                  checked: classes.colorChecked,\n                  bar: classes.colorBar\n                }}\n              />\n            }\n            label={this.props.reduxState.current360.info[0].freeform_public ? 'Public' : 'Private'}\n          />\n          \n          {/* <DashboardEditDialog current360Id={this.props.current360Id}/> */}\n        </ExpansionPanelActions>\n\n      </ExpansionPanel>\n    </div>\n   );\n }\n};\n\nconst styles = {\n  centerText: {\n    textAlign: 'center'\n  },\n  colorBar: {\n    // needs to be here for custom-css switch to work.\n  },\n  colorChecked: {\n    // needs to be here for custom-css switch to work.\n  },\n  colorSwitchBase: {\n    color: colors.orange,\n    '&$colorChecked': {\n      color: colors.orange,\n      '& + $colorBar': {\n        backgroundColor: colors.orange\n      }\n    }\n  },\n  details: {\n    alignItems: 'center',\n  },\n  expansionPanel: {\n    backgroundColor: colors.lightGrey\n  },\n  heading: {\n    fontSize: \"1.5rem\",\n  },\n  icon: {\n    verticalAlign: 'bottom',\n    height: 20,\n    width: 20,\n  },\n  root: {\n    width: '100%',\n  },\n  rootTable: {\n    width: '100%',\n    overflowX: 'scroll'\n  },\n  status: {\n    flexBasis: '25.00%',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    display: 'flex'\n  },\n  subheading: {\n    fontSize: '1rem',\n    color: colors.purple,\n    fontWeight: 'bold'\n  },\n  summary: {\n    alignItems: 'center',\n  },\n  table: {\n    minWidth: 700\n  },\n  title: {\n    flexBasis: '75.00%',\n  },\n};\n\nconst mapReduxStateToProps = (reduxState) => ({\n reduxState\n});\n\nFreeformExpansionPanel.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default connect(mapReduxStateToProps)(withStyles(styles)(FreeformExpansionPanel));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport colors from '../../App/colors';\n\n// Material-UI\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\n\n// Cleanly style table cells within Material-UI\nconst CustomTableCell = withStyles(theme => ({\n  head: {\n    fontSize: '1rem',\n    backgroundColor: colors.orange,\n    color: 'white',\n    padding: 10,\n    textAlign: 'center'\n  },\n  body: {\n    padding: 5,\n  },\n}))(TableCell);\n\nclass TableUsers extends Component {\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n    \n      <Paper className={classes.rootTable}>\n        <Table className={classes.table}>\n          <TableHead>\n            <TableRow>\n              <CustomTableCell>First Name</CustomTableCell>\n              <CustomTableCell>Last Name</CustomTableCell>\n              <CustomTableCell>Email</CustomTableCell>\n              <CustomTableCell>Level</CustomTableCell>\n              <CustomTableCell>Actions</CustomTableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {this.props.users.map((row,index) => {\n            return (\n              <TableRow key={row.index}>\n                <CustomTableCell className={classes.centerText} component=\"th\" scope=\"row\">\n                {row.firstname}\n                </CustomTableCell>\n                <CustomTableCell className={classes.centerText}>{row.lastname}</CustomTableCell>\n                <CustomTableCell className={classes.centerText}>{row.email}</CustomTableCell>\n                <CustomTableCell className={classes.centerText}>{row.access_type}</CustomTableCell>\n                <CustomTableCell className={classes.centerText} component=\"th\" scope=\"row\">\n                  <Button className={classes.editBtn} size=\"small\" variant=\"contained\" onClick={() => this.props.addAccess(row)}>GIVE ACCESS</Button>\n                </CustomTableCell>\n              </TableRow>\n            );\n            })}\n          </TableBody>\n        </Table>\n      </Paper>\n    );\n  }\n};\n\nconst styles = {\n root: {\n  width: '100%',\n },\n rootTable: {\n  width: '100%',\n  overflowX: 'scroll'\n },\n centerText: {\n  textAlign: 'center'\n },\n colorBar: {\n  // needs to be here for custom-css switch to work.\n },\n colorChecked: {\n  // needs to be here for custom-css switch to work.\n },\n colorSwitchBase: {\n  color: colors.orange,\n  '&$colorChecked': {\n   color: colors.orange,\n   '& + $colorBar': {\n    backgroundColor: colors.orange\n   }\n  }\n },\n table: {\n  minWidth: 700\n },\n};\n\nconst mapReduxStateToProps = (reduxState) => ({\n reduxState\n});\n\nTableUsers.propTypes = {\n classes: PropTypes.object.isRequired,\n};\n\nexport default connect(mapReduxStateToProps)(withStyles(styles)(TableUsers));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport TableUsers from '../TableTemplate/TableUsers';\n\n// Material-UI\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport classNames from 'classnames';\n\nconst ranges = [\n  {\n    value: 'person.firstname',\n    label:  'First Name'\n  },\n  {\n    value: 'person.lastname',\n    label:  'Last Name'\n  },\n  {\n    value: 'person.email',\n    label:  'Email'\n  },\n  {\n    value: 'person.access_id',\n    label:  'Access Level'\n  }\n];\n\nclass AddClientDialog extends Component {\n\n state = {\n   open: false,\n   searchBy: '',\n   level: '',\n   sortBy: '',\n };\n\n addAccess = (person) => {\n  if (person.access_id >= 4) {\n    alert(`Users with Employee and Admin access levels already have access to every 360.`);\n  } else if (person.access_id <=2) {\n    alert(`Only clients can be given access to a 360. Change this user's access level to client first and then proceed.`);\n  } else if (person.access_id === 3) {\n    this.props.dispatch({ type: 'ADD_360_ACCESS', payload: {userId: person.id, current360Id: this.props.current360Id} });\n    alert(`This user has been given access to this 360.`);\n  } else {\n    alert(`There has been an error giving this client access.`);\n  }\n}\n\n  // handles change for inputs\n  handleChange = (event) => {\n    this.setState({\n      ...this.state,\n      [event.target.name]: event.target.value,\n    })\n  };\n\n // handles clicking of the \"edit\" button. Opens a dialog window.\n handleClickOpen = () => {\n  this.setState({\n    ...this.state,\n    open: true,\n  })\n } // end handleClickOpen\n\n // handles clicking of the \"save\" or \"cancel\" button from the dailog window \n // and closes the dialog window.\n handleClickClose = () => {\n  this.setState({\n    ...this.state,\n    open: false\n  })\n } // end handleClickClose\n\n  // handle click of searchIcon button from 'Search by Name or Email' input\n  submitSearch = (event) => {\n    event.preventDefault();\n    this.props.dispatch({type: 'FETCH_USERS_SEARCH', payload: this.state});\n  };\n\n render() {\n   const { classes } = this.props;\n   const level = this.props.reduxState.userAccessLevel;\n\n   return (\n     <React.Fragment>\n      <Button size=\"small\" color=\"primary\" onClick={this.handleClickOpen}>Add Client</Button>\n      <Dialog\n        open={this.state.open}\n        onClose={this.handleClickClose}\n        aria-labelledby=\"info-edit-dialog\"\n        scroll=\"paper\"\n        fullWidth\n        maxWidth=\"lg\"\n        classes={{paper: classes.paper}}\n      >\n        <React.Fragment>\n          <DialogTitle id=\"info-edit-dialog\">Add Client</DialogTitle>\n          <DialogContent id=\"info-edit-dialog-content\" ref={(el) => { this.scroll = el; }}>\n            <DialogContentText>\n              Give a client access to the protected information of this 360.\n            </DialogContentText>\n            <form className={classes.form} onSubmit={this.submitSearch}>\n          \n            <TextField className={classes.searchField} placeholder=\"Search by Name or Email\" type=\"search\" onChange={this.handleChange}\n              name=\"searchBy\" value={this.state.searchBy}\n              // InputProps={{\n              //   endAdornment: \n              //   <InputAdornment position=\"end\">\n              //     <IconButton variant=\"contained\" size=\"small\" className={classes.button} onClick={this.submitSearch}>\n              //       <SearchIcon className={classNames(classes.leftIcon, classes.iconSmall)} />\n              //     </IconButton>\n              //   </InputAdornment>\n              // }}\n            />\n            \n            <TextField\n              select\n              className={classNames(classes.margin, classes.textField)}\n              value={this.state.level}\n              onChange={this.handleChange}\n              name=\"level\"\n              InputProps={{\n                startAdornment: <InputAdornment position=\"start\">Level</InputAdornment>,\n              }}\n            >\n              {level.map(option => (\n                <MenuItem key={option.id} value={option.id}>\n                  {option.access_type}\n                </MenuItem>\n              ))}\n            </TextField>\n            <Button variant=\"contained\" onClick={this.submitSearch}>Search</Button>\n\n            <TextField\n              select\n              className={classNames(classes.margin, classes.textField)}\n              value={this.state.sortBy}\n              onChange={this.handleChange}\n              name=\"sortBy\"\n              InputProps={{\n                startAdornment: <InputAdornment position=\"start\">Sort</InputAdornment>,\n              }}\n            >\n              {ranges.map(option => (\n                <MenuItem key={option.value} value={option.value}>\n                  {option.label}\n                </MenuItem>\n              ))}\n            </TextField>\n            </form>\n            <TableUsers users={this.props.reduxState.allUsers.allUsers} addAccess={this.addAccess}/>\n          </DialogContent>\n          <DialogActions className={classes.spaceBetween}>\n            <div>\n            </div>\n            <div>\n              <Button onClick={this.handleClickClose} color=\"primary\">\n                Exit\n              </Button>\n            </div>\n          </DialogActions>\n        </React.Fragment>\n      </Dialog>\n    </React.Fragment>\n   );\n }\n};\n\nconst styles = {\n  formControl: {\n    marginTop: 8,\n    marginBottom: 4\n  },\n  paper: {\n    minHeight: '50%'\n  },\n  spaceBetween: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    flexWrap: 'wrap'\n  },\n  textField: {\n    width: 150,\n    margin: '0px 15px 25px 15px'\n  },\n};\n\nconst mapReduxStateToProps = (reduxState) => ({\n reduxState\n});\n\nexport default connect(mapReduxStateToProps)(withStyles(styles)(AddClientDialog));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport colors from '../../App/colors';\n\n// import edit and publish dialog components\nimport AddClientDialog from '../EditDialogs/AddClientDialog';\nimport ThreesixtyInformationPublishDialog from '../EditDialogs/ThreesixtyInformationPublishDialog';\n\n// Material-UI\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Divider from '@material-ui/core/Divider';\nimport Paper from '@material-ui/core/Paper';\n\nclass ClientAccessExpansionPanel extends Component {\n\n state = {\n  publishDialogOpen: false,\n };\n\n  // Opens a dialog window when user wants to publish.\n  handleClickOpen = () => {\n    this.setState({\n      ...this.state,\n      publishDialogOpen: true,\n    })\n   } // end handleClickOpen\n  \n   // handles clicking of the \"publish\" or \"cancel\" button from the publish dailog window \n   // and closes the publish dialog window.\n   handleClickClose = () => {\n    this.setState({\n      ...this.state,\n      publishDialogOpen: false\n    })\n   } // end handleClickClose\n  \n   // dispatches an action to update the database with the new values and \n   // calls handleClickClose.\n   handleSave = () => {\n    this.setState({\n      ...this.state,\n      published: true,\n    })\n    this.props.dispatch({ type: 'CHANGE_PUBLISH_STATUS', payload: {field: 'published_status',status: true, current360Id: this.props.current360Id} })\n    this.handleClickClose();\n   } // end handleSave\n\n   removeAccess = (threesixtyUserId) => {\n     this.props.dispatch({ type: 'REMOVE_360_ACCESS_FROM_360', payload: {threesixtyUserId: threesixtyUserId, current360Id: this.props.current360Id} });\n   }\n\n componentDidMount() {\n   // Get section when loaded\n   this.props.dispatch({ type: 'FETCH_360_CLIENTS', payload: {current360Id: this.props.current360Id} });\n }\n\n render() {\n   const { classes } = this.props;\n\n   return (\n    <div className={classes.root}>\n      <ExpansionPanel className={classes.expansionPanel}>\n\n        {/* Information on the expansion panel's summary bar (always shows) */}\n        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />} className={classes.summary}>\n          <div className={classes.title}>\n            <Typography variant=\"h2\" className={classes.heading}>Client Access</Typography>\n          </div>\n        </ExpansionPanelSummary>\n\n        {/* Content that is within the expansion panel (shows when panel is expanded) */}\n        <ExpansionPanelDetails className={classes.details}>\n          <Paper className={classes.rootTable}>\n            <p><strong>The following clients have access to the protected information of this 360:</strong></p>\n            <ul>\n              {this.props.reduxState.current360.clients.length === 0 ? <li>None</li> : null}\n              {this.props.reduxState.current360.clients.map((person, index) => {\n                return (\n                  <li key={index}><strong>{person.firstname}&nbsp;{person.lastname}</strong>&nbsp;(Username:&nbsp;{person.username},&nbsp;\n                  Email:{person.email}, Database Id:{person.id})\n                  <button onClick={() => this.removeAccess(person.threesixty_user_id)}>Remove Access</button></li>\n                );\n              })}\n            </ul>\n          </Paper>\n        </ExpansionPanelDetails>\n\n        <Divider />\n\n        {/* Actions that show when the panel is expanded */}\n        <ExpansionPanelActions> \n          <AddClientDialog current360Id={this.props.current360Id}/>\n          <ThreesixtyInformationPublishDialog open={this.state.publishDialogOpen} handleClickOpen={this.handleClickOpen} \n          handleClickClose={this.handleClickClose} handleSave={this.handleSave}/>\n        </ExpansionPanelActions>\n\n      </ExpansionPanel>\n    </div>\n   );\n }\n};\n\nconst styles = {\n  colorBar: {\n    // needs to be here for custom-css switch to work.\n  },\n  colorChecked: {\n    // needs to be here for custom-css switch to work.\n  },\n  colorSwitchBase: {\n    color: colors.orange,\n    '&$colorChecked': {\n      color: colors.orange,\n      '& + $colorBar': {\n        backgroundColor: colors.orange\n      }\n    }\n  },\n  details: {\n    alignItems: 'center',\n  },\n  expansionPanel: {\n    backgroundColor: colors.lightGrey\n  },\n  heading: {\n    fontSize: \"1.5rem\",\n  },\n  icon: {\n    verticalAlign: 'bottom',\n    height: 20,\n    width: 20,\n  },\n  property: {\n    fontWeight: 'bold'\n  },\n  root: {\n    width: '100%',\n  },\n  rootTable: {\n    width: '100%',\n    overflowX: 'scroll',\n    padding: 20\n  },\n  status: {\n    flexBasis: '25.00%',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    display: 'flex'\n  },\n  subheading: {\n    fontSize: '1rem',\n    color: colors.red,\n    fontWeight: 'bold'\n  },\n  subheadingUnpublished: {\n    fontSize: '1rem',\n    color: colors.purple,\n    fontWeight: 'bold'\n  },\n  summary: {\n    alignItems: 'center',\n  },\n  table: {\n    minWidth: 700\n  },\n  title: {\n    flexBasis: '75.00%',\n  },\n};\n\nconst mapReduxStateToProps = (reduxState) => ({\n reduxState\n});\n\nClientAccessExpansionPanel.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default connect(mapReduxStateToProps)(withStyles(styles)(ClientAccessExpansionPanel));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\n// Material-UI\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\n// Import loading dialog\nimport LoadingDialog from './EditDialogs/LoadingDialog';\n\n// Import Expansion Panels for each subsection\nimport ThreesixtyInformationExpansionPanel from './ExpansionPanels/ThreesixtyInformationExpansionPanel';\nimport GoalsAssessmentExpansionPanel from './ExpansionPanels/GoalAssessmentsExpansionPanel';\nimport DashboardExpansionPanel from './ExpansionPanels/DashboardExpansionPanel';\nimport ThreeSixtyEventOverviewExpansionPanel from './ExpansionPanels/ThreesixtyEventOverviewExpansionPanel';\nimport ThreesixtyMindstormExpansionPanel from './ExpansionPanels/ThreesixtyMindstormExpansionPanel';\nimport ThreesixtyOralReportExpansionPanel from './ExpansionPanels/ThreesixtyOralReportExpansionPanel';\nimport ThreesixtyFreeformExpansionPanel from './ExpansionPanels/ThreesixtyFreeformExpansionPanel';\nimport ThreesixtyCircleShareInExpansionPanel from './ExpansionPanels/ThreesixtyCircleShareInExpansionPanel';\nimport AnalysisRecExpansionPanel from './ExpansionPanels/AnalysisRecExpansionPanel';\nimport DemographicDataExpansionPanel from './ExpansionPanels/DemographicDataExpansionPanel';\nimport FreeformExpansionPanel from './ExpansionPanels/FreeformExpansionPanel';\nimport ClientAccessExpansionPanel from './ExpansionPanels/ClientAccessExpansionPanel';\n\nclass Generate360 extends Component {\n\n state = {\n  current360Id: this.props.match.params.id\n };\n\n // navigates to /manage360s\n back = (event) => {\n  event.preventDefault();\n  this.props.history.push('/manage360s');\n  }\n\n render() {\n   const { classes } = this.props;\n   console.log('CURRENT 360 ID CURRENT 360 ID CURRENT 360 ID:', this.state.current360Id);\n   return (\n     <div className={classes.div}>\n       <div className={classes.returnButton}>\n          <Button\n            className={classes.manage360Btn} \n            variant=\"contained\"\n            onClick={this.back}\n          >\n            Return to 360 Manager\n          </Button>\n       </div>\n       <Typography variant=\"h2\" className={classes.header}>Generate360</Typography>\n       <ThreesixtyInformationExpansionPanel current360Id={this.state.current360Id}/>\n       <GoalsAssessmentExpansionPanel current360Id={this.state.current360Id}/>\n       <DashboardExpansionPanel current360Id={this.state.current360Id}/>\n       <ThreeSixtyEventOverviewExpansionPanel current360Id={this.state.current360Id}/>\n       <ThreesixtyMindstormExpansionPanel current360Id={this.state.current360Id}/>\n       <ThreesixtyOralReportExpansionPanel current360Id={this.state.current360Id}/>\n       <ThreesixtyFreeformExpansionPanel current360Id={this.state.current360Id}/>\n       <ThreesixtyCircleShareInExpansionPanel current360Id={this.state.current360Id}/>\n       <AnalysisRecExpansionPanel current360Id={this.state.current360Id}/>\n       <DemographicDataExpansionPanel current360Id={this.state.current360Id}/>\n       <FreeformExpansionPanel current360Id={this.state.current360Id}/>\n       <ClientAccessExpansionPanel current360Id={this.state.current360Id}/>\n       <LoadingDialog current360Id={this.state.current360Id}/>\n     </div>\n   );\n }\n};\n\nconst styles = {\n  div: {\n    padding: 50\n  },\n  header: {\n    textAlign: 'center',\n    marginBottom: 25\n  }\n};\n\nconst mapReduxStateToProps = (reduxState) => ({\n reduxState\n});\n\nexport default connect(mapReduxStateToProps)(withStyles(styles)(Generate360));","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport colors from '../App/colors';\n\n// Material-UI\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport moment from 'moment';\nimport {\n  withRouter\n} from 'react-router-dom';\n\nconst CustomTableCell = withStyles(theme => ({\n  head: {\n    fontSize: '1rem',\n    backgroundColor: colors.orange,\n    color: 'white',\n    padding: 10,\n    textAlign: 'center'\n  },\n  body: {\n    padding: 5,\n  },\n}))(TableCell);\n\nclass CustomizedTable extends Component {\n\n  state = {\n\n  }\n\n  goToGenerate360 = (id) => {\n    this.props.history.push({\n      pathname: `/generate360/${id}`,\n    });\n  }\n\n  goToView360 = (id) => {\n    this.props.history.push({\n      pathname: `/view360/${id}`,\n    });\n  }\n\n  render() {\n  const { classes } = this.props;\n\n  return (\n    <Paper className={classes.rootTable}>\n      <Table className={classes.table}>\n        <TableHead>\n          <TableRow>\n            <CustomTableCell width=\"20%\" >Actions</CustomTableCell>\n            <CustomTableCell>Name</CustomTableCell>\n            <CustomTableCell>Client</CustomTableCell>\n            <CustomTableCell>Location</CustomTableCell>\n            <CustomTableCell>Date</CustomTableCell>\n            <CustomTableCell>Category</CustomTableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {this.props.rows.map(row => {\n            return (\n              <TableRow key={row.id}>\n                <CustomTableCell width=\"20%\" className={classes.centerText} component=\"th\" scope=\"row\">\n                  <Button onClick={() => this.goToView360(row.id)} className={classes.button} variant=\"contained\">View</Button>\n\n                  {!this.props.homeVersion && <Button onClick={() => this.goToGenerate360(row.id)} className={classes.button} variant=\"contained\">Edit</Button>}\n\n                </CustomTableCell>\n                <CustomTableCell className={classes.centerText}>{row.name}</CustomTableCell>\n                <CustomTableCell className={classes.centerText}>{row.client}</CustomTableCell>\n                <CustomTableCell className={classes.centerText}>{row.location}</CustomTableCell>\n                <CustomTableCell className={classes.centerText}>{moment(row.date).format('ll')}</CustomTableCell>\n                <CustomTableCell className={classes.centerText}>{row.category}</CustomTableCell>\n              </TableRow>\n            );\n          })}\n        </TableBody>\n      </Table>\n    </Paper>\n  );\n        }\n}\n\nconst styles = {\n  rootTable: {\n   width: '95%',\n   overflowX: 'scroll',\n   margin: '0px auto 100px'\n  },\n  button: {\n    marginRight: 5,\n    marginLeft: 5\n  },\n  centerText: {\n   textAlign: 'center'\n  },\n  table: {\n   minWidth: 700\n  },\n };\n\nCustomizedTable.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withRouter(withStyles(styles)(CustomizedTable));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\n// Material-UI\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TextField from '@material-ui/core/TextField';\n\nclass Search360s extends Component {\n\n  state = {\n      name: '',\n      location: '',\n      date: '',\n      category: '',\n  };\n\n  // sets the properties in state to their typed in values\n  handleChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value,\n    })\n  };\n\n  // dispatches the search query to populate the table with the new search results\n  // and then resets state to empty strings so the textfields are reset to empty\n  handleSearch = (event) => {\n    event.preventDefault();\n    this.props.dispatch({\n      type: 'FETCH_360_SEARCH', \n      payload: {\n        ...this.state,\n        publishedStatus: this.props.status\n      }\n    });\n    this.setState({\n      name: '',\n      location: '',\n      date: '',\n      category: '',\n    });\n  }; // end handlesearch\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <form className={classes.form} onSubmit={this.handleSearch}>\n        <TextField className={classes.textField} placeholder=\"Name or Client\" type=\"search\" onChange={this.handleChange}\n          name=\"name\" value={this.state.name}/>\n        <TextField className={classes.textField} placeholder=\"Location\" type=\"search\" onChange={this.handleChange}\n          name=\"location\" value={this.state.location}/>\n        <TextField className={classes.textField} placeholder=\"Date\" type=\"date\" onChange={this.handleChange}\n          name=\"date\" value={this.state.date}/>\n        <TextField\n          select\n          className={classes.textField}\n          value={this.state.category}\n          onChange={this.handleChange}\n          name=\"category\"\n          InputProps={{\n            startAdornment: <InputAdornment position=\"start\">Category</InputAdornment>,\n          }}\n        >\n          {this.props.reduxState.iziCategories.map(category => (\n            <MenuItem key={category.id} value={category.id}>\n              {category.category}\n            </MenuItem>\n          ))}\n        </TextField>\n        <Button className={classes.button} variant=\"contained\" type=\"submit\">Search</Button>\n      </form>\n    );\n  }\n};\n\nconst styles = {\n  form: {\n    display: 'inline-block',\n    margin: 'auto'\n  },\n  textField: {\n    padding: 25\n  },\n  button: {\n    margin: 25\n  }\n}\n\nconst mapReduxStateToProps = (reduxState) => ({\n  reduxState\n });\n \n export default connect(mapReduxStateToProps)(withStyles(styles)(Search360s));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Table360s from '../Table360s/Table360s';\nimport Search360s from '../Search360s/Search360s';\nimport moment from 'moment';\nimport LinesEllipsis from 'react-lines-ellipsis';\nimport { Textfit } from 'react-textfit';\nimport colors from '../App/colors';\nimport './HomePage.css';\n\nimport MarnitaLogo from './marnita_logo.png';\n\n// Material-UI\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport { Grid } from '@material-ui/core'\nimport Typography from '@material-ui/core/Typography';\n\nclass Home extends Component {\n\n state = {\n  useEllipsis: true\n };\n\n componentDidMount() {\n  this.props.dispatch({type: 'FETCH_PUBLISHED'});\n };\n\n // when the user clicks 'view 360,' this function will route them to\n // the view 360 page, and also dispatch the selected 360 id\n // so the correct information can be displayed on the next page\n handleClick = (id) => {\n  this.props.dispatch({type: 'FETCH_360', payload: id});\n  this.props.history.push({\n    pathname: `/view360/${id}`,\n  });\n };\n\n render() {\n   const { classes } = this.props;\n   return (\n     <div>\n        <Typography variant=\"h4\" className={classes.header}>\n          Check out some recent 360s!\n        </Typography>\n\n        <Grid className={classes.container} container spacing={0}>\n        {/* the line below maps through the first 3 items in the array */}\n        {/* and uses that information to display the cards. */}\n        {/* the unaltered version of the array is sent to the table */}\n        <div className={classes.centerContainer}>\n        {this.props.reduxState.all360s.recent.map( izi => (\n            <Card className={classes.cardSize} key={izi.id} elevation={5}>\n              <CardContent className={classes.card}>\n                  <img src={MarnitaLogo} alt=\"Marnita's Table Placeholder\" className={classes.image}/>\n                <div className={classes.divHeader}>\n                  <Textfit mode=\"multi\" className={classes.cardHeader}>\n                    {izi.name}\n                  </Textfit>\n                </div>\n                <div className={classes.cardBody}>\n                  <Typography className={classes.iziInfo} component=\"p\">\n                  {izi.location} - {moment(izi.date).format('LL')}\n                  </Typography>\n                  <LinesEllipsis\n                    text={izi.description}\n                    className=\"ellipsis-text\"\n                    maxLine='3'\n                    ellipsis='...'\n                    trimRight\n                    basedOn='letters'\n                  />\n                </div>\n              </CardContent>\n              <CardActions className={classes.cardActions}>\n                <Button className={classes.button} variant=\"contained\" fullWidth={true} onClick={() => this.handleClick(izi.id)}>\n                  View 360\n                </Button>\n              </CardActions>\n            </Card>\n        ))}\n        </div>\n        </Grid>\n        <Typography variant=\"h4\" className={classes.header}>\n          Or search through our public 360s:\n        </Typography>\n        <div className={classes.centerContainer}>\n          <Search360s  status=\"true\"/>\n        </div>\n        {/* this sends the array of published 360s to the table, */}\n        {/* and specificies that this table is for the home page,  */}\n        {/* and will not render the edit button. */}\n        <Table360s rows={this.props.reduxState.all360s.published} homeVersion />\n     </div>\n   );\n }\n};\n\nconst styles = {\n  container: {\n    display: 'flex',\n    marginBottom: 25\n  },\n  centerContainer: {\n    margin: 'auto',\n    textAlign: 'center',\n  },\n  card: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    height: 250,\n    alignItems: 'center',\n    textAlign: 'center',\n    padding: 0,\n    margin: 20,\n  },\n  cardSize: {\n    maxWidth: 'calc(30vw - 40px)',\n    display: 'inline-block',\n    margin: 20,\n    padding: 0\n  },\n  divHeader: {\n    flexGrow: '1',\n    width: '100%',\n    justifyContent: 'center',\n    display: 'flex',\n    alignItems: 'center',\n    marginBottom: 20,\n  },\n  cardHeader: {\n    height: '100%',\n    fontWeight: 'bold',\n    color: colors.pink\n  },\n  cardBody: {\n    minHeight: 100,\n    padding: 15,\n    backgroundColor: colors.lightGrey,\n    borderRadius: 5,\n    flexGrow: 0,\n    width: 'calc(100% - 20px)',\n  },\n  cardActions: {\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  header: {\n    padding: 20,\n    textAlign: 'center',\n    fontSize: '1.5rem'\n  },\n  button: {\n    marginBottom: 20,\n  },\n  iziInfo: {\n    marginTop: 5,\n  },\n  image: {\n    width: 75,\n    marginBottom: 15\n  }\n};\n\nconst mapReduxStateToProps = (reduxState) => ({\n reduxState\n});\n\nexport default connect(mapReduxStateToProps)(withStyles(styles)(Home));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Table360s from '../Table360s/Table360s';\nimport Search360s from '../Search360s/Search360s';\n\n// Material-UI\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\nclass Manage360s extends Component {\n\n  // operates the button that returns users to the admin dashboard\n  returnToDash = () => {\n    this.props.history.push('/dashboard');\n  };\n\n  // operates button that takes users to the 360 generator\n  goToCreate360 = () => {\n    this.props.history.push('/create360');\n  };\n\n  // dispatches action to get both published and unpublished 360s\n  // to populate the tables\n  componentDidMount() {\n    this.props.dispatch({type: 'FETCH_PUBLISHED'});\n    this.props.dispatch({type: 'FETCH_UNPUBLISHED'});\n  }; // end componentDidMount\n\n render() {\n   const { classes } = this.props;\n\n   return (\n      <div >\n        <Button variant=\"contained\" onClick={this.returnToDash}>Return to Dashboard</Button>\n        <span>\n          <Button variant=\"contained\" onClick={this.goToCreate360}>Create New 360</Button>\n          <Typography variant=\"h4\" className={classes.header}>Unpublished 360s</Typography>\n        </span>\n        <span>\n          <Typography>Search By</Typography>\n          <Search360s status=\"false\"/> \n        </span>\n        <Table360s rows={this.props.reduxState.all360s.unpublished} />\n        <span>\n          <Typography variant=\"h4\" className={classes.header}>Published 360s</Typography>\n          <Typography>Search By</Typography>\n          <Search360s status=\"true\"/>\n        </span>\n        <Table360s rows={this.props.reduxState.all360s.published} />\n      </div>\n   );\n }\n};\n\nconst styles = theme => ({\n\n});\n\nconst mapReduxStateToProps = (reduxState) => ({\n reduxState\n});\n\nexport default connect(mapReduxStateToProps)(withStyles(styles)(Manage360s));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\n// Material-UI\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Input from '@material-ui/core/Input';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport IconButton from '@material-ui/core/IconButton';\nimport Cancel from '@material-ui/icons/Cancel';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport classNames from 'classnames';\n\nclass ViewUser extends Component {\n\n  state = {\n    open: false,\n    edit: false, // true should show view user, false should show edit user\n    firstname: '',\n    lastname: '',\n    email: '',\n    access_id: 0, \n    notes: '',\n    id: 0\n  };\n\n  handleChange = (event) => {\n    this.setState({\n      ...this.state,\n      [event.target.name]: event.target.value,\n    })\n  };\n\n  // handles clicking of the \"edit\" button. Opens a dialog window.\n  handleClickOpen = () => {\n    this.setState({\n      ...this.state,\n      open: true,\n    })\n  }; // end handleClickOpen\n\n  // handles clicking of the \"save\" or \"cancel\" button from the dailog window \n  // and closes the dialog window.\n  handleClickClose = () => {\n    this.setState({\n      ...this.state,\n      open: false,\n      edit: false\n    })\n  }; // end handleClickClose\n\n  editBtn = () => {\n    this.setState({ \n      open: true,\n      edit: true,\n      firstname: this.props.user.firstname,\n      lastname: this.props.user.lastname,\n      email: this.props.user.email,\n      access_id: this.props.user.access_id,\n      notes: this.props.user.notes,\n      id: this.props.user.id\n    })\n  };\n\n  removeAccess = (id) => {\n    this.props.dispatch({type: 'REMOVE_360_ACCESS', payload: id});\n    \n  };\n\n  endEdit = () => {\n    this.setState({\n      open: true,\n      edit: false,\n      firstname: '',\n      lastname: '',\n      email: '',\n      access_id: 0,\n      notes: '',\n      id: 0\n    })\n  };\n\n  saveChanges = () => {\n    this.props.dispatch({ type: 'EDIT_USER_INFO', payload: this.state });\n    this.endEdit();\n  };\n\n  render() {\n   const { classes } = this.props;\n   const user = this.props.user;\n   const level = this.props.reduxState.userAccessLevel;\n\n   return (\n    <React.Fragment>\n    <Button size=\"small\" variant=\"contained\" onClick={this.handleClickOpen}>View</Button>\n    <Dialog\n      open={this.state.open}\n      onClose={this.handleClickClose}\n      aria-labelledby=\"goal-assessment-edit-dialog\"\n      scroll=\"paper\"\n      fullWidth\n      maxWidth=\"sm\"\n      classes={{paper: classes.paper}}\n    >\n    {!this.state.edit ? (    \n    <React.Fragment>\n      <DialogTitle className={classes.dialogTitle} id=\"goal-assessment-edit-dialog\">View User</DialogTitle>\n      <DialogContent>\n      <Button className={classes.editBtn} size=\"small\" variant=\"contained\" onClick={this.editBtn}>Edit</Button>\n          <InputLabel>First Name:</InputLabel>\n          <Typography className={classes.userInfo} variant=\"subheading\">{user.firstname}</Typography>\n          <br />\n          <InputLabel>Last Name:</InputLabel>\n          <Typography className={classes.userInfo} variant=\"subheading\">{user.lastname}</Typography>\n          <br />\n          <InputLabel>Email:</InputLabel>\n          <Typography className={classes.userInfo} variant=\"subheading\">{user.email}</Typography>\n          <br />\n          <InputLabel>Access Level:</InputLabel>\n          <Typography className={classes.userInfo} variant=\"subheading\">{user.access_type}</Typography>\n          <br />\n          <InputLabel>360 Access:</InputLabel>\n          <br />\n            <ul>\n              <li>\n                {user.threesixty ? (\n                <Typography className={classes.userInfo} variant=\"subheading\">{user.threesixty}</Typography>\n                ) : (\n                <Typography className={classes.userInfo} variant=\"subheading\">None</Typography>\n                )}\n              </li>\n            </ul>\n          <InputLabel>Notes:</InputLabel>\n          <Typography className={classes.userInfo} variant=\"subheading\">{user.notes}</Typography>\n          <br />\n      </DialogContent>\n    </React.Fragment>\n    ) : (\n    <React.Fragment>\n      <DialogTitle className={classes.dialogTitle} id=\"goal-assessment-edit-dialog\">Edit User</DialogTitle>\n      <DialogContent>\n          <InputLabel>First Name:</InputLabel>\n          <Input \n            className={classes.userInfoEdit} \n            placeholder={user.firstname}\n            onChange={this.handleChange}\n            name=\"firstname\"\n          />\n          <br />\n          <InputLabel>Last Name:</InputLabel>\n          <Input \n            className={classes.userInfoEdit} \n            placeholder={user.lastname}\n            onChange={this.handleChange}\n            name=\"lastname\"\n          />\n          <br />\n          <InputLabel>Email:</InputLabel>\n          <Input \n            className={classes.userInfoEdit} \n            placeholder={user.email}\n            onChange={this.handleChange}\n            name=\"email\"\n          />\n          <br />\n          <InputLabel>Access Level:</InputLabel>\n          <TextField\n              select\n              className={classNames(classes.margin, classes.textField)}\n              value={this.state.access_id}\n              onChange={this.handleChange}\n              name=\"access_id\"\n              InputProps={{\n                startAdornment: <InputAdornment position=\"start\">Level</InputAdornment>,\n              }}\n            >\n              {level.map(option => (\n                <MenuItem key={option.id} value={option.id}>\n                  {option.access_type}\n                </MenuItem>\n              ))}\n          </TextField>\n          <br />\n          <InputLabel>360 Access:</InputLabel>\n          <br />\n            <ul>\n              <li>\n                {user.threesixty ? (\n                <div>\n                  <Typography className={classes.userInfo} variant=\"subheading\">{user.threesixty}</Typography>\n                  <Tooltip title=\"Remove Access\" placement=\"right\">\n                    <IconButton className={classes.removeAccess} onClick={() => this.removeAccess(user.connected_360_id)}>\n                      <Cancel/>\n                    </IconButton>\n                  </Tooltip>\n                </div>\n                ) : (\n                <Typography className={classes.userInfo} variant=\"subheading\">None</Typography>\n                )}\n              </li>\n            </ul>\n          <InputLabel>Notes:</InputLabel>\n          <br />\n          <TextField \n            className={classes.notes} \n            placeholder={user.notes}\n            onChange={this.handleChange}\n            name=\"notes\"\n            multiline\n            fullWidth\n            margin=\"normal\"\n          />\n          <br />\n        <Button size=\"small\" variant=\"contained\" onClick={this.endEdit}>Cancel</Button>\n        <Button size=\"small\" variant=\"contained\" onClick={this.saveChanges}>Save Changes</Button>\n      </DialogContent>\n    </React.Fragment>\n    )}\n    </Dialog>\n    </React.Fragment>\n   );\n }\n};\n\nconst styles = {\n  div: {\n    padding: 50\n  },\n  header: {\n    textAlign: 'center',\n    marginBottom: 25\n  },\n  paper: {\n    height: 'calc(75% - 96px)'\n  },\n  dialogTitle: {\n    textAlign: 'center'\n  },\n  userInfo: {\n    display: 'inline',\n    marginLeft: '15px'\n  },\n  editBtn: {\n    float: 'right'\n  },\n  userInfoEdit: {\n    margin: '0px 0px 15px 15px'\n  },\n  removeAccess: {\n    marginLeft: 10\n  },\n  notes: {\n    margin: 'auto',\n    paddingBottom: 25,\n    width: '90%',\n  }\n};\n\nconst mapReduxStateToProps = (reduxState) => ({\n reduxState\n});\n\nexport default connect(mapReduxStateToProps)(withStyles(styles)(ViewUser));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport colors from '../App/colors';\n\n// Material-UI\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport ViewUser from '../ManageUsers/ViewUserDialog/ViewUser';\nimport Button from '@material-ui/core/Button';\n\n// Cleanly style table cells within Material-UI\nconst CustomTableCell = withStyles(theme => ({\n  head: {\n    fontSize: '1rem',\n    backgroundColor: colors.orange,\n    color: 'white',\n    padding: 10,\n    textAlign: 'center'\n  },\n  body: {\n    padding: 5,\n  },\n}))(TableCell);\n\nclass TableUsers extends Component {\n\n  clearRequest = (id) => {\n    this.props.dispatch({type: 'DELETE_PENDING_REQUEST', payload: id});\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n    \n      <Paper className={classes.rootTable}>\n        <Table className={classes.table}>\n          <TableHead>\n            <TableRow>\n              <CustomTableCell>First Name</CustomTableCell>\n              <CustomTableCell>Last Name</CustomTableCell>\n              <CustomTableCell>Email</CustomTableCell>\n              <CustomTableCell>Level</CustomTableCell>\n              <CustomTableCell>Actions</CustomTableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {this.props.users.map(row => {\n            return (\n              <TableRow key={row.id}>\n                <CustomTableCell className={classes.centerText} component=\"th\" scope=\"row\">\n                {row.firstname}\n                </CustomTableCell>\n                <CustomTableCell className={classes.centerText}>{row.lastname}</CustomTableCell>\n                <CustomTableCell className={classes.centerText}>{row.email}</CustomTableCell>\n                <CustomTableCell className={classes.centerText}>{row.access_type}</CustomTableCell>\n                <CustomTableCell className={classes.centerText} component=\"th\" scope=\"row\">\n                  <ViewUser user={row}/>\n                  {row.request_id &&\n                  <Button className={classes.editBtn} size=\"small\" variant=\"contained\" onClick={() => this.clearRequest(row.request_id)}>DELETE</Button>}\n                </CustomTableCell>\n              </TableRow>\n            );\n            })}\n          </TableBody>\n        </Table>\n      </Paper>\n    );\n  }\n};\n\nconst styles = {\n rootTable: {\n  width: '100%',\n  overflowX: 'scroll'\n },\n centerText: {\n  textAlign: 'center'\n },\n table: {\n  minWidth: 700\n },\n};\n\nconst mapReduxStateToProps = (reduxState) => ({\n reduxState\n});\n\nTableUsers.propTypes = {\n classes: PropTypes.object.isRequired,\n};\n\nexport default connect(mapReduxStateToProps)(withStyles(styles)(TableUsers));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport TableUsers from '../../TableUsers/TableUsers';\n\n// Material-UI\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nclass PendingClientRequests extends Component {\n\n  componentDidMount() {\n    this.props.dispatch({type: 'FETCH_PENDING_REQUESTS'});\n  };\n\n  render() {\n    const { classes } = this.props;\n\n  return (\n    <div className={classes.root}>\n      <ExpansionPanel defaultExpanded>\n\n        {/* Information on the expansion panel's summary bar (always shows) */}\n        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />} className={classes.summary}>\n        <div className={classes.title}>\n          <Typography variant=\"h2\" className={classes.heading}>Pending Client Requests</Typography>\n        </div>     \n        </ExpansionPanelSummary>\n\n        {/* Content that is within the expansion panel (shows when panel is expanded) */}\n        <ExpansionPanelDetails className={classes.details}>\n          <TableUsers users={this.props.reduxState.allUsers.pendingRequests}/>\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n    </div>\n    );\n  }\n};\n\nconst styles = {\n root: {\n  width: '100%',\n },\n details: {\n  alignItems: 'center',\n },\n heading: {\n  fontSize: \"1.5rem\",\n },\n summary: {\n  alignItems: 'center'\n },\n title: {\n  flexBasis: '75.00%',\n },\n};\n\nconst mapReduxStateToProps = (reduxState) => ({\n reduxState\n});\n\nPendingClientRequests.propTypes = {\n classes: PropTypes.object.isRequired,\n};\n\nexport default connect(mapReduxStateToProps)(withStyles(styles)(PendingClientRequests));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport TableUsers from '../../TableUsers/TableUsers';\n\n// Material-UI\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport classNames from 'classnames';\n\nconst ranges = [\n  {\n    value: 'person.firstname',\n    label:  'First Name'\n  },\n  {\n    value: 'person.lastname',\n    label:  'Last Name'\n  },\n  {\n    value: 'person.email',\n    label:  'Email'\n  },\n  {\n    value: 'person.access_id',\n    label:  'Access Level'\n  }\n];\n\nclass Users extends Component {\n\n  state = {\n    searchBy: '',\n    level: '',\n    sortBy: '',\n  };\n\n  componentDidMount() {\n    this.viewAllUsers();\n    this.props.dispatch({type: 'FETCH_ACCESS_LEVELS'});\n  };\n\n  // handles change for inputs\n  handleChange = (event) => {\n    this.setState({\n      ...this.state,\n      [event.target.name]: event.target.value,\n    })\n  };\n\n  // handle click of searchIcon button from 'Search by Name or Email' input\n  submitSearch = (event) => {\n    event.preventDefault();\n    this.props.dispatch({type: 'FETCH_USERS_SEARCH', payload: this.state});\n  };\n\n  viewAllUsers = () => {\n    this.props.dispatch({type: 'FETCH_ALL_USERS'});\n  };\n\nrender() {\n  const { classes } = this.props;\n  const level = this.props.reduxState.userAccessLevel;\n  \n\n  return (\n    <div className={classes.root}>\n      <ExpansionPanel defaultExpanded>\n      <div >\n        <span>\n          <form className={classes.form} onSubmit={this.submitSearch}>\n          \n            <TextField className={classes.searchField} \n              placeholder=\"Search by Name or Email\" \n              type=\"search\" \n              onChange={this.handleChange}\n              name=\"searchBy\" \n              value={this.state.searchBy}\n            />\n            \n            <TextField\n              select\n              className={classNames(classes.margin, classes.textField)}\n              value={this.state.level}\n              onChange={this.handleChange}\n              name=\"level\"\n              InputProps={{\n                startAdornment: <InputAdornment position=\"start\">Level</InputAdornment>,\n              }}\n            >\n              {level.map(option => (\n                <MenuItem key={option.id} value={option.id}>\n                  {option.access_type}\n                </MenuItem>\n              ))}\n            </TextField>\n            <Button variant=\"contained\" onClick={this.submitSearch}>Search</Button>\n\n            <Button variant=\"contained\" onClick={this.viewAllUsers}>View All Users</Button>\n\n            <TextField\n              select\n              className={classNames(classes.margin, classes.textField)}\n              value={this.state.sortBy}\n              onChange={this.handleChange}\n              name=\"sortBy\"\n              InputProps={{\n                startAdornment: <InputAdornment position=\"start\">Sort</InputAdornment>,\n              }}\n            >\n              {ranges.map(option => (\n                <MenuItem key={option.value} value={option.value}>\n                  {option.label}\n                </MenuItem>\n              ))}\n            </TextField>\n\n          </form>\n        </span>\n      </div>\n\n        {/* Information on the expansion panel's summary bar (always shows) */}\n        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />} className={classes.summary}>\n        <div className={classes.title}>\n          <Typography variant=\"h2\" className={classes.heading}>Users</Typography>\n        </div>     \n        </ExpansionPanelSummary>\n\n        {/* Content that is within the expansion panel (shows when panel is expanded) */}\n        <ExpansionPanelDetails className={classes.details}>\n          <TableUsers users={this.props.reduxState.allUsers.allUsers} />\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n    </div>\n    );\n  }\n};\n\nconst styles = {\n  root: {\n    width: '100%',\n  },\n  details: {\n    alignItems: 'center',\n  },\n  heading: {\n    fontSize: \"1.5rem\",\n  },\n  summary: {\n    alignItems: 'center'\n  },\n  title: {\n    flexBasis: '75.00%',\n  },\n  searchField: {\n    width: 200,\n    margin: '0px 15px 25px 15px'\n  },\n  textField: {\n    width: 150,\n    margin: '0px 15px 25px 15px'\n  },\n  form: {\n    textAlign: 'center'\n  }\n};\n\nconst mapReduxStateToProps = (reduxState) => ({\n  reduxState\n});\n\nUsers.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default connect(mapReduxStateToProps)(withStyles(styles)(Users));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport TableUsers from '../../TableUsers/TableUsers';\n\n// Material-UI\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nclass DeactivatedUsers extends Component {\n\n  componentDidMount() {\n    this.props.dispatch({type: 'FETCH_DEACTIVATED_USERS'});\n  };\n\n  render() {\n    const { classes } = this.props;\n\n  return (\n    <div className={classes.root}>\n      <ExpansionPanel>\n\n        {/* Information on the expansion panel's summary bar (always shows) */}\n        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />} className={classes.summary}>\n        <div className={classes.title}>\n          <Typography variant=\"h2\" className={classes.heading}>Manage Deactivated Users</Typography>\n        </div>     \n        </ExpansionPanelSummary>\n\n        {/* Content that is within the expansion panel (shows when panel is expanded) */}\n        <ExpansionPanelDetails className={classes.details}>\n          <TableUsers users={this.props.reduxState.allUsers.deactivatedUsers}/>\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n    </div>\n    );\n  }\n};\n\nconst styles = {\n root: {\n  width: '100%',\n },\n details: {\n  alignItems: 'center',\n },\n heading: {\n  fontSize: \"1.5rem\",\n },\n summary: {\n  alignItems: 'center'\n },\n title: {\n  flexBasis: '75.00%',\n },\n};\n\nconst mapReduxStateToProps = (reduxState) => ({\n reduxState\n});\n\nDeactivatedUsers.propTypes = {\n classes: PropTypes.object.isRequired,\n};\n\nexport default connect(mapReduxStateToProps)(withStyles(styles)(DeactivatedUsers));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PendingClientRequests from './ExpansionPanels/PendingClientRequests';\nimport Users from './ExpansionPanels/Users';\nimport DeactivatedUsers from './ExpansionPanels/DeactivatedUsers';\n\n// Material-UI\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\n\nclass ManageUsers extends Component {\n\n  state = {\n  };\n\n  returnToDash = () => {\n    this.props.history.push('/dashboard');\n  };\n\n  render() {\n    const { classes } = this.props;\n  return (\n    <div className={classes.root}>\n      <Button variant=\"contained\" onClick={this.returnToDash}>Return to Dashboard</Button>\n      <PendingClientRequests />\n      <Users />\n      <DeactivatedUsers />\n    </div>\n    );\n  }\n};\n\nconst styles = {\n  root: {\n    width: '100%',\n  },\n};\n\nconst mapReduxStateToProps = (reduxState) => ({\n  reduxState\n});\n\nManageUsers.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default connect(mapReduxStateToProps)(withStyles(styles)(ManageUsers));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport colors from '../../App/colors';\n\n// Material-UI\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nclass EditUser extends Component {\n\nstate = {\n    open: false,\n    firstName: '',\n    lastName: '',\n    email: '',\n    id: 0\n};\n\nhandleChange = (event) => {\n    this.setState({\n        [event.target.name]: event.target.value\n    })\n};\n\nhandleClickOpen = () => {\n    this.setState({\n        open: true,\n        firstName: this.props.reduxState.user.firstname,\n        lastName: this.props.reduxState.user.lastname,\n        email: this.props.reduxState.user.email,\n        id: this.props.reduxState.user.id\n    })\n};\n\nhandleClickClose = () => {\n    this.setState({\n        ...this.state,\n        open: false\n    })\n}\n\nhandleSave = () => {\n    this.handleClickClose();\n    this.props.dispatch({type: 'EDIT_CURRENT_USER_INFO', payload: this.state});\n}\n\nrender () {\n    const { classes } = this.props;\n\n    return (\n        <div>\n            <Button className={classes.editButton} onClick={this.handleClickOpen} variant=\"contained\">Edit</Button>\n        <Dialog\n         open={this.state.open}\n         onClose={this.handleClickClose}\n         aria-labelledby=\"edit-user-info\"\n         scroll=\"paper\"\n         width= '400'\n         maxWidth=\"lg\"\n       >\n       <DialogTitle id=\"edit-user-info\" className={classes.header} variant=\"h4\">Edit User Info</DialogTitle>\n         <DialogContent>\n           <DialogContentText className={classes.header}>\n             Remember to save changes before closing this edit dialog.\n           </DialogContentText>\n         <div className={classes.div}>\n            <TextField\n                label=\"First Name\"\n                className={classes.textField}\n                onChange={this.handleChange}\n                margin=\"dense\"\n                variant=\"outlined\"\n                type=\"text\"\n                name=\"firstName\"\n                value={this.state.firstName}\n              />\n              <br />\n              <TextField\n                label=\"Last Name\"\n                className={classes.textField}\n                onChange={this.handleChange}\n                margin=\"dense\"\n                variant=\"outlined\"\n                type=\"text\"\n                name=\"lastName\"\n                value={this.state.lastName}\n              />\n            <br />\n            <TextField\n                label=\"Email\"\n                className={classes.textField}\n                onChange={this.handleChange}\n                margin=\"dense\"\n                variant=\"outlined\"\n                type=\"text\"\n                name=\"email\"\n                value={this.state.email}\n              />\n            <br />\n          </div>\n          </DialogContent>\n            <DialogActions>\n                <Button onClick={this.handleClickClose} color=\"primary\">\n                    Cancel\n                </Button>\n                <Button onClick={this.handleSave} color=\"primary\">\n                    Save Changes\n                </Button>\n            </DialogActions>\n          </Dialog>\n        </div>\n    )}\n}\n\n\nconst styles = {\n    textField: {\n      width: 400,\n      marginBottom: 15,\n      backgroundColor: 'white'\n    },\n    header: {\n      textAlign: 'center',\n      marginBottom: 25\n    },\n    editButton: {\n      marginTop: 2,\n      marginRight: 10,\n      float: 'right',\n    },\n    div: {\n      textAlign: 'left',\n      width: 400,\n      margin: 'auto',\n      padding: 20,\n      fontSize: 18,\n      background: colors.lightGrey,\n      borderRadius: 10\n    }\n  };\n\nconst mapReduxStateToProps = (reduxState) => ({\n    reduxState\n   });\nexport default connect(mapReduxStateToProps)(withStyles(styles)(EditUser));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport colors from '../../App/colors';\n\n// Material-UI\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nclass EditPassword extends Component {\n\nstate = {\n  open: false,\n  noMatch: false,\n  oldPassword: '',\n  newPassword: '',\n  confirmNewPassword: '',\n  passwordChanged: false,\n  changeError: false,\n};\n\nhandleClickOpen = () => {\n    this.setState({\n        ...this.state,\n        open: true\n    })\n}\n\nhandleClickClose = () => {\n    this.setState({\n      ...this.state,\n      open: false\n    })\n}\n\nhandleSave = () => {\n  if(this.state.newPassword !== this.state.confirmNewPassword){\n    this.setState({\n      ...this.state,\n      noMatch: true\n    })\n  } else {\n    axios.put('/resetPassword', {\n      oldPassword: this.state.oldPassword,\n      newPassword: this.state.newPassword,\n      username: this.props.reduxState.user.username,\n    }).then(response => {\n      if(response.data.message === 'Password change confirmed') {\n        this.setState({\n          ...this.state,\n          changeError: false,\n          passwordChanged: true,\n          noMatch: false,\n        })\n      } else if(response.data.message === 'Cannot verify credentials') {\n        this.setState({\n          ...this.state,\n          changeError: true,\n          passwordChanged: false,\n          noMatch: false,\n        })\n      }\n    }).catch((error) => {\n      console.log(error);\n    })\n  }\n}\n\nhandleChange = event => {\n  this.setState({\n    [event.target.name]: event.target.value\n  })\n}\n\nrender(){\n    const { classes } = this.props;\n\n    return(\n        <div>\n            <Button \n            onClick={this.handleClickOpen}\n            className={classes.button}\n            variant= \"contained\"\n            >Change Password</Button>\n        <Dialog\n         open={this.state.open}\n         onClose={this.handleClickClose}\n         aria-labelledby=\"edit-password\"\n         scroll=\"paper\"\n         width= '400'\n         maxWidth=\"lg\"\n       >\n       <DialogTitle id=\"edit-password\" className={classes.header}>Change Password</DialogTitle>\n         <DialogContent>\n           <DialogContentText className={classes.header}>\n             Remember to save changes before closing this edit dialog.\n           </DialogContentText>\n         <div className={classes.div}>\n            <TextField\n                label=\"Old Password\"\n                className={classes.textField}\n                margin=\"dense\"\n                variant=\"outlined\"\n                type=\"password\"\n                name=\"oldPassword\"\n                placeholder=\"Old Password\"\n                value={this.state.oldPassword}\n                onChange={this.handleChange}\n              />\n              <br />\n              <TextField\n                label=\"New Password\"\n                className={classes.textField}\n                margin=\"dense\"\n                variant=\"outlined\"\n                type=\"password\"\n                name=\"newPassword\"\n                placeholder=\"New Password\"\n                value={this.state.newPassword}\n                onChange={this.handleChange}\n              />\n            <br />\n            <TextField\n                label=\"Confirm New Password\"\n                className={classes.textField}\n                margin=\"dense\"\n                variant=\"outlined\"\n                type=\"password\"\n                name=\"confirmNewPassword\"\n                placeholder=\"Confirm New Password\"\n                value={this.state.confirmNewPassword}\n                onChange={this.handleChange}\n              />\n            <br />\n          </div>\n          {this.state.noMatch &&\n           <DialogContentText className={classes.feedback}>\n             New password does not match.\n           </DialogContentText>\n           }\n           {this.state.changeError &&\n           <DialogContentText className={classes.feedback}>\n             Old password unable to be confirmed, please try again.\n           </DialogContentText>\n           }\n           {this.state.passwordChanged &&\n           <DialogContentText className={classes.feedback}>\n             Password has successfully been changed.\n           </DialogContentText>\n           }\n          </DialogContent>\n            <DialogActions>\n              <Button onClick={this.handleClickClose} color=\"primary\">\n                Close\n              </Button>\n              <Button onClick={this.handleSave} color=\"primary\">\n                Save Changes\n              </Button>\n          </DialogActions>\n          </Dialog>\n        </div>\n    )\n  }\n}\n\nconst styles = {\n  textField: {\n    width: 400,\n    marginBottom: 15,\n    backgroundColor: 'white'\n  },\n  header: {\n    textAlign: 'center',\n    marginBottom: 25,\n  },\n  button: {\n    width: 200,\n    marginTop: 15,\n  },\n  div: {\n    textAlign: 'left',\n    width: 400,\n    margin: 'auto',\n    padding: 20,\n    fontSize: 18,\n    background: colors.lightGrey,\n    borderRadius: 10\n  },\n  feedback: {\n    textAlign: 'center',\n    marginBottom: 25,\n    color: 'red',\n  },\n};\n\nconst mapReduxStateToProps = (reduxState) => ({\n    reduxState\n   });\nexport default connect(mapReduxStateToProps)(withStyles(styles)(EditPassword));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\n// Material-UI\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nconst styles = {\n    container: {\n      margin: 25\n    },\n    textField: {\n      width: 400,\n      marginBottom: 15,\n      backgroundColor: 'white'\n    },\n    text: {\n      textAlign: 'left',\n      paddingTop: 10,\n      paddingBottom: 10,\n      fontSize: 18,\n      borderRadius: 10\n    },\n    form: {\n      textAlign: 'center',\n      padding: 50\n    },\n    header: {\n      textAlign: 'center',\n      marginBottom: 25\n    },\n    button: {\n      width: 200,\n      marginTop: 15,\n    },\n    \n    div: {\n      textAlign: 'left',\n      width: 400,\n      margin: 'auto',\n      padding: 20,\n      fontSize: 18,\n      background: '#eceff0',\n      borderRadius: 10\n    }\n  };\n\nclass RequestAccess extends Component {\n\nstate = {\n    open: false,\n    iziName: '',\n    date: '',\n    };\n\nhandleClickOpen = () => {\n    this.setState({\n        ...this.state,\n        open: true\n    })\n}\n\nhandleClickClose = () => {\n    this.setState({\n      ...this.state,\n      open: false\n    })\n}\n\nhandleSave = () => {\n    this.handleClickClose();\n    this.props.dispatch({\n      type: 'REQUEST_360_ACCESS', \n      payload: {\n        name: this.state.iziName, \n        date: this.state.date,\n        user: this.props.reduxState.user.id,\n      }});\n    this.setState({\n      iziName: '',\n      date: '',\n    })\n}\n\nhandleChange = event => {\n  this.setState({\n    [event.target.name]: event.target.value\n  })\n}\n\nrender(){\n    const { classes } = this.props;\n\n    return(\n      <div>\n        <Button\n        onClick={this.handleClickOpen} \n        className={classes.button} \n        variant= \"contained\"\n        >Request 360 Access</Button>\n        <Dialog\n          open={this.state.open}\n          onClose={this.handleClickClose}\n          aria-labelledby=\"request-access\"\n          scroll=\"paper\"\n          width= '400'\n          maxWidth=\"lg\"\n        >\n          <DialogTitle id=\"edit-password\" className={classes.header}>\n            Request IZI Access\n          </DialogTitle>\n          <DialogContent>\n            <DialogContentText className={classes.header}>\n              Remember to save changes before closing this edit dialog.\n            </DialogContentText>\n            <div className={classes.div}>\n              <TextField\n                label=\"IZI Name\"\n                className={classes.textField}\n                margin=\"dense\"\n                variant=\"outlined\"\n                type=\"text\"\n                name=\"iziName\"\n                placeholder=\"IZI Name\"\n                value={this.state.iziName}\n                onChange={this.handleChange}\n              />\n              <Typography variant=\"h6\" className={classes.header}>OR</Typography>\n              <TextField\n                className={classes.textField}\n                type=\"date\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                name =\"date\"\n                value={this.state.date}\n                onChange={this.handleChange}\n              />\n              <br />\n            </div>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleClickClose} color=\"primary\">\n              Cancel\n            </Button>\n            <Button onClick={this.handleSave} color=\"primary\">\n              Save Changes\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    )\n  }\n}\n\nconst mapReduxStateToProps = (reduxState) => ({\n    reduxState\n   });\nexport default connect(mapReduxStateToProps)(withStyles(styles)(RequestAccess));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport EditUser from './EditUser/EditUser';\nimport EditPassword from './EditUser/EditPassword';\nimport RequestAccess from './EditUser/RequestAccess';\nimport moment from 'moment';\nimport colors from '../App/colors';\n\n// Material-UI\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\nclass UserProfile extends Component {\n\n  componentDidMount(){\n    this.props.dispatch({type: 'FETCH_USER_INFO'});\n  }\n\n render() {\n   const { classes } = this.props;\n   const user = this.props.reduxState.user;\n\n   return (\n      <section>\n        <Typography variant=\"h3\" className={classes.header}>\n          User Profile\n        </Typography>\n        <div className={classes.div}>\n          <EditUser />\n            <Typography variant=\"body1\" className={classes.text}>\n              First Name: {user.firstname}\n            </Typography>\n            <Typography \n              variant=\"body1\" \n              className={classes.text}\n            >\n              Last Name: {user.lastname}\n            </Typography>\n            <Typography \n              variant=\"body1\" \n              className={classes.text}\n            >\n              Email: {user.email}\n            </Typography>\n          <EditPassword />\n        </div>\n        <div className={classes.div}>\n          <Typography \n            className={classes.text}>\n            Your Accessible 360s\n          </Typography>\n          {this.props.reduxState.userControls.user.map(izi => (\n            <Typography key={izi.id} className={classes.text}>\n            {izi.name}, {moment(izi.date).format('LL')}\n            <Button className={classes.viewButton} \n            variant=\"contained\">View</Button>\n          </Typography>\n          ))}   \n          <RequestAccess />\n          </div>\n     </section>\n   );\n }\n};\n\nconst styles = {\n  text: {\n    textAlign: 'left',\n    paddingTop: 10,\n    paddingBottom: 10,\n    fontSize: 18,\n    borderRadius: 10\n  },\n  header: {\n    textAlign: 'center',\n    marginTop: 40,\n    marginBottom: 25\n  },\n  viewButton: {\n    paddingTop: 10,\n    paddingBottom: 10,\n    marginRight: 200,\n    float: 'right'\n  },\n  div: {\n    textAlign: 'left',\n    width: 400,\n    margin: '25px auto',\n    padding: 20,\n    fontSize: 18,\n    background: colors.lightGrey,\n    borderRadius: 10\n  }\n};\n\nconst mapReduxStateToProps = (reduxState) => ({\n reduxState\n});\n\nexport default connect(mapReduxStateToProps)(withStyles(styles)(UserProfile));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { HashLink as Link } from 'react-router-hash-link';\n\n// Material-UI\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport List from '@material-ui/core/List';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Divider from '@material-ui/core/Divider';\n\nconst styles = {\n  list: {\n    paddingTop: '0px'\n  },\n};\n\nconst scrollWithOffset = (element, offset) => {\n  console.log('element:', element, 'offset:', offset)\n  element.scrollIntoView({\n    block: 'start',\n    behavior: 'smooth'\n  });\n}\n\nclass SideBar extends Component {\n\n  state = {\n    selectedIndex: 0,\n  };\n\n  handleMenuItemClick = (event, index) => {\n    this.setState({ \n      selectedIndex: index \n    });\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <List className={classes.list}>\n        {// Check if section is published\n        this.props.reduxState.current360.info[0].goals_published && \n        // Then check if section is public\n        (this.props.reduxState.current360.info[0].goals_public ||\n        // OR if user is a client with access\n        (this.props.reduxState.userControls.user.some(e => e.id === String(this.state.current360Id))\n        // OR if user is an employee or admin\n        || this.props.reduxState.user.id >= 4))?\n        <Link key=\"#goals-assessment\" smooth to=\"#goals-assessment\"\n        scroll={el => scrollWithOffset(el, 150)}\n        >\n          <MenuItem\n            selected={'goals' === this.state.selectedIndex}\n            onClick={event => this.handleMenuItemClick(event, 'goals')}\n          >\n            <Typography>{'Goals Assessment'}</Typography>\n          </MenuItem>\n          <Divider />\n        </Link> : null }\n        {// Check if section is published\n        this.props.reduxState.current360.info[0].dashboard_published && \n        // Then check if section is public\n        (this.props.reduxState.current360.info[0].dashboard_public ||\n        // OR if user is a client with access\n        (this.props.reduxState.userControls.user.some(e => e.id === String(this.state.current360Id))\n        // OR if user is an employee or admin\n        || this.props.reduxState.user.id >= 4)) ?\n        <Link key=\"#dashboard\" smooth to=\"#dashboard\"\n        scroll={el => scrollWithOffset(el, 150)}\n        >\n          <MenuItem\n            selected={'dashboard' === this.state.selectedIndex}\n            onClick={event => this.handleMenuItemClick(event, 'dashboard')}\n          >\n            <Typography>{'Dashboard'}</Typography>\n          </MenuItem>\n          <Divider />\n        </Link> : null }\n        {// Check if section is published\n        this.props.reduxState.current360.info[0].threesixty_reports_published && \n        // Then check if section is public\n        (this.props.reduxState.current360.info[0].threesixty_reports_public ||\n        // OR if user is a client with access\n        (this.props.reduxState.userControls.user.some(e => e.id === String(this.state.current360Id))\n        // OR if user is an employee or admin\n        || this.props.reduxState.user.id >= 4)) ?\n        <Link key=\"#360report\" smooth to=\"#360report\"\n        scroll={el => scrollWithOffset(el, 150)}\n        >\n          <MenuItem\n            selected={'360report' === this.state.selectedIndex}\n            onClick={event => this.handleMenuItemClick(event, '360report')}\n          >\n            <Typography>{'360 Report'}</Typography>\n          </MenuItem>\n          <Divider />\n        </Link> : null }\n        {// Check if section is published\n        this.props.reduxState.current360.info[0].analysis_recommendation_published && \n        // Then check if section is public\n        (this.props.reduxState.current360.info[0].analysis_recommendation_public ||\n        // OR if user is a client with access\n        (this.props.reduxState.userControls.user.some(e => e.id === String(this.state.current360Id))\n        // OR if user is an employee or admin\n        || this.props.reduxState.user.id >= 4)) ?\n        <Link key=\"#analysis\" smooth to=\"#analysis\"\n        scroll={el => scrollWithOffset(el, 150)}\n        >\n          <MenuItem\n            selected={'analysisRec' === this.state.selectedIndex}\n            onClick={event => this.handleMenuItemClick(event, 'analysisRec')}\n          >\n            <Typography>{'Analysis & Recommendations'}</Typography>\n          </MenuItem>\n          <Divider />\n        </Link> : null }\n        {// Check if section is published\n        this.props.reduxState.current360.info[0].demographics_published && \n        // Then check if section is public\n        (this.props.reduxState.current360.info[0].demographics_public ||\n        // OR if user is a client with access\n        (this.props.reduxState.userControls.user.some(e => e.id === String(this.state.current360Id))\n        // OR if user is an employee or admin\n        || this.props.reduxState.user.id >= 4)) ?\n        <Link key=\"#demo-data\" smooth to=\"#demo-data\"\n        scroll={el => scrollWithOffset(el, 150)}\n        >\n          <MenuItem\n            selected={'demoData' === this.state.selectedIndex}\n            onClick={event => this.handleMenuItemClick(event, 'demoData')}\n          >\n            <Typography>{'Demographic Data'}</Typography>\n          </MenuItem>\n          <Divider />\n        </Link> : null }\n        {// Check if section is published\n        this.props.reduxState.current360.info[0].demographics_published ?\n        <Link key=\"#demo-data-charts\" smooth to=\"#demo-data-charts\"\n        scroll={el => scrollWithOffset(el, 150)}\n        >\n          <MenuItem\n            selected={'demoDataCharts' === this.state.selectedIndex}\n            onClick={event => this.handleMenuItemClick(event, 'demoDataCharts')}\n          >\n            <Typography>{'Demographic Data Charts'}</Typography>\n          </MenuItem>\n          <Divider />\n        </Link> : null }\n      </List>\n    );\n  }\n};\n\nconst mapReduxStateToProps = (reduxState) => ({\n  reduxState\n});\n\nexport default connect(mapReduxStateToProps)(withStyles(styles)(SideBar));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport colors from '../../App/colors';\n\n// Material-UI\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport CheckCircleOutline from '@material-ui/icons/CheckCircleOutline';\nimport Close from '@material-ui/icons/Close';\n\n// Cleanly style table cells within Material-UI\nconst CustomTableCell = withStyles(theme => ({\n  head: {\n    fontSize: '1rem',\n    backgroundColor: colors.orange,\n    color: 'white',\n    padding: 10,\n    textAlign: 'center'\n  },\n  body: {\n    padding: 5,\n  },\n}))(TableCell);\n\nclass TableUsers extends Component {\n\n  clearRequest = (id) => {\n    this.props.dispatch({type: 'DELETE_PENDING_REQUEST', payload: id});\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <Paper className={classes.rootTable}>\n        <Table className={classes.table}>\n          <TableHead>\n            <TableRow>\n              {this.props.headers.map( (header, index) => \n                  <CustomTableCell key={index} width={this.props.width[index]}>{header}</CustomTableCell>\n                )}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {this.props.data.map(row => {\n            return (\n              <TableRow key={row.id}>\n                {this.props.cellVariables.map(( variable, index ) => \n                  <CustomTableCell key={index} width={this.props.width[index]} component=\"th\" scope=\"row\" className={this.props.className[index]}>\n                    {/* Check if value is truthie. If true, print 'yes' */}\n                    {row[variable] === true ? <CheckCircleOutline className={classes.iconColored}/> : \n                    // Next, check if value is falsie. If not, print the value\n                    ((row[variable] === false || row[variable] === null) ? <Close /> : row[variable])}\n                  </CustomTableCell>\n                )}\n              </TableRow>\n            );\n            })}\n          </TableBody>\n        </Table>\n      </Paper>\n    );\n  }\n};\n\nconst styles = {\n rootTable: {\n  width: '95%',\n  alignItems: 'center',\n  marginLeft: 'auto',\n  marginRight: 'auto',\n  overflowX: 'scroll'\n },\n centerText: {\n  textAlign: 'center'\n },\n colorBar: {\n  // needs to be here for custom-css switch to work.\n },\n colorChecked: {\n  // needs to be here for custom-css switch to work.\n },\n colorSwitchBase: {\n  color: colors.orange,\n  '&$colorChecked': {\n   color: colors.orange,\n   '& + $colorBar': {\n    backgroundColor: colors.orange\n   }\n  }\n },\n details: {\n  alignItems: 'center',\n },\n heading: {\n  fontSize: \"1.5rem\",\n },\n icon: {\n  verticalAlign: 'bottom',\n  height: 20,\n  width: 20,\n },\n iconColored: {\n  color: colors.pink\n },\n status: {\n  flexBasis: '25.00%',\n  alignItems: 'center',\n  justifyContent: 'flex-end',\n  display: 'flex'\n },\n table: {\n  minWidth: 700\n },\n title: {\n  flexBasis: '75.00%',\n },\n};\n\nconst mapReduxStateToProps = (reduxState) => ({\n reduxState\n});\n\nTableUsers.propTypes = {\n classes: PropTypes.object.isRequired,\n};\n\nexport default connect(mapReduxStateToProps)(withStyles(styles)(TableUsers));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\n// Material-UI\nimport { withStyles } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport ReactLoading from 'react-loading';\nimport colors from '../App/colors';\n\nclass LoadingDialog extends Component {\n\n state = {\n\n };\n\n componentDidMount() {\n    this.props.dispatch({ type: 'FETCH_360', payload: {current360Id: 1} })\n }\n\n render() {\n   const { classes } = this.props;\n\n   return (\n     <React.Fragment>\n      <Dialog\n        open={this.props.reduxState.current360.loadingDialogOpen}\n        aria-labelledby=\"info-publish-dialog\"\n        scroll=\"paper\"\n        fullWidth\n        maxWidth=\"lg\"\n        classes={{paper: classes.paper}}\n      >\n        <DialogTitle id=\"info-publish-dialog\" className={classes.center}>Loading 360</DialogTitle>\n        <DialogContent id=\"info-publish-dialog-content\" className={classes.center} ref={(el) => { this.scroll = el; }}>\n          <ReactLoading type={'bubbles'} color={colors.pink} delay={0} height={100} width={100}/>\n        </DialogContent>\n      </Dialog>\n    </React.Fragment>\n   );\n }\n};\n\nconst styles = {\n  center: {\n    textAlign: 'center',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'flex-start'\n  },\n  paper: {\n    width: 300,\n    height: 200,\n  },\n};\n\nconst mapReduxStateToProps = (reduxState) => ({\n reduxState\n});\n\nexport default connect(mapReduxStateToProps)(withStyles(styles)(LoadingDialog));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport colors from '../App/colors';\nimport { Pie } from 'react-chartjs-2';\nimport moment from 'moment';\nimport { Textfit } from 'react-textfit';\nimport SideBar from './SideBar';\nimport TableTemplate from './TableTemplate/TableTemplate';\nimport MarkDownOutput from '../MarkdownOutput/MarkdownOutput';\nimport LoadingDialog from './LoadingDialog';\n\n// Material-UI\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Divider from '@material-ui/core/Divider';\n\nclass View360 extends Component {\n\n  state = {\n    current360Id: this.props.match.params.id,\n  };\n\n  // navigates to /\n  back = (event) => {\n    event.preventDefault();\n    this.props.history.push('/');\n  }\n\n  componentDidMount() {\n    this.props.dispatch({ type: 'FETCH_360', payload: {current360Id: this.state.current360Id} });\n    this.props.dispatch({ type: 'FETCH_USER_INFO' });\n  }\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <Grid container spacing={0}>\n        <LoadingDialog />\n        <Grid className={classes.sideBar} item xs={2}>\n          <Button\n            className={classes.manage360Btn} \n            variant=\"contained\"\n            onClick={this.back}\n          >\n            Return to Home Page\n          </Button>\n          <Divider />\n          <SideBar />\n        </Grid>\n        <Grid className={classes.report} item xs={10}>\n          <Textfit forceSingleModeWidth={false} className={classes.header}>\n            {this.props.reduxState.current360.info[0].name}\n          </Textfit>\n          {/* <Typography variant=\"h2\" className={classes.header}></Typography> */}\n          <section className={classes.mainReportInfo}>\n            <Typography className={classes.subHeader}>{this.props.reduxState.current360.info[0].client}</Typography>\n            <Typography className={classes.subHeader}>{this.props.reduxState.current360.info[0].location}</Typography>\n            <Typography className={classes.subHeader}>{moment(this.props.reduxState.current360.info[0].date).format('ll')}</Typography>\n            <Divider className={classes.middleDivider} />\n          </section>\n          {// Check if section is published\n          this.props.reduxState.current360.info[0].goals_published && \n          // Then check if section is public\n          (this.props.reduxState.current360.info[0].goals_public ||\n          // OR if user is a client with access\n          (this.props.reduxState.userControls.user.some(e => e.id === String(this.state.current360Id))\n          // OR if user is an employee or admin\n          || this.props.reduxState.user.id >= 4)) ?\n          <section className={classes.section}>\n            {/* anchor div for sidebar scroll placement */}\n            <div style={{position: 'relative'}}>\n              <div id=\"goals-assessment\" style={{position: 'absolute', top: -80, left: 0}}></div>\n            </div>            \n            {/* sticky header for section */}\n            <div className={classes.sticky}>\n              <Typography variant=\"h4\" className={classes.sectionHeader}>Goals Assessment</Typography>\n            </div>\n            {/* section content */}\n            <TableTemplate \n              headers={['Description', 'Desired', 'Delivered', 'Difference', 'Percent', 'Comments']} \n              width={['25%',null,null,null,null,null]}\n              data={this.props.reduxState.current360.goalsAssessment} \n              className={[null,classes.centerText,classes.centerText,classes.centerText,classes.centerText,null]}\n              cellVariables={['description', 'desired', 'delivered', 'difference', 'percent', 'comments']} \n            />\n          </section> : null}\n          {// Check if section is published\n          this.props.reduxState.current360.info[0].dashboard_published && \n          // Then check if section is public\n          (this.props.reduxState.current360.info[0].dashboard_public ||\n          // OR if user is a client with access\n          (this.props.reduxState.userControls.user.some(e => e.id === String(this.state.current360Id))\n          // OR if user is an employee or admin\n          || this.props.reduxState.user.id >= 4)) ?\n          <section className={classes.section}>\n            {/* anchor div for sidebar scroll placement */}\n            <div style={{position: 'relative'}}>\n              <div id=\"dashboard\" style={{position: 'absolute', top: -80, left: 0}}></div>\n            </div>\n            {/* sticky header for section */}\n            <div className={classes.sticky}>\n              <Typography variant=\"h4\" className={classes.sectionHeader}>Dashboard</Typography>\n            </div>\n            {/* section content */}\n            <TableTemplate \n              headers={['Description', 'Details']} \n              width={[null,null]}\n              data={this.props.reduxState.current360.dashboard} \n              className={[null,null]}\n              cellVariables={['row_title', 'row_info']} \n            />\n          </section> : null}\n          {// Check if section is published\n          this.props.reduxState.current360.info[0].threesixty_reports_published && \n          // Then check if section is public\n          (this.props.reduxState.current360.info[0].threesixty_reports_public ||\n          // OR if user is a client with access\n          (this.props.reduxState.userControls.user.some(e => e.id === String(this.state.current360Id))\n          // OR if user is an employee or admin\n          || this.props.reduxState.user.id >= 4)) ?\n          <section className={classes.section}>\n            {/* anchor div for sidebar scroll placement */}\n            <div style={{position: 'relative'}}>\n              <div id=\"360report\" style={{position: 'absolute', top: -80, left: 0}}></div>\n            </div>\n            {/* sticky header for section */}\n            <div className={classes.sticky}>\n              <Typography variant=\"h4\" className={classes.sectionHeader}>360 Report</Typography>\n            </div>\n            {/* section content */}\n            <div className={classes.threesixtyReport}>\n              <Typography variant=\"h5\" className={classes.header5}>The 360 Report | Event Overview</Typography>\n                <Typography variant=\"h6\" className={classes.header6}>Demographics</Typography>\n                  <div className={classes.paragraph}>\n                    {this.props.reduxState.current360.threesixty_reports.map((row, index) => \n                      <MarkDownOutput display={row.demographic} key={index}/>)}\n                  </div>\n                <Typography variant=\"h6\" className={classes.header6}>The 360 Report | Summary, Overview</Typography>\n                  <div className={classes.paragraph}>\n                    {this.props.reduxState.current360.threesixty_reports.map((row, index) => \n                      <MarkDownOutput display={row.summary} key={index}/>)}\n                  </div>\n              <Typography variant=\"h5\" className={classes.header5}>Mindstorm Themes &amp; Analysis</Typography>\n                <Typography variant=\"h6\" className={classes.header6}>Overview | Methodology</Typography>\n                  <div className={classes.paragraph}>\n                    {this.props.reduxState.current360.threesixty_reports.map((row, index) => \n                      <MarkDownOutput display={row.demographic} key={index}/>)}\n                  </div>\n                <div className={classes.paragraph}>\n                  {this.props.reduxState.current360.question_set.map((row, index) => \n                    <React.Fragment key={`question-set-${index}`}>\n                      <Typography variant=\"h6\" className={classes.header6}>{row.set_title}</Typography>\n                      <MarkDownOutput display={row.breakdown} key={index}/>\n                      {row.response !== null ? \n                        <React.Fragment>\n                          <Typography variant=\"h6\">Responses:</Typography>\n                          <MarkDownOutput display={row.response} key={'response'+index}/> \n                        </React.Fragment>: null}\n                    </React.Fragment>\n                  )}\n                </div>\n                <Typography variant=\"h5\" className={classes.header5}>The 360 Report | Oral Report Notes</Typography>\n                <Typography variant=\"h6\" className={classes.header6}>Mindstorm Oral Report Notes</Typography>\n                  <div className={classes.paragraph}>\n                    {this.props.reduxState.current360.oral_report.map((row, index) => \n                      <p key={index}><strong>Group&nbsp;{row.group_num}:&nbsp;</strong>{row.response}</p>)}\n                  </div>\n                <Typography variant=\"h5\" className={classes.header5}>Circle Share-In</Typography>\n                  <div className={classes.paragraph}>\n                    {this.props.reduxState.current360.circle_share.map((row, index) => \n                      <React.Fragment key={index}>\n                        <p><strong>{row.question}</strong></p>\n                        <MarkDownOutput display={row.responses}/> \n                    </React.Fragment>)}\n                  </div>\n            </div>\n          </section> : null }\n          {// Check if section is published\n          this.props.reduxState.current360.info[0].analysis_recommendation_published && \n          // Then check if section is public\n          (this.props.reduxState.current360.info[0].analysis_recommendation_public ||\n          // OR if user is a client with access\n          (this.props.reduxState.userControls.user.some(e => e.id === String(this.state.current360Id))\n          // OR if user is an employee or admin\n          || this.props.reduxState.user.id >= 4))  ?\n          <section className={classes.section}>\n            {/* anchor div for sidebar scroll placement */}\n            <div style={{position: 'relative'}}>\n              <div id=\"analysis\" style={{position: 'absolute', top: -80, left: 0}}></div>\n            </div>\n            {/* sticky header for section */}\n            <div className={classes.sticky}>\n              <Typography variant=\"h4\" className={classes.sectionHeader}>Analysis and Recommendations</Typography>\n            </div>\n              <Typography variant=\"h5\" className={classes.header5}>Outreach Findings</Typography>\n                <div className={classes.paragraph}>\n                  {this.props.reduxState.current360.analysis_recommendation.map((row, index) => \n                    <MarkDownOutput display={row.findings} key={index}/>)}\n                </div>\n              <Typography variant=\"h5\" className={classes.header5}>Recommendation</Typography>\n                <div className={classes.paragraph}>\n                {this.props.reduxState.current360.analysis_recommendation.map((row, index) => \n                    <MarkDownOutput display={row.recommendations} key={index}/>)}\n                </div>\n          </section> : null }\n          {// Check if section is published\n          this.props.reduxState.current360.info[0].demographics_published && \n          // Then check if section is public\n          (this.props.reduxState.current360.info[0].demographics_public ||\n          // OR if user is a client with access\n          (this.props.reduxState.userControls.user.some(e => e.id === String(this.state.current360Id))\n          // OR if user is an employee or admin\n          || this.props.reduxState.user.id >= 4)) ?\n          <section className={classes.section}>\n            {/* anchor div for sidebar scroll placement */}\n            <div style={{position: 'relative'}}>\n              <div id=\"demo-data\" style={{position: 'absolute', top: -80, left: 0}}></div>\n            </div>\n            {/* sticky header for section */}\n            <div className={classes.sticky}>\n              <Typography variant=\"h4\" className={classes.sectionHeader}>IZI Demographic Data</Typography>\n            </div>\n            {/* section content */}\n            <p className={classes.paragraph}>\n              IZI Demo Key:<br></br>\n              A - Plans to tell someone<br></br>\n              B - First time at the Table<br></br>\n              C - Interested in future conversations about preventing child abuse and neglect<br></br>\n              D - Interested in future conversations about housing<br></br>\n              E - Interested in future conversations about transportation<br></br>\n              F - Interested in future conversations about education\n            </p>\n            <TableTemplate \n              headers={['Ethnic', 'Passion', 'Profession', 'Generation', 'Referral', 'Comments',\n                        'A', 'B', 'C', 'D', 'E', 'F']} \n              width={['10%', '10%', '10%', '10%', null, null, null, null, null, null, null, null]}\n              data={this.props.reduxState.current360.demographics} \n              className={[null,null]}\n              cellVariables={['ethnicity','passion', 'profession','generation','referral','comments','plans_to_tell',\n                        'first_time','child_abuse','housing','transportation','education']}\n              interpretBoolean={true}\n            />\n            </section> : null }\n            {this.props.reduxState.current360.info[0].demographics_published ?\n            <section className={classes.section}>\n            {/* anchor div for sidebar scroll placement */}\n            <div style={{position: 'relative'}}>\n              <div id=\"demo-data-charts\" style={{position: 'absolute', top: -80, left: 0}}></div>\n            </div>\n            {/* sticky header for section */}\n            <div className={classes.sticky}>\n              <Typography variant=\"h4\" className={classes.sectionHeader}>IZI Demographic Data Charts</Typography>\n            </div>\n            {/* <TrueFalse data={this.props.reduxState.current360.chart_data}/> */}\n            <Grid container>\n            {this.props.reduxState.current360.chart_data.map(data => (\n              <Grid item xs={data.grid_xs} sm={data.grid_sm} id=\"trueFalse\" className={classes.chart} key={data.title}>\n                <Pie\n                  data={{\n                    labels: data.labels,\n                    datasets: [\n                      {\n                        data: \n                        data.data,\n                        backgroundColor: [\n                          colors.purple,\n                          colors.red,\n                          colors.pink,\n                          colors.orange,\n                          colors.purpleHover,\n                          colors.redHover,\n                          colors.pinkHover,\n                          colors.orangeHover,\n                        ]\n                      }\n                    ]\n                  }}\n                  height={200}\n                  options={{\n                    title:{\n                      display: true,\n                      text: data.title,\n                      fontSize:15\n                    },\n                    legend:{\n                      display: data.legend,\n                      position: 'left'\n                    },\n                    responsive: true,\n                  }}\n                />\n              </Grid>\n            ))}\n            </Grid>\n          </section> : null }\n        </Grid>\n      </Grid>\n    );\n  }\n};\n\nconst styles = {\n  centerText: {\n    textAlign: 'center'\n  },\n  chart: {\n    padding: 20\n  },\n  header: {\n    margin: '50px 0px 25px 0px',\n    position: 'sticky',\n    top: 0,\n    backgroundColor: 'white',\n    textAlign: 'center',\n    padding: '10px',\n    zIndex: '1050',\n    color: colors.purple,\n    fontWeight: 'bold',\n    height: 60\n  },\n  header5: {\n    margin: '0px 10px 0px 10px',\n    textAlign: 'right',\n    fontWeight: 'bold'\n  },\n  header6: {\n    margin: '0px 10px 0px 10px',\n    color: colors.red,\n    textAlign: 'right',\n    fontWeight: 'bold'\n  },\n  mainReportInfo: {\n    textAlign: 'center',\n  },\n  manage360Btn: {\n    margin: '15px 0px',\n    justifyContent: 'center',\n  },\n  middleDivider: {\n    margin: '25px auto',\n    width: '90%'\n  },\n  paragraph: {\n    margin: '0px 10px 0px 10px',\n    fontSize: '0.8125rem'\n  },\n  report: {\n    height: 'calc(100vh - 122px)',\n    overflowY: 'auto',\n    overflowX: 'auto',\n  },\n  section: {\n    paddingBottom: 20\n  },\n  sectionHeader: {\n    padding: 10,\n    fontSize: '1.5rem',\n    fontWeight: 'bold',\n    color: colors.purple\n  },\n  sideBar: {\n    height: 'calc(100vh - 122px)',\n    backgroundColor: '#ccc',\n    textAlign: 'center',\n  },\n  sticky: {\n    position: 'sticky',\n    top: 80,\n    backgroundColor: 'white',\n    boxShadow: 'box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);'\n  },\n  subHeader: {\n    marginBottom: '15px',\n    fontSize: '1.5rem'\n  },\n};\n\nconst mapReduxStateToProps = (reduxState) => ({\n  reduxState\n});\n\nexport default connect(mapReduxStateToProps)(withStyles(styles)(View360));","import React, { Component } from 'react';\nimport axios from 'axios';\nimport colors from '../App/colors';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\nconst loading = {\n  margin: '1em',\n  fontSize: '24px',\n};\n\nclass ResetPassword extends Component {\n\n  state = {\n    username: '',\n    password: '',\n    confirmPassword: '',\n    update: false,\n    isLoading: true,\n    error: false,\n  }\n\n  async componentDidMount() {\n    await axios\n      .get('/forgotPassword', {\n        params: {\n          passwordResetToken: this.props.match.params.token,\n        },\n      })\n      .then(response => {\n        if (response.data.message === 'password reset link ok') {\n          this.setState({\n            username: response.data.username,\n            update: false,\n            isLoading: false,\n            error: false,\n          });\n        } else {\n          this.setState({\n            update: false,\n            isLoading: false,\n            error: true,\n          });\n        }\n      })\n      .catch(error => {\n        console.log(error.data);\n      });\n  }\n\n  handleChange = name => event => {\n    this.setState({\n      [name]: event.target.value,\n    });\n  };\n\n  updatePassword = e => {\n    e.preventDefault();\n    axios\n      .put('/forgotPassword', {\n        username: this.state.username,\n        password: this.state.password,\n        token: this.props.match.params.token,\n      })\n      .then(response => {\n        if (response.data.message === 'password updated') {\n          this.setState({\n            updated: true,\n            error: false,\n          });\n        } else {\n          this.setState({\n            updated: false,\n            error: true,\n          });\n        }\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  };\n\n  render() {\n    const { classes } = this.props;\n    const { password, error, isLoading, updated } = this.state;\n    if (error) {\n      return (\n        <div className={classes.container}>\n          <div style={loading}>\n            <Typography className={classes.error} variant=\"h6\">Problem resetting password. Please send another reset link.</Typography>\n          </div>\n        </div>\n      );\n    } else if (isLoading) {\n      return (\n        <div className={classes.container}>\n          <div style={loading}>Loading User Data...</div>\n        </div>\n      );\n    } else {\n      return (\n        <div className={classes.container}>\n          <form onSubmit={this.updatePassword}>\n          <Typography className={classes.header} variant=\"h6\">Enter New Password</Typography>\n            <TextField\n              id=\"password\"\n              label=\"password\"\n              onChange={this.handleChange('password')}\n              value={password}\n              type=\"password\"\n            />\n            <Button className={classes.submitButton} variant=\"contained\" onClick={this.updatePassword}>Submit</Button>\n          </form>\n          {updated && (\n            <div>\n              <Typography variant=\"h6\">\n                Your password has been successfully reset, please try <a href=\"/login#/profile\">logging in</a> again.\n              </Typography>\n            </div>\n          )}\n        </div>\n      )\n    }\n  }\n}\n\nconst styles = {\n  container: {\n    margin: 'auto',\n    textAlign: 'center',\n    padding: 20,\n  },\n  header: {\n    margin: '25px auto',\n  },\n  error: {\n    marginBottom: 50,\n    padding: 10,\n    color: 'white',\n    backgroundColor: colors.red\n  },\n  submitButton:{\n    display: 'block',\n    margin: '25px auto'\n  },\n}\n\nexport default (withStyles(styles)(ResetPassword));","import React, {Component} from 'react';\nimport {\n  HashRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from 'react-router-dom';\nimport {connect} from 'react-redux';\n\nimport Nav from '../Nav/Nav';\nimport Footer from '../Footer/Footer';\n\nimport ProtectedRoute from '../ProtectedRoute/ProtectedRoute';\nimport EmployeeRoute from '../ProtectedRoute/EmployeeRoute';\n\nimport Create360 from '../Create360/Create360';\nimport CreateUser from '../CreateUser/CreateUser';\nimport Dashboard from '../Dashboard/Dashboard';\nimport Generate360 from '../Generate360/Generate360';\nimport Home from '../HomePage/HomePage';\nimport Login from '../Login/Login';\nimport Manage360s from '../Manage360s/Manage360s';\nimport ManageUsers from '../ManageUsers/ManageUsers';\nimport UserProfile from '../UserProfile/UserProfile';\nimport View360 from '../View360/View360';\nimport ResetPassword from '../ResetPassword/ResetPassword';\n\nimport './App.css';\n\nclass App extends Component {\n  componentDidMount () {\n    this.props.dispatch({type: 'FETCH_USER'});\n    this.props.dispatch({type: 'FETCH_IZI_CATEGORIES'});\n  }\n\n  render() {\n    return (\n      <Router>\n        <div style= {{height: '100%'}}>\n          <Nav />\n          <section className=\"paper\"> \n            <Switch>\n              \n              <Redirect exact from=\"/\" to=\"/home\" />\n\n              {/* For the following pages, no login is necessary. */}\n              <Route\n                exact\n                path=\"/home\"\n                component={Home}\n              />\n              <Route\n                exact\n                path=\"/view360/:id\"\n                component={View360}\n              />\n              <Route\n                exact\n                path=\"/login\"\n                component={Login}\n              />\n              <Route\n                exact\n                path=\"/register\"\n                component={CreateUser}\n              />\n              <Route\n                exact\n                path=\"/reset/:token\"\n                component={ResetPassword}\n              />\n\n              {/* The following pages are protected. The user's access level will be checked.\n                The user will be directed to the login page if they are not logged in, and to \n                the home page if they are logged in without the appropriate authorization level */}\n              <ProtectedRoute\n                exact\n                path=\"/profile\"\n                component={UserProfile}\n              />\n              <EmployeeRoute\n                exact\n                path=\"/dashboard\"\n                component={Dashboard}\n              />\n              <EmployeeRoute\n                exact\n                path=\"/create360\"\n                component={Create360}\n              />\n              <EmployeeRoute\n                exact\n                path=\"/manage360s\"\n                component={Manage360s}\n              />\n              <EmployeeRoute\n                exact\n                path=\"/manageUsers\"\n                component={ManageUsers}\n              />\n              <EmployeeRoute\n                exact\n                path=\"/generate360/:id\"\n                component={Generate360}\n              />\n\n              {/* If none of the other routes matched, we will show a 404. */}\n              <Route render={() => <h1 style={{textAlign: 'center', paddingTop: 20}}>404 - This site is not found.</h1>} />\n            </Switch>\n          </section>\n          <Footer />\n        </div>\n      </Router>\n  )}\n}\n\nexport default connect()(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport createSagaMiddleware from 'redux-saga';\nimport logger from 'redux-logger';\n\nimport rootReducer from './redux/reducers'; // imports ./redux/reducers/index.js\nimport rootSaga from './redux/sagas'; // imports ./redux/sagas/index.js\n\nimport App from './components/App/App';\n\nconst sagaMiddleware = createSagaMiddleware();\n\n// this line creates an array of all of redux middleware you want to use\n// we don't want a whole ton of console logs in our production code\n// logger will only be added to your project if your in development mode\nconst middlewareList = process.env.NODE_ENV === 'development' ?\n  [sagaMiddleware, logger] :\n  [sagaMiddleware];\n\nconst store = createStore(\n  // tells the saga middleware to use the rootReducer\n  // rootSaga contains all of our other reducers\n  rootReducer,\n  // adds all middleware to our project including saga and logger\n  applyMiddleware(...middlewareList),\n);\n\n// tells the saga middleware to use the rootSaga\n// rootSaga contains all of our other sagas\nsagaMiddleware.run(rootSaga);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('react-root'),\n);\n"],"sourceRoot":""}